{"version":3,"sources":["../../common/lib/backend-impl.ts","../../common/lib/backend.ts","../../common/lib/version.ts","../../common/lib/env-impl.ts","../../common/lib/env.ts","../../common/lib/tensor-conversion-impl.ts","../../common/lib/tensor-factory-impl.ts","../../common/lib/tensor-impl-type-mapping.ts","../../common/lib/tensor-utils-impl.ts","../../common/lib/tensor-impl.ts","../../common/lib/tensor.ts","../../common/lib/trace.ts","../../common/lib/inference-session-impl.ts","../../common/lib/inference-session.ts","../../common/lib/tensor-conversion.ts","../../common/lib/tensor-factory.ts","../../common/lib/onnx-model.ts","../../common/lib/onnx-value.ts","../../common/lib/index.ts","../lib/wasm/wasm-utils-env.ts","../lib/wasm/proxy-worker/main.ts","ort-wasm-simd-threaded.asyncify.mjs","../lib/wasm/wasm-utils-import.ts","../lib/wasm/wasm-factory.ts","../lib/wasm/wasm-utils.ts","../lib/wasm/run-options.ts","../lib/wasm/session-options.ts","../lib/wasm/wasm-common.ts","../lib/wasm/wasm-utils-load-file.ts","../lib/wasm/jsep/tensor-view.ts","../lib/wasm/jsep/log.ts","../lib/wasm/jsep/webnn/tensor-manager.ts","../lib/wasm/jsep/backend-webnn.ts","../lib/wasm/wasm-core-impl.ts","../lib/wasm/proxy-wrapper.ts","../lib/wasm/session-handler-inference.ts","../lib/backend-wasm.ts","../lib/index.ts","../lib/version.ts"],"names":["backends","backendsSortedByPriority","registerBackend","tryResolveAndInitializeBackend","resolveBackendAndExecutionProviders","init_backend_impl","__esmMin","name","backend","priority","currentBackend","i","backendName","backendInfo","isInitializing","e","options","eps","backendHints","backendNames","errors","availableBackendNames","resolveResult","err","filteredEps","target","prop","init_backend","version","init_version","logLevelValue","env","init_env_impl","value","init_env","tensorToDataURL","tensorToImageData","init_tensor_conversion_impl","tensor","canvas","pixels2DContext","width","height","inputformat","norm","normMean","normBias","stride","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","j","R","G","B","A","image","channels","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","bufferToTensor","tensorFromImage","tensorFromTexture","tensorFromGpuBuffer","tensorFromMLTensor","tensorFromPinnedBuffer","init_tensor_factory_impl","init_tensor_impl","buffer","outputformat","float32Data","Tensor","isHTMLImageEle","isImageDataEle","isImageBitmap","isString","data","bufferToTensorOptions","createCanvas","createCanvasContext","tempCanvas","resolve","reject","context","newImage","img","texture","download","dispose","dims","gpuBuffer","dataType","mlTensor","type","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isTypedArrayChecked","checkTypedArray","init_tensor_impl_type_mapping","isBigInt64ArrayAvailable","isBigUint64ArrayAvailable","Float16Array","isFloat16ArrayAvailable","calculateSize","tensorReshape","init_tensor_utils_impl","size","dim","arg0","arg1","arg2","expectedTypedArrayConstructor","maybeDims","typedArrayConstructor","firstElementType","mappedType","releaseData","init_tensor","TRACE","TRACE_FUNC","TRACE_FUNC_BEGIN","TRACE_FUNC_END","TRACE_EVENT_BEGIN","TRACE_EVENT_END","init_trace","deviceType","label","msg","extraMsg","stack","hasTraceFunc","InferenceSession","init_inference_session_impl","_InferenceSession","handler","feeds","fetches","isFetchesEmpty","isFetches","arg1Keys","v","results","returnValue","key","result","arg3","filePathOrUint8Array","byteOffset","byteLength","optionsWithValidatedEPs","init_inference_session","init_tensor_conversion","init_tensor_factory","init_onnx_model","init_onnx_value","esm_exports","__export","init_esm","init_wasm_utils_env","main_exports","main_default","WORKER_NAME","isProxyWorker","init_main","init_wasm_core_impl","init_wasm_factory","init_wasm_utils_import","ev","message","initializeWebAssembly","initRuntime","epName","initEp","bufferData","copyFromExternalBuffer","model","createSession","sessionMetadata","releaseSession","sessionId","inputIndices","inputs","outputIndices","run","outputs","o","extractTransferableBuffers","endProfiling","urlOverride","scriptSrc","ort_wasm_simd_threaded_asyncify_exports","ort_wasm_simd_threaded_asyncify_default","init_ort_wasm_simd_threaded_asyncify","r","t","n","a","l","u","f","ke","ze","s","c","d","y","m","D","p","g","_","C","h","b","w","x","O","S","T","P","E","M","W","U","N","k","I","F","L","$","z","Kt","pi","Ut","yi","je","V","yt","gi","xe","kt","H","ct","q","Y","Q","X","Z","J","st","hi","wi","Si","Ti","Ai","Bi","Pi","Ei","Mi","Ri","Wi","Di","Ui","ki","Ii","Fi","Yi","Xi","te","oe","le","ue","ce","Ce","he","be","Oe","Te","Ae","Be","Pe","Re","We","He","Ye","Ze","Ki","Je","ir","nr","tr","ar","or","lr","ur","fr","sr","cr","dr","yr","mr","_r","Cr","hr","br","xr","Or","Ar","Er","Mr","Rr","Sr","Wr","Dr","Ur","jr","kr","Ir","Gr","Fr","Vr","Nr","cn","dn","mn","vn","pn","gn","_n","Cn","hn","bn","wn","jn","xn","An","Bn","li","Pn","En","Mn","Wn","ai","Dn","Un","kn","In","Gn","Fn","Ln","$n","zn","Vn","Nn","Hn","qn","Yn","Qn","Xn","Zn","Jn","Kn","it","et","rt","nt","tt","at","K","ii","ei","ri","ui","vi","mi","fi","ci","ni","ti","qt","Ht","It","Nt","oi","si","di","Gt","vt","Vt","Yt","Ft","_i","Ci","bi","ji","xi","Oi","Gi","Li","$i","zi","Vi","Ni","Hi","qi","Qi","Zi","Ji","ie","ee","re","ne","ae","fe","se","pt","gt","de","ye","me","ve","pe","ge","_e","we","$t","Se","ft","ut","Ee","dt","Me","De","Ue","Ie","Ge","Fe","Le","$e","Ve","Ne","Zt","Qt","Jt","qe","Qe","Xe","Ke","er","rr","vr","pr","gr","wr","Lt","Tr","Br","Pr","Lr","$r","zr","Hr","qr","Yr","Qr","Xr","Zr","Jr","Kr","en","rn","nn","tn","an","on","ln","un","fn","sn","Pt","Dt","Wt","yn","zt","Et","Mt","Rt","On","Sn","Tn","Rn","xt","wt","bt","ht","jt","Ot","St","ot","lt","Xt","mt","_t","Ct","Tt","At","Bt","origin","isEsmImportMetaUrlHardcodedAsFileUri","getScriptSrc","inferWasmPathPrefixFromScriptSrc","isSameOrigin","normalizeUrl","fallbackUrl","preload","dynamicImportDefault","createProxyWorker","importProxyWorker","embeddedWasmModule","importWasmModule","URL2","filename","prefixOverride","baseUrl","absoluteUrl","blob","url","isMultiThreaded","isWasmOverridden","useEmbeddedModule","wasmModuleFilename","wasmModuleUrl","needPreload","wasm","initialized","initializing","aborted","isMultiThreadSupported","isSimdSupported","isRelaxedSimdSupported","getInstance","flags","timeout","numThreads","multiThreadSupported","wasmPaths","wasmPrefixOverride","mjsPathOverrideFlag","mjsPathOverride","wasmPathOverrideFlag","wasmPathOverride","wasmBinaryOverride","objectUrl","ortWasmFactory","isTimeout","tasks","config","fileName","inferredWasmPathPrefix","module","what","allocWasmString","iterateExtraOptions","checkLastError","init_wasm_utils","allocs","dataLength","dataOffset","prefix","seen","ptrSize","paramsOffset","errorCode","errorMessagePointer","errorMessage","setRunOptions","init_run_options","runOptionsHandle","runOptions","tagDataOffset","keyDataOffset","valueDataOffset","alloc","getGraphOptimzationLevel","getExecutionMode","appendDefaultOptions","appendSessionConfig","appendEpOption","setExecutionProviders","setSessionOptions","init_session_options","graphOptimizationLevel","executionMode","session","ep","sessionOptionsHandle","epOptions","executionProviders","customDevice","customOptions","info","deviceId","instanceHandle","deviceHandle","epNameDataOffset","epOptionsCount","keysOffset","valuesOffset","sessionOptions","logIdDataOffset","logSeverityLevel","logVerbosityLevel","optimizedModelFilePathOffset","nameOffset","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","calculateTensorSizeInBytes","tensorTypeToTypedArrayConstructor","logLevelStringToEnum","isGpuBufferSupportedType","isMLTensorSupportedType","dataLocationStringToEnum","init_wasm_common","typeProto","dateType","dimsOrSize","elementSize","logLevel","location","loadFile","init_wasm_utils_load_file","file","readFile","createReadStream","stream","chunks","chunk","response","contentLengthHeader","fileSize","reader","pages","offset","done","chunkSize","createView","init_tensor_view","dataBuffer","logLevelPrefix","doLog","configLogLevel","debug","configureLogger","LOG","LOG_DEBUG","init_log","level","$configLogLevel","$debug","messageLevel","configLevel","args","webnnDataTypeToSize","convertDataToInt32","convertInt32ToData","tensorGuid","createNewTensorId","webnnDataTypeToFallback","calculateByteLength","TensorWrapper","TensorIdTracker","TensorManagerImpl","createTensorManager","init_tensor_manager","dataTypeSize","bytesPerElement","numElements","originalArray","int32Array","bigInt64Array","bigUint64Array","int8Array","uint32Array","shape","descriptor","fallbackDataType","dstBuffer","originalData","isConverted","tensorManager","wrapper","copyOld","usage","newData","dstData","tensorId","tensorTracker","writable","readable","index","tensorWrapper","backend_webnn_exports","WebNNBackend","onnxDataTypeToWebnnDataType","compareMLContextOptions","init_backend_webnn","aKeys","bKeys","tensorIds","optionsOrDevice","mlContextIndex","entry","mlContext","sessionIds","onnxDataType","dimensions","webnnDataType","id","externalFilePath","builder","desc","mountedFiles","shouldConvertInt64ToInt32","filePath","fileData","bufferView","int32Buffer","inputName","outputName","inputNames","outputNames","isInput","initOrt","activeSessions","getSessionInputOutputCount","getSessionInputOutputMetadata","prepareInputOutputTensor","loggingLevel","webgpuAdapter","powerPreference","forceFallbackAdapter","device","sessionHandle","metadataOffset","elementType","dimsCount","symbolicDimNameOffset","modelDataOffset","modelData","modelDataLength","ioBindingHandle","inputNamesUTF8Encoded","outputNamesUTF8Encoded","loadingPromises","path","provider","webnnOptions","gpuDevice","inputCount","outputCount","enableGraphCapture","inputMetadata","outputMetadata","outputPreferredLocations","nameString","isGraphOutput","bindingState","buf","ioBindingState","tensorHandles","tensorNameUTF8Encoded","actualLocation","rawData","dataByteLength","registerBuffer","registerMLTensor","isGraphInput","tensorName","dataTypeEnum","createTemporaryTensor","uploadTensor","dimsOffset","inputTensors","outputTensors","inputOutputBound","runOptionsAllocs","inputTensorHandles","outputTensorHandles","inputOutputAllocs","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","handle","outputPreferredLocationsEncoded","output","outputPromises","beforeGetTensorDataStack","tensorDataOffset","keepOutputTensor","valueType","dimsLength","preferredLocation","stringData","nextOffset","maxBytesToRead","getBuffer","bufferSize","downloadDataFunction","arrayBuffer","ensureTensor","isGraphInputOutputTypeSupported","profileFileName","tensors","buffers","isProxy","proxyWorker","temporaryObjectUrl","initWasmCallbacks","queuedCallbacks","enqueueCallbacks","ensureWorker","onProxyWorkerMessage","initializeWebAssemblyAndOrtRuntime","initializeOrtEp","init_proxy_wrapper","callbacks","queue","worker","transferable","serializableInputs","encodeTensorMetadata","decodeTensorMetadata","OnnxruntimeWebAssemblySessionHandler","init_session_handler_inference","getName","pathOrBuffer","inputArray","kvp","outputArray","resultMap","backend_wasm_exports","OnnxruntimeWebAssemblyBackend","initializeFlags","wasmBackend","init_backend_wasm","simd","numCpuLogicalCores","index_default"],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Backend } from './backend.js';\nimport { InferenceSession } from './inference-session.js';\n\ninterface BackendInfo {\n  backend: Backend;\n  priority: number;\n\n  initPromise?: Promise<void>;\n  initialized?: boolean;\n  aborted?: boolean;\n  error?: string;\n}\n\nconst backends: Map<string, BackendInfo> = new Map();\nconst backendsSortedByPriority: string[] = [];\n\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @ignore\n */\nexport const registerBackend = (name: string, backend: Backend, priority: number): void => {\n  if (backend && typeof backend.init === 'function' && typeof backend.createInferenceSessionHandler === 'function') {\n    const currentBackend = backends.get(name);\n    if (currentBackend === undefined) {\n      backends.set(name, { backend, priority });\n    } else if (currentBackend.priority > priority) {\n      // same name is already registered with a higher priority. skip registeration.\n      return;\n    } else if (currentBackend.priority === priority) {\n      if (currentBackend.backend !== backend) {\n        throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n      }\n    }\n\n    if (priority >= 0) {\n      const i = backendsSortedByPriority.indexOf(name);\n      if (i !== -1) {\n        backendsSortedByPriority.splice(i, 1);\n      }\n\n      for (let i = 0; i < backendsSortedByPriority.length; i++) {\n        if (backends.get(backendsSortedByPriority[i])!.priority <= priority) {\n          backendsSortedByPriority.splice(i, 0, name);\n          return;\n        }\n      }\n      backendsSortedByPriority.push(name);\n    }\n    return;\n  }\n\n  throw new TypeError('not a valid backend');\n};\n\n/**\n * Try to resolve and initialize a backend.\n *\n * @param backendName - the name of the backend.\n * @returns the backend instance if resolved and initialized successfully, or an error message if failed.\n */\nconst tryResolveAndInitializeBackend = async (backendName: string): Promise<Backend | string> => {\n  const backendInfo = backends.get(backendName);\n  if (!backendInfo) {\n    return 'backend not found.';\n  }\n\n  if (backendInfo.initialized) {\n    return backendInfo.backend;\n  } else if (backendInfo.aborted) {\n    return backendInfo.error!;\n  } else {\n    const isInitializing = !!backendInfo.initPromise;\n    try {\n      if (!isInitializing) {\n        backendInfo.initPromise = backendInfo.backend.init(backendName);\n      }\n      await backendInfo.initPromise;\n      backendInfo.initialized = true;\n      return backendInfo.backend;\n    } catch (e) {\n      if (!isInitializing) {\n        backendInfo.error = `${e}`;\n        backendInfo.aborted = true;\n      }\n      return backendInfo.error!;\n    } finally {\n      delete backendInfo.initPromise;\n    }\n  }\n};\n\n/**\n * Resolve execution providers from the specific session options.\n *\n * @param options - the session options object.\n * @returns a promise that resolves to a tuple of an initialized backend instance and a session options object with\n * filtered EP list.\n *\n * @ignore\n */\nexport const resolveBackendAndExecutionProviders = async (\n  options: InferenceSession.SessionOptions,\n): Promise<[backend: Backend, options: InferenceSession.SessionOptions]> => {\n  // extract backend hints from session options\n  const eps = options.executionProviders || [];\n  const backendHints = eps.map((i) => (typeof i === 'string' ? i : i.name));\n  const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n\n  // try to resolve and initialize all requested backends\n  let backend: Backend | undefined;\n  const errors = [];\n  const availableBackendNames = new Set<string>();\n  for (const backendName of backendNames) {\n    const resolveResult = await tryResolveAndInitializeBackend(backendName);\n    if (typeof resolveResult === 'string') {\n      errors.push({ name: backendName, err: resolveResult });\n    } else {\n      if (!backend) {\n        backend = resolveResult;\n      }\n      if (backend === resolveResult) {\n        availableBackendNames.add(backendName);\n      }\n    }\n  }\n\n  // if no backend is available, throw error.\n  if (!backend) {\n    throw new Error(`no available backend found. ERR: ${errors.map((e) => `[${e.name}] ${e.err}`).join(', ')}`);\n  }\n\n  // for each explicitly requested backend, if it's not available, output warning message.\n  for (const { name, err } of errors) {\n    if (backendHints.includes(name)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `removing requested execution provider \"${name}\" from session options because it is not available: ${err}`,\n      );\n    }\n  }\n\n  const filteredEps = eps.filter((i) => availableBackendNames.has(typeof i === 'string' ? i : i.name));\n\n  return [\n    backend,\n    new Proxy(options, {\n      get: (target, prop) => {\n        if (prop === 'executionProviders') {\n          return filteredEps;\n        }\n        return Reflect.get(target, prop);\n      },\n    }),\n  ];\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { InferenceSession } from './inference-session.js';\nimport { OnnxValue } from './onnx-value.js';\n\n/**\n * @ignore\n */\nexport declare namespace SessionHandler {\n  type FeedsType = { [name: string]: OnnxValue };\n  type FetchesType = { [name: string]: OnnxValue | null };\n  type ReturnType = { [name: string]: OnnxValue };\n}\n\n/**\n * Represents shared SessionHandler functionality\n *\n * @ignore\n */\ninterface SessionHandler {\n  dispose(): Promise<void>;\n\n  readonly inputNames: readonly string[];\n  readonly outputNames: readonly string[];\n\n  readonly inputMetadata: readonly InferenceSession.ValueMetadata[];\n  readonly outputMetadata: readonly InferenceSession.ValueMetadata[];\n}\n\n/**\n * Represent a handler instance of an inference session.\n *\n * @ignore\n */\nexport interface InferenceSessionHandler extends SessionHandler {\n  startProfiling(): void;\n  endProfiling(): void;\n\n  run(\n    feeds: SessionHandler.FeedsType,\n    fetches: SessionHandler.FetchesType,\n    options: InferenceSession.RunOptions,\n  ): Promise<SessionHandler.ReturnType>;\n}\n\n/**\n * Represent a backend that provides implementation of model inferencing.\n *\n * @ignore\n */\nexport interface Backend {\n  /**\n   * Initialize the backend asynchronously. Should throw when failed.\n   */\n  init(backendName: string): Promise<void>;\n\n  createInferenceSessionHandler(\n    uriOrBuffer: string | Uint8Array,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSessionHandler>;\n}\n\nexport { registerBackend } from './backend-impl.js';\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.23.0';\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Env } from './env.js';\nimport { version } from './version.js';\n\ntype LogLevelType = Env['logLevel'];\n\nlet logLevelValue: Required<LogLevelType> = 'warning';\n\nexport const env: Env = {\n  wasm: {} as Env.WebAssemblyFlags,\n  webgl: {} as Env.WebGLFlags,\n  webgpu: {} as Env.WebGpuFlags,\n  versions: { common: version },\n\n  set logLevel(value: LogLevelType) {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n      throw new Error(`Unsupported logging level: ${value}`);\n    }\n    logLevelValue = value;\n  },\n  get logLevel(): Required<LogLevelType> {\n    return logLevelValue;\n  },\n};\n\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', { enumerable: true });\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { env as envImpl } from './env-impl.js';\nimport { TryGetGlobalType } from './type-helper.js';\n\nexport declare namespace Env {\n  export type WasmPathPrefix = string;\n  export interface WasmFilePaths {\n    /**\n     * Specify the override path for the main .wasm file.\n     *\n     * This path should be an absolute path.\n     *\n     * If not modified, the filename of the .wasm file is:\n     * - `ort-wasm-simd-threaded.wasm` for default build\n     * - `ort-wasm-simd-threaded.jsep.wasm` for JSEP build (with WebGPU and WebNN)\n     * - `ort-wasm-simd-threaded.asyncify.wasm` for WebGPU build with Asyncify (with WebNN)\n     */\n    wasm?: URL | string;\n    /**\n     * Specify the override path for the main .mjs file.\n     *\n     * This path should be an absolute path.\n     *\n     * If not modified, the filename of the .mjs file is:\n     * - `ort-wasm-simd-threaded.mjs` for default build\n     * - `ort-wasm-simd-threaded.jsep.mjs` for JSEP build (with WebGPU and WebNN)\n     * - `ort-wasm-simd-threaded.asyncify.mjs` for WebGPU build with Asyncify (with WebNN)\n     */\n    mjs?: URL | string;\n  }\n  export type WasmPrefixOrFilePaths = WasmPathPrefix | WasmFilePaths;\n  export interface WebAssemblyFlags {\n    /**\n     * set or get number of thread(s). If omitted or set to 0, number of thread(s) will be determined by system. If set\n     * to 1, no worker thread will be spawned.\n     *\n     * This setting is available only when WebAssembly multithread feature is available in current context.\n     *\n     * @defaultValue `0`\n     */\n    numThreads?: number;\n\n    /**\n     * set a value indicating whether to enable SIMD.\n     *\n     * ONNX Runtime will perform feature detection based on the value of this property. Specifically, when the value is\n     * set to:\n     * - `undefined`, `true` or `\"fixed\"`: will check availability of Fixed-width SIMD.\n     * - `\"relaxed\"`: will check availability of Relaxed SIMD.\n     * - `false`: will not perform SIMD feature checking.\n     *\n     * Setting this property does not make ONNX Runtime to switch to the corresponding runtime automatically. User need\n     * to set `wasmPaths` or `wasmBinary` property to load the corresponding runtime.\n     *\n     * This setting is available only when WebAssembly SIMD feature is available in current context.\n     *\n     * @defaultValue `true`\n     */\n    simd?: boolean | 'fixed' | 'relaxed';\n\n    /**\n     * set or get a boolean value indicating whether to enable trace.\n     *\n     * @defaultValue `false`\n     *\n     * @deprecated Use `env.trace` instead. If `env.trace` is set, this property will be ignored.\n     */\n    trace?: boolean;\n\n    /**\n     * Set or get a number specifying the timeout for initialization of WebAssembly backend, in milliseconds. A zero\n     * value indicates no timeout is set.\n     *\n     * @defaultValue `0`\n     */\n    initTimeout?: number;\n\n    /**\n     * Set a custom URL prefix to the .wasm/.mjs files, or an object of overrides for both .wasm/.mjs file. The override\n     * path should be an absolute path.\n     */\n    wasmPaths?: WasmPrefixOrFilePaths;\n\n    /**\n     * Set a custom buffer which contains the WebAssembly binary. If this property is set, the `wasmPaths` property will\n     * be ignored.\n     */\n    wasmBinary?: ArrayBufferLike | Uint8Array;\n\n    /**\n     * Set or get a boolean value indicating whether to proxy the execution of main thread to a worker thread.\n     *\n     * @defaultValue `false`\n     */\n    proxy?: boolean;\n  }\n\n  export interface WebGLFlags {\n    /**\n     * Set or get the WebGL Context ID (webgl or webgl2).\n     *\n     * @defaultValue `'webgl2'`\n     */\n    contextId?: 'webgl' | 'webgl2';\n    /**\n     * Get the WebGL rendering context.\n     */\n    readonly context: WebGLRenderingContext;\n    /**\n     * Set or get the maximum batch size for matmul. 0 means to disable batching.\n     *\n     * @deprecated\n     */\n    matmulMaxBatchSize?: number;\n    /**\n     * Set or get the texture cache mode.\n     *\n     * @defaultValue `'full'`\n     */\n    textureCacheMode?: 'initializerOnly' | 'full';\n    /**\n     * Set or get the packed texture mode\n     *\n     * @defaultValue `false`\n     */\n    pack?: boolean;\n    /**\n     * Set or get whether enable async download.\n     *\n     * @defaultValue `false`\n     */\n    async?: boolean;\n  }\n\n  export interface WebGpuProfilingDataV1TensorMetadata {\n    dims: readonly number[];\n    dataType: string;\n  }\n  export interface WebGpuProfilingDataV1 {\n    version: 1;\n    inputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    outputsMetadata: readonly WebGpuProfilingDataV1TensorMetadata[];\n    kernelId: number;\n    kernelType: string;\n    kernelName: string;\n    programName: string;\n    startTime: number;\n    endTime: number;\n  }\n\n  export type WebGpuProfilingData = WebGpuProfilingDataV1;\n\n  export interface WebGpuFlags {\n    /**\n     * Set or get the profiling mode.\n     *\n     * @deprecated Use `env.webgpu.profiling.mode` instead. If `env.webgpu.profiling.mode` is set, this property will be\n     * ignored.\n     */\n    profilingMode?: 'off' | 'default';\n    /**\n     * Set or get the profiling configuration.\n     */\n    profiling: {\n      /**\n       * Set or get the profiling mode.\n       *\n       * @defaultValue `'off'`\n       */\n      mode?: 'off' | 'default';\n\n      /**\n       * Set or get a callback function when a profiling data is received. If not set, the profiling data will be\n       * printed to console.\n       */\n      ondata?: (data: WebGpuProfilingData) => void;\n    };\n    /**\n     * Set or get the power preference.\n     *\n     * Setting this property only has effect before the first WebGPU inference session is created. The value will be\n     * used as options for `navigator.gpu.requestAdapter()`.\n     *\n     * See {@link https://gpuweb.github.io/gpuweb/#dictdef-gpurequestadapteroptions} for more details.\n     *\n     * @defaultValue `undefined`\n     *\n     * @deprecated Create your own GPUAdapter, use it to create a GPUDevice instance and set {@link device} property if\n     * you want to use a specific power preference.\n     */\n    powerPreference?: 'low-power' | 'high-performance';\n    /**\n     * Set or get the force fallback adapter flag.\n     *\n     * Setting this property only has effect before the first WebGPU inference session is created. The value will be\n     * used as options for `navigator.gpu.requestAdapter()`.\n     *\n     * See {@link https://gpuweb.github.io/gpuweb/#dictdef-gpurequestadapteroptions} for more details.\n     *\n     * @defaultValue `undefined`\n     *\n     * @deprecated Create your own GPUAdapter, use it to create a GPUDevice instance and set {@link device} property if\n     * you want to use a specific fallback option.\n     */\n    forceFallbackAdapter?: boolean;\n    /**\n     * Set or get the adapter for WebGPU.\n     *\n     * Setting this property only has effect before the first WebGPU inference session is created. The value will be\n     * used as the GPU adapter for the underlying WebGPU backend to create GPU device.\n     *\n     * If this property is not set, it will be available to get after the first WebGPU inference session is created. The\n     * value will be the GPU adapter that created by the underlying WebGPU backend.\n     *\n     * When use with TypeScript, the type of this property is `GPUAdapter` defined in \"@webgpu/types\".\n     *\n     * @deprecated It is no longer recommended to use this property. The latest WebGPU spec adds `GPUDevice.adapterInfo`\n     * (https://www.w3.org/TR/webgpu/#dom-gpudevice-adapterinfo), which allows to get the adapter information from the\n     * device. When it's available, there is no need to set/get the {@link adapter} property.\n     */\n    adapter: TryGetGlobalType<'GPUAdapter'>;\n    /**\n     * Set or get the GPU device for WebGPU.\n     *\n     * There are 3 valid scenarios of accessing this property:\n     * - Set a value before the first WebGPU inference session is created. The value will be used by the WebGPU backend\n     * to perform calculations. If the value is not a `GPUDevice` object, an error will be thrown.\n     * - Get the value before the first WebGPU inference session is created. This will try to create a new GPUDevice\n     * instance. Returns a `Promise` that resolves to a `GPUDevice` object.\n     * - Get the value after the first WebGPU inference session is created. Returns a resolved `Promise` to the\n     * `GPUDevice` object used by the WebGPU backend.\n     */\n    get device(): Promise<TryGetGlobalType<'GPUDevice'>>;\n    set device(value: TryGetGlobalType<'GPUDevice'>);\n    /**\n     * Set or get whether validate input content.\n     *\n     * @defaultValue `false`\n     */\n    validateInputContent?: boolean;\n  }\n}\n\nexport interface Env {\n  /**\n   * set the severity level for logging.\n   *\n   * @defaultValue `'warning'`\n   */\n  logLevel?: 'verbose' | 'info' | 'warning' | 'error' | 'fatal';\n\n  /**\n   * Indicate whether run in debug mode.\n   *\n   * @defaultValue `false`\n   */\n  debug?: boolean;\n\n  /**\n   * set or get a boolean value indicating whether to enable trace.\n   *\n   * @defaultValue `false`\n   */\n  trace?: boolean;\n\n  /**\n   * Get version of the current package.\n   */\n  readonly versions: {\n    readonly common: string;\n    readonly web?: string;\n    readonly node?: string;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    readonly 'react-native'?: string;\n  };\n\n  /**\n   * Represent a set of flags for WebAssembly\n   */\n  readonly wasm: Env.WebAssemblyFlags;\n\n  /**\n   * Represent a set of flags for WebGL\n   */\n  readonly webgl: Env.WebGLFlags;\n\n  /**\n   * Represent a set of flags for WebGPU\n   */\n  readonly webgpu: Env.WebGpuFlags;\n\n  [name: string]: unknown;\n}\n\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env: Env = envImpl;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { TensorToDataUrlOptions, TensorToImageDataOptions } from './tensor-conversion.js';\nimport { Tensor } from './tensor.js';\n\n/**\n * implementation of Tensor.toDataURL()\n */\nexport const tensorToDataURL = (tensor: Tensor, options?: TensorToDataUrlOptions): string => {\n  const canvas = typeof document !== 'undefined' ? document.createElement('canvas') : new OffscreenCanvas(1, 1);\n  canvas.width = tensor.dims[3];\n  canvas.height = tensor.dims[2];\n  const pixels2DContext = canvas.getContext('2d') as\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null;\n\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[3];\n    } else {\n      // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n    }\n\n    const inputformat = options?.format !== undefined ? options.format : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof norm.mean === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof norm.bias === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    // Default pointer assignments\n    let rTensorPointer = 0,\n      gTensorPointer = stride,\n      bTensorPointer = stride * 2,\n      aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const R = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0]; // R value\n        const G = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1]; // G value\n        const B = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2]; // B value\n        const A = aTensorPointer === -1 ? 255 : ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3]; // A value\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n        pixels2DContext.fillRect(j, i, 1, 1);\n      }\n    }\n    if ('toDataURL' in canvas) {\n      return canvas.toDataURL();\n    } else {\n      throw new Error('toDataURL is not supported');\n    }\n  } else {\n    throw new Error('Can not access image data');\n  }\n};\n\n/**\n * implementation of Tensor.toImageData()\n */\nexport const tensorToImageData = (tensor: Tensor, options?: TensorToImageDataOptions): ImageData => {\n  const pixels2DContext =\n    typeof document !== 'undefined'\n      ? document.createElement('canvas').getContext('2d')\n      : (new OffscreenCanvas(1, 1).getContext('2d') as OffscreenCanvasRenderingContext2D);\n  let image: ImageData;\n  if (pixels2DContext != null) {\n    // Default values for height and width & format\n    let width: number;\n    let height: number;\n    let channels: number;\n    if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n      width = tensor.dims[2];\n      height = tensor.dims[1];\n      channels = tensor.dims[3];\n    } else {\n      // Default layout is NCWH\n      width = tensor.dims[3];\n      height = tensor.dims[2];\n      channels = tensor.dims[1];\n    }\n    const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n\n    const norm = options?.norm;\n    let normMean: [number, number, number, number];\n    let normBias: [number, number, number, number];\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = [255, 255, 255, 255];\n    } else {\n      if (typeof norm.mean === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n      } else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n        if (norm.mean[3] !== undefined) {\n          normMean[3] = norm.mean[3];\n        }\n      }\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = [0, 0, 0, 0];\n    } else {\n      if (typeof norm.bias === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n      } else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n        if (norm.bias[3] !== undefined) {\n          normBias[3] = norm.bias[3];\n        }\n      }\n    }\n\n    const stride = height * width;\n    if (options !== undefined) {\n      if (\n        (options.format !== undefined && channels === 4 && options.format !== 'RGBA') ||\n        (channels === 3 && options.format !== 'RGB' && options.format !== 'BGR')\n      ) {\n        throw new Error(\"Tensor format doesn't match input tensor dims\");\n      }\n    }\n\n    // Default pointer assignments\n    const step = 4;\n    let rImagePointer = 0,\n      gImagePointer = 1,\n      bImagePointer = 2,\n      aImagePointer = 3;\n    let rTensorPointer = 0,\n      gTensorPointer = stride,\n      bTensorPointer = stride * 2,\n      aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGBA') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n      aTensorPointer = stride * 3;\n    } else if (inputformat === 'RGB') {\n      rTensorPointer = 0;\n      gTensorPointer = stride;\n      bTensorPointer = stride * 2;\n    } else if (inputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = stride;\n      gTensorPointer = stride * 2;\n    }\n\n    image = pixels2DContext.createImageData(width, height);\n\n    for (\n      let i = 0;\n      i < height * width;\n      rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++\n    ) {\n      image.data[rImagePointer] = ((tensor.data[rTensorPointer++] as number) - normBias[0]) * normMean[0]; // R value\n      image.data[gImagePointer] = ((tensor.data[gTensorPointer++] as number) - normBias[1]) * normMean[1]; // G value\n      image.data[bImagePointer] = ((tensor.data[bTensorPointer++] as number) - normBias[2]) * normMean[2]; // B value\n      image.data[aImagePointer] =\n        aTensorPointer === -1 ? 255 : ((tensor.data[aTensorPointer++] as number) - normBias[3]) * normMean[3]; // A value\n    }\n  } else {\n    throw new Error('Can not access image data');\n  }\n  return image;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  OptionsDimensions,\n  OptionsFormat,\n  OptionsNormalizationParameters,\n  OptionsTensorFormat,\n  OptionsTensorLayout,\n  TensorFromGpuBufferOptions,\n  TensorFromImageBitmapOptions,\n  TensorFromImageDataOptions,\n  TensorFromImageElementOptions,\n  TensorFromMLTensorOptions,\n  TensorFromTextureOptions,\n  TensorFromUrlOptions,\n} from './tensor-factory.js';\nimport { Tensor } from './tensor-impl.js';\nimport { Tensor as TensorInterface } from './tensor.js';\n\ninterface BufferToTensorOptions\n  extends OptionsDimensions,\n    OptionsTensorLayout,\n    OptionsNormalizationParameters,\n    OptionsFormat,\n    OptionsTensorFormat {}\n\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nexport const bufferToTensor = (buffer: Uint8ClampedArray | undefined, options: BufferToTensorOptions): Tensor => {\n  if (buffer === undefined) {\n    throw new Error('Image buffer must be defined');\n  }\n  if (options.height === undefined || options.width === undefined) {\n    throw new Error('Image height and width must be defined');\n  }\n  if (options.tensorLayout === 'NHWC') {\n    throw new Error('NHWC Tensor layout is not supported yet');\n  }\n\n  const { height, width } = options;\n\n  const norm = options.norm ?? { mean: 255, bias: 0 };\n  let normMean: [number, number, number, number];\n  let normBias: [number, number, number, number];\n\n  if (typeof norm.mean === 'number') {\n    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n  } else {\n    normMean = [norm.mean![0], norm.mean![1], norm.mean![2], norm.mean![3] ?? 255];\n  }\n\n  if (typeof norm.bias === 'number') {\n    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n  } else {\n    normBias = [norm.bias![0], norm.bias![1], norm.bias![2], norm.bias![3] ?? 0];\n  }\n\n  const inputformat = options.format !== undefined ? options.format : 'RGBA';\n  // default value is RGBA since imagedata and HTMLImageElement uses it\n\n  const outputformat =\n    options.tensorFormat !== undefined ? (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') : 'RGB';\n  const stride = height * width;\n  const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n\n  // Default pointer assignments\n  let step = 4,\n    rImagePointer = 0,\n    gImagePointer = 1,\n    bImagePointer = 2,\n    aImagePointer = 3;\n  let rTensorPointer = 0,\n    gTensorPointer = stride,\n    bTensorPointer = stride * 2,\n    aTensorPointer = -1;\n\n  // Updating the pointer assignments based on the input image format\n  if (inputformat === 'RGB') {\n    step = 3;\n    rImagePointer = 0;\n    gImagePointer = 1;\n    bImagePointer = 2;\n    aImagePointer = -1;\n  }\n\n  // Updating the pointer assignments based on the output tensor format\n  if (outputformat === 'RGBA') {\n    aTensorPointer = stride * 3;\n  } else if (outputformat === 'RBG') {\n    rTensorPointer = 0;\n    bTensorPointer = stride;\n    gTensorPointer = stride * 2;\n  } else if (outputformat === 'BGR') {\n    bTensorPointer = 0;\n    gTensorPointer = stride;\n    rTensorPointer = stride * 2;\n  }\n\n  for (\n    let i = 0;\n    i < stride;\n    i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step\n  ) {\n    float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n    float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n    float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n    if (aTensorPointer !== -1 && aImagePointer !== -1) {\n      float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n    }\n  }\n\n  // Float32Array -> ort.Tensor\n  const outputTensor =\n    outputformat === 'RGBA'\n      ? new Tensor('float32', float32Data, [1, 4, height, width])\n      : new Tensor('float32', float32Data, [1, 3, height, width]);\n  return outputTensor;\n};\n\n/**\n * implementation of Tensor.fromImage().\n */\nexport const tensorFromImage = async (\n  image: ImageData | HTMLImageElement | ImageBitmap | string,\n  options?:\n    | TensorFromImageDataOptions\n    | TensorFromImageElementOptions\n    | TensorFromImageBitmapOptions\n    | TensorFromUrlOptions,\n): Promise<Tensor> => {\n  // checking the type of image object\n  const isHTMLImageEle = typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement;\n  const isImageDataEle = typeof ImageData !== 'undefined' && image instanceof ImageData;\n  const isImageBitmap = typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap;\n  const isString = typeof image === 'string';\n\n  let data: Uint8ClampedArray | undefined;\n  let bufferToTensorOptions: BufferToTensorOptions = options ?? {};\n\n  const createCanvas = () => {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(1, 1);\n    } else {\n      throw new Error('Canvas is not supported');\n    }\n  };\n  const createCanvasContext = (canvas: HTMLCanvasElement | OffscreenCanvas) => {\n    if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement) {\n      return canvas.getContext('2d');\n    } else if (canvas instanceof OffscreenCanvas) {\n      return canvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n    } else {\n      return null;\n    }\n  };\n  // filling and checking image configuration options\n  if (isHTMLImageEle) {\n    // HTMLImageElement - image object - format is RGBA by default\n    const canvas = createCanvas();\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = createCanvasContext(canvas);\n\n    if (pixels2DContext != null) {\n      let height = image.height;\n      let width = image.width;\n      if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n        height = options.resizedHeight;\n        width = options.resizedWidth;\n      }\n\n      if (options !== undefined) {\n        bufferToTensorOptions = options;\n        if (options.tensorFormat !== undefined) {\n          throw new Error('Image input config format must be RGBA for HTMLImageElement');\n        } else {\n          bufferToTensorOptions.tensorFormat = 'RGBA';\n        }\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      } else {\n        bufferToTensorOptions.tensorFormat = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n      }\n\n      pixels2DContext.drawImage(image, 0, 0);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isImageDataEle) {\n    let height: number;\n    let width: number;\n\n    if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n      height = options.resizedHeight;\n      width = options.resizedWidth;\n    } else {\n      height = image.height;\n      width = image.width;\n    }\n\n    if (options !== undefined) {\n      bufferToTensorOptions = options;\n    }\n    bufferToTensorOptions.format = 'RGBA';\n    bufferToTensorOptions.height = height;\n    bufferToTensorOptions.width = width;\n\n    if (options !== undefined) {\n      const tempCanvas = createCanvas();\n\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n\n      const pixels2DContext = createCanvasContext(tempCanvas);\n\n      if (pixels2DContext != null) {\n        pixels2DContext.putImageData(image, 0, 0);\n        data = pixels2DContext.getImageData(0, 0, width, height).data;\n      } else {\n        throw new Error('Can not access image data');\n      }\n    } else {\n      data = image.data;\n    }\n  } else if (isImageBitmap) {\n    // ImageBitmap - image object - format must be provided by user\n    if (options === undefined) {\n      throw new Error('Please provide image config with format for Imagebitmap');\n    }\n\n    const canvas = createCanvas();\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const pixels2DContext = createCanvasContext(canvas);\n\n    if (pixels2DContext != null) {\n      const height = image.height;\n      const width = image.width;\n      pixels2DContext.drawImage(image, 0, 0, width, height);\n      data = pixels2DContext.getImageData(0, 0, width, height).data;\n      bufferToTensorOptions.height = height;\n      bufferToTensorOptions.width = width;\n      return bufferToTensor(data, bufferToTensorOptions);\n    } else {\n      throw new Error('Can not access image data');\n    }\n  } else if (isString) {\n    return new Promise((resolve, reject) => {\n      const canvas = createCanvas();\n      const context = createCanvasContext(canvas);\n      if (!image || !context) {\n        return reject();\n      }\n      const newImage = new Image();\n      newImage.crossOrigin = 'Anonymous';\n      newImage.src = image;\n      newImage.onload = () => {\n        canvas.width = newImage.width;\n        canvas.height = newImage.height;\n        context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n        const img = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        bufferToTensorOptions.height = canvas.height;\n        bufferToTensorOptions.width = canvas.width;\n        resolve(bufferToTensor(img.data, bufferToTensorOptions));\n      };\n    });\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n\n  if (data !== undefined) {\n    return bufferToTensor(data, bufferToTensorOptions);\n  } else {\n    throw new Error('Input data provided is not supported - aborted tensor creation');\n  }\n};\n\n/**\n * implementation of Tensor.fromTexture().\n */\nexport const tensorFromTexture = <T extends TensorInterface.TextureDataTypes>(\n  texture: TensorInterface.TextureType,\n  options: TensorFromTextureOptions<T>,\n): Tensor => {\n  const { width, height, download, dispose } = options;\n  // Always assume RGBAF32. TODO: support different texture format\n  const dims = [1, height, width, 4];\n  return new Tensor({ location: 'texture', type: 'float32', texture, dims, download, dispose });\n};\n\n/**\n * implementation of Tensor.fromGpuBuffer().\n */\nexport const tensorFromGpuBuffer = <T extends TensorInterface.GpuBufferDataTypes>(\n  gpuBuffer: TensorInterface.GpuBufferType,\n  options: TensorFromGpuBufferOptions<T>,\n): Tensor => {\n  const { dataType, dims, download, dispose } = options;\n  return new Tensor({ location: 'gpu-buffer', type: dataType ?? 'float32', gpuBuffer, dims, download, dispose });\n};\n\n/**\n * implementation of Tensor.fromMLTensor().\n */\nexport const tensorFromMLTensor = <T extends TensorInterface.MLTensorDataTypes>(\n  mlTensor: TensorInterface.MLTensorType,\n  options: TensorFromMLTensorOptions<T>,\n): Tensor => {\n  const { dataType, dims, download, dispose } = options;\n  return new Tensor({ location: 'ml-tensor', type: dataType ?? 'float32', mlTensor, dims, download, dispose });\n};\n\n/**\n * implementation of Tensor.fromPinnedBuffer().\n */\nexport const tensorFromPinnedBuffer = <T extends TensorInterface.CpuPinnedDataTypes>(\n  type: T,\n  buffer: TensorInterface.DataTypeMap[T],\n  dims?: readonly number[],\n): Tensor => new Tensor({ location: 'cpu-pinned', type, data: buffer, dims: dims ?? [buffer.length] });\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor } from './tensor.js';\n\nexport type SupportedTypedArrayConstructors =\n  | Float32ArrayConstructor\n  | Uint8ArrayConstructor\n  | Int8ArrayConstructor\n  | Uint16ArrayConstructor\n  | Int16ArrayConstructor\n  | Int32ArrayConstructor\n  | BigInt64ArrayConstructor\n  | Uint8ArrayConstructor\n  | Float64ArrayConstructor\n  | Uint32ArrayConstructor\n  | BigUint64ArrayConstructor;\nexport type SupportedTypedArray = InstanceType<SupportedTypedArrayConstructors>;\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map<string, SupportedTypedArrayConstructors>([\n  ['float32', Float32Array],\n  ['uint8', Uint8Array],\n  ['int8', Int8Array],\n  ['uint16', Uint16Array],\n  ['int16', Int16Array],\n  ['int32', Int32Array],\n  ['bool', Uint8Array],\n  ['float64', Float64Array],\n  ['uint32', Uint32Array],\n  ['int4', Uint8Array],\n  ['uint4', Uint8Array],\n]);\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nexport const NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map<SupportedTypedArrayConstructors, Tensor.Type>([\n  [Float32Array, 'float32'],\n  [Uint8Array, 'uint8'],\n  [Int8Array, 'int8'],\n  [Uint16Array, 'uint16'],\n  [Int16Array, 'int16'],\n  [Int32Array, 'int32'],\n  [Float64Array, 'float64'],\n  [Uint32Array, 'uint32'],\n]);\n\n// the following code allows delaying execution of BigInt/Float16Array checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt/Float16Array\n// polyfill if available.\nlet isTypedArrayChecked = false;\nexport const checkTypedArray = () => {\n  if (!isTypedArrayChecked) {\n    isTypedArrayChecked = true;\n    const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && BigInt64Array.from;\n    const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && BigUint64Array.from;\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-explicit-any\n    const Float16Array = (globalThis as any).Float16Array;\n    const isFloat16ArrayAvailable = typeof Float16Array !== 'undefined' && Float16Array.from;\n\n    if (isBigInt64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n    }\n    if (isBigUint64ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n    }\n    if (isFloat16ArrayAvailable) {\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('float16', Float16Array);\n      NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(Float16Array, 'float16');\n    } else {\n      // if Float16Array is not available, use 'Uint16Array' to store the data.\n      NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('float16', Uint16Array);\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  CpuPinnedConstructorParameters,\n  GpuBufferConstructorParameters,\n  MLTensorConstructorParameters,\n  TextureConstructorParameters,\n} from './tensor-factory.js';\nimport { Tensor } from './tensor-impl.js';\n\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nexport const calculateSize = (dims: readonly unknown[]): number => {\n  let size = 1;\n  for (let i = 0; i < dims.length; i++) {\n    const dim = dims[i];\n    if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n      throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n    }\n    if (dim < 0) {\n      throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n    }\n    size *= dim;\n  }\n  return size;\n};\n\n/**\n * implementation of Tensor.reshape()\n */\nexport const tensorReshape = (tensor: Tensor, dims: readonly number[]): Tensor => {\n  switch (tensor.location) {\n    case 'cpu':\n      return new Tensor(tensor.type, tensor.data, dims);\n    case 'cpu-pinned':\n      return new Tensor({\n        location: 'cpu-pinned',\n        data: tensor.data as CpuPinnedConstructorParameters['data'],\n        type: tensor.type as CpuPinnedConstructorParameters['type'],\n        dims,\n      });\n    case 'texture':\n      return new Tensor({\n        location: 'texture',\n        texture: tensor.texture,\n        type: tensor.type as TextureConstructorParameters['type'],\n        dims,\n      });\n    case 'gpu-buffer':\n      return new Tensor({\n        location: 'gpu-buffer',\n        gpuBuffer: tensor.gpuBuffer,\n        type: tensor.type as GpuBufferConstructorParameters['type'],\n        dims,\n      });\n    case 'ml-tensor':\n      return new Tensor({\n        location: 'ml-tensor',\n        mlTensor: tensor.mlTensor,\n        type: tensor.type as MLTensorConstructorParameters['type'],\n        dims,\n      });\n    default:\n      throw new Error(`tensorReshape: tensor location ${tensor.location} is not supported`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { tensorToDataURL, tensorToImageData } from './tensor-conversion-impl.js';\nimport { TensorToDataUrlOptions, TensorToImageDataOptions } from './tensor-conversion.js';\nimport {\n  tensorFromGpuBuffer,\n  tensorFromImage,\n  tensorFromMLTensor,\n  tensorFromPinnedBuffer,\n  tensorFromTexture,\n} from './tensor-factory-impl.js';\nimport {\n  CpuPinnedConstructorParameters,\n  GpuBufferConstructorParameters,\n  MLTensorConstructorParameters,\n  TensorFromGpuBufferOptions,\n  TensorFromImageBitmapOptions,\n  TensorFromImageDataOptions,\n  TensorFromImageElementOptions,\n  TensorFromMLTensorOptions,\n  TensorFromTextureOptions,\n  TensorFromUrlOptions,\n  TextureConstructorParameters,\n} from './tensor-factory.js';\nimport {\n  checkTypedArray,\n  NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP,\n  NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP,\n  SupportedTypedArray,\n  SupportedTypedArrayConstructors,\n} from './tensor-impl-type-mapping.js';\nimport { calculateSize, tensorReshape } from './tensor-utils-impl.js';\nimport { Tensor as TensorInterface } from './tensor.js';\n\n// type aliases for those exported from Tensor interface\n\ntype TensorType = TensorInterface.Type;\ntype TensorDataType = TensorInterface.DataType;\ntype TensorDataLocation = TensorInterface.DataLocation;\ntype TensorTextureType = TensorInterface.TextureType;\ntype TensorGpuBufferType = TensorInterface.GpuBufferType;\ntype TensorMLTensorType = TensorInterface.MLTensorType;\n\n/**\n * the implementation of Tensor interface.\n *\n * @ignore\n */\nexport class Tensor implements TensorInterface {\n  // #region constructors\n\n  /**\n   * Construct a new CPU tensor object from the given type, data and dims.\n   */\n  constructor(\n    type: TensorType,\n    data: TensorDataType | Uint8ClampedArray | readonly string[] | readonly number[] | readonly boolean[],\n    dims?: readonly number[],\n  );\n  /**\n   * Construct a new CPU tensor object from the given data and dims. Type is inferred from data.\n   */\n  constructor(\n    data: TensorDataType | Uint8ClampedArray | readonly string[] | readonly boolean[],\n    dims?: readonly number[],\n  );\n  /**\n   * Construct a new tensor object from the pinned CPU data with the given type and dims.\n   *\n   * Tensor's location will be set to 'cpu-pinned'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: CpuPinnedConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGL texture with the given type and dims.\n   *\n   * Tensor's location will be set to 'texture'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: TextureConstructorParameters);\n  /**\n   * Construct a new tensor object from the WebGPU buffer with the given type and dims.\n   *\n   * Tensor's location will be set to 'gpu-buffer'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: GpuBufferConstructorParameters);\n\n  /**\n   * Construct a new tensor object from the WebNN MLTensor with the given type and dims.\n   *\n   * Tensor's location will be set to 'ml-tensor'.\n   *\n   * @param params - Specify the parameters to construct the tensor.\n   */\n  constructor(params: MLTensorConstructorParameters);\n\n  /**\n   * implementation.\n   */\n  constructor(\n    arg0:\n      | TensorType\n      | TensorDataType\n      | Uint8ClampedArray\n      | readonly string[]\n      | readonly boolean[]\n      | CpuPinnedConstructorParameters\n      | TextureConstructorParameters\n      | GpuBufferConstructorParameters\n      | MLTensorConstructorParameters,\n    arg1?: TensorDataType | Uint8ClampedArray | readonly number[] | readonly string[] | readonly boolean[],\n    arg2?: readonly number[],\n  ) {\n    // perform one-time check for BigInt/Float16Array support\n    checkTypedArray();\n\n    let type: TensorType;\n    let dims: readonly number[];\n\n    if (typeof arg0 === 'object' && 'location' in arg0) {\n      //\n      // constructing tensor from specific location\n      //\n      this.dataLocation = arg0.location;\n      type = arg0.type;\n      dims = arg0.dims;\n      switch (arg0.location) {\n        case 'cpu-pinned': {\n          const expectedTypedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(type);\n          if (!expectedTypedArrayConstructor) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from pinned buffer`);\n          }\n          if (!(arg0.data instanceof expectedTypedArrayConstructor)) {\n            throw new TypeError(`buffer should be of type ${expectedTypedArrayConstructor.name}`);\n          }\n          this.cpuData = arg0.data;\n          break;\n        }\n        case 'texture': {\n          if (type !== 'float32') {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from texture`);\n          }\n          this.gpuTextureData = arg0.texture;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        case 'gpu-buffer': {\n          if (\n            type !== 'float32' &&\n            type !== 'float16' &&\n            type !== 'int32' &&\n            type !== 'int64' &&\n            type !== 'uint32' &&\n            type !== 'uint8' &&\n            type !== 'bool' &&\n            type !== 'uint4' &&\n            type !== 'int4'\n          ) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from gpu buffer`);\n          }\n          this.gpuBufferData = arg0.gpuBuffer;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        case 'ml-tensor': {\n          if (\n            type !== 'float32' &&\n            type !== 'float16' &&\n            type !== 'int32' &&\n            type !== 'int64' &&\n            type !== 'uint32' &&\n            type !== 'uint64' &&\n            type !== 'int8' &&\n            type !== 'uint8' &&\n            type !== 'bool' &&\n            type !== 'uint4' &&\n            type !== 'int4'\n          ) {\n            throw new TypeError(`unsupported type \"${type}\" to create tensor from MLTensor`);\n          }\n          this.mlTensorData = arg0.mlTensor;\n          this.downloader = arg0.download;\n          this.disposer = arg0.dispose;\n          break;\n        }\n        default:\n          throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`);\n      }\n    } else {\n      //\n      // constructing tensor of location 'cpu'\n      //\n      let data: TensorDataType;\n      let maybeDims: typeof arg1 | typeof arg2;\n      // check whether arg0 is type or data\n      if (typeof arg0 === 'string') {\n        //\n        // Override: constructor(type, data, ...)\n        //\n        type = arg0;\n        maybeDims = arg2;\n        if (arg0 === 'string') {\n          // string tensor\n          if (!Array.isArray(arg1)) {\n            throw new TypeError(\"A string tensor's data must be a string array.\");\n          }\n          // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n          // error will be populated at inference\n          data = arg1;\n        } else {\n          // numeric tensor\n          const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n          if (typedArrayConstructor === undefined) {\n            throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n          }\n          if (Array.isArray(arg1)) {\n            if ((arg0 === 'float16' && typedArrayConstructor === Uint16Array) || arg0 === 'uint4' || arg0 === 'int4') {\n              // - 'float16':\n              //   When no Float16Array polyfill is used, we cannot create 'float16' tensor from number array.\n              //\n              //   Throw error here because when user try to use number array as data,\n              //   e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n              //   Uint16Array.from(arg1) which generates wrong data.\n              //\n              // - 'uint4' and 'int4':\n              //   Uint8Array.from(arg1) will generate wrong data for 'uint4' and 'int4' tensor.\n              //\n              throw new TypeError(\n                `Creating a ${arg0} tensor from number array is not supported. Please use ${typedArrayConstructor.name} as data.`,\n              );\n            } else if (arg0 === 'uint64' || arg0 === 'int64') {\n              // use 'as any' here because:\n              // 1. TypeScript's check on type of 'Array.isArray()' does not work with readonly arrays.\n              // see https://github.com/microsoft/TypeScript/issues/17002\n              // 2. TypeScript's check on union type of '(BigInt64ArrayConstructor|BigUint64ArrayConstructor).from()'\n              // does not accept parameter mapFn.\n              // 3. parameters of 'SupportedTypedArrayConstructors.from()' does not match the requirement of the union\n              // type.\n\n              // assume 'arg1' is of type \"readonly number[]|readonly bigint[]\" here.\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1, BigInt);\n            } else {\n              // assume 'arg1' is of type \"readonly number[]\" here.\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              data = (typedArrayConstructor as any).from(arg1);\n            }\n          } else if (arg1 instanceof typedArrayConstructor) {\n            data = arg1;\n          } else if (arg1 instanceof Uint8ClampedArray) {\n            if (arg0 === 'uint8') {\n              data = Uint8Array.from(arg1);\n            } else {\n              throw new TypeError(`A Uint8ClampedArray tensor's data must be type of uint8`);\n            }\n          } else if (arg0 === 'float16' && arg1 instanceof Uint16Array && typedArrayConstructor !== Uint16Array) {\n            // when Float16Array is available and data is of type Uint16Array.\n            // We allow Uint16Array to be passed in as data for 'float16' tensor until Float16Array is generally\n            // supported in JavaScript environment.\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data = new (globalThis as any).Float16Array(arg1.buffer, arg1.byteOffset, arg1.length);\n          } else {\n            throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n          }\n        }\n      } else {\n        //\n        // Override: constructor(data, ...)\n        //\n        maybeDims = arg1;\n        if (Array.isArray(arg0)) {\n          // only boolean[] and string[] is supported\n          if (arg0.length === 0) {\n            throw new TypeError('Tensor type cannot be inferred from an empty array.');\n          }\n          const firstElementType = typeof arg0[0];\n          if (firstElementType === 'string') {\n            type = 'string';\n            data = arg0;\n          } else if (firstElementType === 'boolean') {\n            type = 'bool';\n            // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n            // wrong type. We use 'as any' to make it happy.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data = Uint8Array.from(arg0 as any[]);\n          } else {\n            throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n          }\n        } else if (arg0 instanceof Uint8ClampedArray) {\n          type = 'uint8';\n          data = Uint8Array.from(arg0);\n        } else {\n          // get tensor type from TypedArray\n          const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(\n            arg0.constructor as SupportedTypedArrayConstructors,\n          );\n          if (mappedType === undefined) {\n            throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n          }\n          type = mappedType;\n          data = arg0 as SupportedTypedArray;\n        }\n      }\n\n      // type and data is processed, now processing dims\n      if (maybeDims === undefined) {\n        // assume 1-D tensor if dims omitted\n        maybeDims = [data.length];\n      } else if (!Array.isArray(maybeDims)) {\n        throw new TypeError(\"A tensor's dims must be a number array\");\n      }\n      dims = maybeDims as readonly number[];\n\n      this.cpuData = data;\n      this.dataLocation = 'cpu';\n    }\n\n    // perform check on dims\n    const size = calculateSize(dims);\n    // if data is on CPU, check whether data length matches tensor size\n    if (this.cpuData && size !== this.cpuData.length) {\n      if ((type === 'uint4' || type === 'int4') && Math.ceil(size / 2) === this.cpuData.length) {\n        // for (u)int4, the data length is half of the tensor size. So we check this special case when size is odd.\n      } else {\n        throw new Error(`Tensor's size(${size}) does not match data length(${this.cpuData.length}).`);\n      }\n    }\n\n    this.type = type;\n    this.dims = dims;\n    this.size = size;\n  }\n  // #endregion\n\n  // #region factory\n  static async fromImage(\n    image: ImageData | HTMLImageElement | ImageBitmap | string,\n    options?:\n      | TensorFromImageDataOptions\n      | TensorFromImageElementOptions\n      | TensorFromImageBitmapOptions\n      | TensorFromUrlOptions,\n  ): Promise<TensorInterface> {\n    return tensorFromImage(image, options);\n  }\n\n  static fromTexture<T extends TensorInterface.TextureDataTypes>(\n    texture: TensorTextureType,\n    options: TensorFromTextureOptions<T>,\n  ): TensorInterface {\n    return tensorFromTexture(texture, options);\n  }\n\n  static fromGpuBuffer<T extends TensorInterface.GpuBufferDataTypes>(\n    gpuBuffer: TensorGpuBufferType,\n    options: TensorFromGpuBufferOptions<T>,\n  ): TensorInterface {\n    return tensorFromGpuBuffer(gpuBuffer, options);\n  }\n\n  static fromMLTensor<T extends TensorInterface.MLTensorDataTypes>(\n    mlTensor: TensorMLTensorType,\n    options: TensorFromMLTensorOptions<T>,\n  ): TensorInterface {\n    return tensorFromMLTensor(mlTensor, options);\n  }\n\n  static fromPinnedBuffer<T extends TensorInterface.CpuPinnedDataTypes>(\n    type: T,\n    buffer: TensorInterface.DataTypeMap[T],\n    dims?: readonly number[],\n  ): Tensor {\n    return tensorFromPinnedBuffer(type, buffer, dims);\n  }\n\n  // #endregion\n\n  // #region conversions\n  toDataURL(options?: TensorToDataUrlOptions): string {\n    return tensorToDataURL(this, options);\n  }\n\n  toImageData(options?: TensorToImageDataOptions): ImageData {\n    return tensorToImageData(this, options);\n  }\n  // #endregion\n\n  // #region public fields\n  readonly dims: readonly number[];\n  readonly type: TensorType;\n  readonly size: number;\n  // #endregion\n\n  // #region private fields\n\n  /**\n   * stores the location of the data.\n   */\n  private dataLocation: TensorDataLocation;\n\n  /**\n   * stores the data on CPU, if location is 'cpu' or 'cpu-pinned'. otherwise empty.\n   */\n  private cpuData?: TensorDataType;\n\n  /**\n   * stores the underlying texture when location is 'texture'. otherwise empty.\n   */\n  private gpuTextureData?: TensorTextureType;\n\n  /**\n   * stores the underlying GPU buffer when location is 'gpu-buffer'. otherwise empty.\n   */\n  private gpuBufferData?: TensorGpuBufferType;\n\n  /**\n   * stores the underlying WebNN MLTensor when location is 'ml-tensor'. otherwise empty.\n   */\n  private mlTensorData?: TensorMLTensorType;\n\n  /**\n   * stores an optional downloader function to download data from GPU to CPU.\n   */\n  private downloader?(): Promise<TensorDataType>;\n\n  /**\n   * a flag indicating whether the data is being downloaded from GPU to CPU.\n   */\n  private isDownloading?: boolean;\n\n  /**\n   * stores an optional disposer function to dispose the underlying data.\n   */\n  private disposer?(): void;\n  // #endregion\n\n  // #region properties\n  get data(): TensorDataType {\n    this.ensureValid();\n    if (!this.cpuData) {\n      throw new Error(\n        'The data is not on CPU. Use `getData()` to download GPU data to CPU, ' +\n          'or use `texture` or `gpuBuffer` property to access the GPU data directly.',\n      );\n    }\n    return this.cpuData;\n  }\n\n  get location(): TensorDataLocation {\n    return this.dataLocation;\n  }\n\n  get texture(): TensorTextureType {\n    this.ensureValid();\n    if (!this.gpuTextureData) {\n      throw new Error('The data is not stored as a WebGL texture.');\n    }\n    return this.gpuTextureData;\n  }\n\n  get gpuBuffer(): TensorGpuBufferType {\n    this.ensureValid();\n    if (!this.gpuBufferData) {\n      throw new Error('The data is not stored as a WebGPU buffer.');\n    }\n    return this.gpuBufferData;\n  }\n\n  get mlTensor(): TensorMLTensorType {\n    this.ensureValid();\n    if (!this.mlTensorData) {\n      throw new Error('The data is not stored as a WebNN MLTensor.');\n    }\n    return this.mlTensorData;\n  }\n  // #endregion\n\n  // #region methods\n\n  async getData(releaseData?: boolean): Promise<TensorDataType> {\n    this.ensureValid();\n    switch (this.dataLocation) {\n      case 'cpu':\n      case 'cpu-pinned':\n        return this.data;\n      case 'texture':\n      case 'gpu-buffer':\n      case 'ml-tensor': {\n        if (!this.downloader) {\n          throw new Error('The current tensor is not created with a specified data downloader.');\n        }\n        if (this.isDownloading) {\n          throw new Error('The current tensor is being downloaded.');\n        }\n        try {\n          this.isDownloading = true;\n          const data = await this.downloader();\n          this.downloader = undefined;\n          this.dataLocation = 'cpu';\n          this.cpuData = data;\n\n          if (releaseData && this.disposer) {\n            this.disposer();\n            this.disposer = undefined;\n          }\n\n          return data;\n        } finally {\n          this.isDownloading = false;\n        }\n      }\n      default:\n        throw new Error(`cannot get data from location: ${this.dataLocation}`);\n    }\n  }\n\n  dispose(): void {\n    if (this.isDownloading) {\n      throw new Error('The current tensor is being downloaded.');\n    }\n\n    if (this.disposer) {\n      this.disposer();\n      this.disposer = undefined;\n    }\n    this.cpuData = undefined;\n    this.gpuTextureData = undefined;\n    this.gpuBufferData = undefined;\n    this.mlTensorData = undefined;\n    this.downloader = undefined;\n    this.isDownloading = undefined;\n\n    this.dataLocation = 'none';\n  }\n\n  // #endregion\n\n  // #region tensor utilities\n  private ensureValid(): void {\n    if (this.dataLocation === 'none') {\n      throw new Error('The tensor is disposed.');\n    }\n  }\n\n  reshape(dims: readonly number[]): TensorInterface {\n    this.ensureValid();\n    if (this.downloader || this.disposer) {\n      throw new Error('Cannot reshape a tensor that owns GPU resource.');\n    }\n    return tensorReshape(this, dims);\n  }\n  // #endregion\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { TensorFactory } from './tensor-factory.js';\nimport { Tensor as TensorImpl } from './tensor-impl.js';\nimport { TypedTensorUtils } from './tensor-utils.js';\nimport { TryGetGlobalType } from './type-helper.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/**\n * represent a basic tensor with specified dimensions and data type.\n */\ninterface TypedTensorBase<T extends Tensor.Type> {\n  /**\n   * Get the dimensions of the tensor.\n   */\n  readonly dims: readonly number[];\n  /**\n   * Get the data type of the tensor.\n   */\n  readonly type: T;\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is not on CPU (eg. it's in the form of WebGL texture or WebGPU buffer), throw error.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n  /**\n   * Get the location of the data.\n   */\n  readonly location: Tensor.DataLocation;\n  /**\n   * Get the WebGL texture that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGL texture, throw error.\n   */\n  readonly texture: Tensor.TextureType;\n  /**\n   * Get the WebGPU buffer that holds the tensor data.\n   *\n   * If the data is not on GPU as WebGPU buffer, throw error.\n   */\n  readonly gpuBuffer: Tensor.GpuBufferType;\n\n  /**\n   * Get the WebNN MLTensor that holds the tensor data.\n   *\n   * If the data is not in a WebNN MLTensor, throw error.\n   */\n  readonly mlTensor: Tensor.MLTensorType;\n\n  /**\n   * Get the buffer data of the tensor.\n   *\n   * If the data is on CPU, returns the data immediately.\n   * If the data is on GPU, downloads the data and returns the promise.\n   *\n   * @param releaseData - whether release the data on GPU. Ignore if data is already on CPU.\n   */\n  getData(releaseData?: boolean): Promise<Tensor.DataTypeMap[T]>;\n\n  /**\n   * Dispose the tensor data.\n   *\n   * If the data is on CPU, remove its internal reference to the underlying data.\n   * If the data is on GPU, release the data on GPU.\n   *\n   * After calling this function, the tensor is considered no longer valid. Its location will be set to 'none'.\n   */\n  dispose(): void;\n}\n\nexport declare namespace Tensor {\n  interface DataTypeMap {\n    float32: Float32Array;\n    uint8: Uint8Array;\n    int8: Int8Array;\n    uint16: Uint16Array;\n    int16: Int16Array;\n    int32: Int32Array;\n    int64: BigInt64Array;\n    string: string[];\n    bool: Uint8Array;\n    float16: Uint16Array; // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: Float64Array;\n    uint32: Uint32Array;\n    uint64: BigUint64Array;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n    uint4: Uint8Array;\n    int4: Int8Array;\n  }\n\n  interface ElementTypeMap {\n    float32: number;\n    uint8: number;\n    int8: number;\n    uint16: number;\n    int16: number;\n    int32: number;\n    int64: bigint;\n    string: string;\n    bool: boolean;\n    float16: number; // Keep using Uint16Array until we have a concrete solution for float 16.\n    float64: number;\n    uint32: number;\n    uint64: bigint;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n    uint4: number;\n    int4: number;\n  }\n\n  type DataType = DataTypeMap[Type];\n  type ElementType = ElementTypeMap[Type];\n\n  /**\n   * supported data types for constructing a tensor from a pinned CPU buffer\n   */\n  export type CpuPinnedDataTypes = Exclude<Tensor.Type, 'string'>;\n\n  /**\n   * type alias for WebGL texture\n   */\n  export type TextureType = WebGLTexture;\n\n  /**\n   * supported data types for constructing a tensor from a WebGL texture\n   */\n  export type TextureDataTypes = 'float32';\n\n  type GpuBufferTypeFallback = { size: number; mapState: 'unmapped' | 'pending' | 'mapped' };\n  /**\n   * type alias for WebGPU buffer\n   */\n  export type GpuBufferType = TryGetGlobalType<'GPUBuffer', GpuBufferTypeFallback>;\n\n  type MLTensorTypeFallback = { destroy(): void };\n  /**\n   * type alias for WebNN MLTensor\n   *\n   * The specification for WebNN's MLTensor is currently in flux.\n   */\n  export type MLTensorType = TryGetGlobalType<'MLTensor', MLTensorTypeFallback>;\n\n  /**\n   * supported data types for constructing a tensor from a WebGPU buffer\n   */\n  export type GpuBufferDataTypes = 'float32' | 'float16' | 'int32' | 'int64' | 'uint32' | 'uint8' | 'bool';\n\n  /**\n   * supported data types for constructing a tensor from a WebNN MLTensor\n   */\n  export type MLTensorDataTypes =\n    | 'float32'\n    | 'float16'\n    | 'int8'\n    | 'uint8'\n    | 'int32'\n    | 'uint32'\n    | 'int64'\n    | 'uint64'\n    | 'bool'\n    | 'uint4'\n    | 'int4';\n\n  /**\n   * represent where the tensor data is stored\n   */\n  export type DataLocation = 'none' | 'cpu' | 'cpu-pinned' | 'texture' | 'gpu-buffer' | 'ml-tensor';\n\n  /**\n   * represent the data type of a tensor\n   */\n  export type Type = keyof DataTypeMap;\n}\n\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface TypedTensor<T extends Tensor.Type> extends TypedTensorBase<T>, TypedTensorUtils<T> {}\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface Tensor extends TypedTensorBase<Tensor.Type>, TypedTensorUtils<Tensor.Type> {}\n\n/**\n * type TensorConstructor defines the constructors of 'Tensor' to create CPU tensor instances.\n */\nexport interface TensorConstructor extends TensorFactory {\n  // #region CPU tensor - specify element type\n  /**\n   * Construct a new string tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (\n    type: 'string',\n    data: Tensor.DataTypeMap['string'] | readonly string[],\n    dims?: readonly number[],\n  ): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (\n    type: 'bool',\n    data: Tensor.DataTypeMap['bool'] | readonly boolean[],\n    dims?: readonly number[],\n  ): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new uint8 tensor object from a Uint8ClampedArray, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (type: 'uint8', data: Uint8ClampedArray, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new 64-bit integer typed tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new <T extends 'uint64' | 'int64'>(\n    type: T,\n    data: Tensor.DataTypeMap[T] | readonly bigint[] | readonly number[],\n    dims?: readonly number[],\n  ): TypedTensor<T>;\n\n  /**\n   * Construct a new numeric tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new <T extends Exclude<Tensor.Type, 'string' | 'bool' | 'uint64' | 'int64'>>(\n    type: T,\n    data: Tensor.DataTypeMap[T] | readonly number[],\n    dims?: readonly number[],\n  ): TypedTensor<T>;\n  // #endregion\n\n  // #region CPU tensor - infer element types\n\n  /**\n   * Construct a new float32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Float32Array, dims?: readonly number[]): TypedTensor<'float32'>;\n\n  /**\n   * Construct a new int8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Int8Array, dims?: readonly number[]): TypedTensor<'int8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Uint8Array, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Uint8ClampedArray, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Uint16Array, dims?: readonly number[]): TypedTensor<'uint16'>;\n\n  /**\n   * Construct a new int16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Int16Array, dims?: readonly number[]): TypedTensor<'int16'>;\n\n  /**\n   * Construct a new int32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Int32Array, dims?: readonly number[]): TypedTensor<'int32'>;\n\n  /**\n   * Construct a new int64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: BigInt64Array, dims?: readonly number[]): TypedTensor<'int64'>;\n\n  /**\n   * Construct a new string tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: readonly string[], dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new float64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Float64Array, dims?: readonly number[]): TypedTensor<'float64'>;\n\n  /**\n   * Construct a new uint32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Uint32Array, dims?: readonly number[]): TypedTensor<'uint32'>;\n\n  /**\n   * Construct a new uint64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: BigUint64Array, dims?: readonly number[]): TypedTensor<'uint64'>;\n\n  // #endregion\n\n  // #region CPU tensor - fall back to non-generic tensor type declaration\n\n  /**\n   * Construct a new tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (\n    type: Tensor.Type,\n    data: Tensor.DataType | readonly number[] | readonly string[] | readonly bigint[] | readonly boolean[],\n    dims?: readonly number[],\n  ): Tensor;\n\n  /**\n   * Construct a new tensor object from the given data and dims.\n   *\n   * @param data - Specify the CPU tensor data.\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new (data: Tensor.DataType, dims?: readonly number[]): Tensor;\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl as TensorConstructor;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { env } from './env-impl.js';\n\n/**\n * @ignore\n */\nexport const TRACE = (deviceType: string, label: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  // eslint-disable-next-line no-console\n  console.timeStamp(`${deviceType}::ORT::${label}`);\n};\n\nconst TRACE_FUNC = (msg: string, extraMsg?: string) => {\n  const stack = new Error().stack?.split(/\\r\\n|\\r|\\n/g) || [];\n  let hasTraceFunc = false;\n  for (let i = 0; i < stack.length; i++) {\n    if (hasTraceFunc && !stack[i].includes('TRACE_FUNC')) {\n      let label = `FUNC_${msg}::${stack[i].trim().split(' ')[1]}`;\n      if (extraMsg) {\n        label += `::${extraMsg}`;\n      }\n      TRACE('CPU', label);\n      return;\n    }\n    if (stack[i].includes('TRACE_FUNC')) {\n      hasTraceFunc = true;\n    }\n  }\n};\n\n/**\n * @ignore\n */\nexport const TRACE_FUNC_BEGIN = (extraMsg?: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  TRACE_FUNC('BEGIN', extraMsg);\n};\n\n/**\n * @ignore\n */\nexport const TRACE_FUNC_END = (extraMsg?: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  TRACE_FUNC('END', extraMsg);\n};\n\n/**\n * @ignore\n */\nexport const TRACE_EVENT_BEGIN = (extraMsg?: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  // eslint-disable-next-line no-console\n  console.time(`ORT::${extraMsg}`);\n};\n\n/**\n * @ignore\n */\nexport const TRACE_EVENT_END = (extraMsg?: string) => {\n  if (typeof env.trace === 'undefined' ? !env.wasm.trace : !env.trace) {\n    return;\n  }\n  // eslint-disable-next-line no-console\n  console.timeEnd(`ORT::${extraMsg}`);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { resolveBackendAndExecutionProviders } from './backend-impl.js';\nimport { InferenceSessionHandler } from './backend.js';\nimport { InferenceSession as InferenceSessionInterface } from './inference-session.js';\nimport { OnnxValue } from './onnx-value.js';\nimport { Tensor } from './tensor.js';\nimport { TRACE_FUNC_BEGIN, TRACE_FUNC_END, TRACE_EVENT_BEGIN, TRACE_EVENT_END } from './trace.js';\n\ntype SessionOptions = InferenceSessionInterface.SessionOptions;\ntype RunOptions = InferenceSessionInterface.RunOptions;\ntype FeedsType = InferenceSessionInterface.FeedsType;\ntype FetchesType = InferenceSessionInterface.FetchesType;\ntype ReturnType = InferenceSessionInterface.ReturnType;\n\nexport class InferenceSession implements InferenceSessionInterface {\n  private constructor(handler: InferenceSessionHandler) {\n    this.handler = handler;\n  }\n  run(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  run(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async run(feeds: FeedsType, arg1?: FetchesType | RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    TRACE_FUNC_BEGIN();\n    TRACE_EVENT_BEGIN('InferenceSession.run');\n    const fetches: { [name: string]: OnnxValue | null } = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n        \"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\",\n      );\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError(\"'fetches' cannot be a Tensor\");\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError(\"'fetches' cannot be an empty array.\");\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError(\"'fetches' must be a string array or an object.\");\n          }\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError(\"'options' must be an object.\");\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of this.outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSessionInterface.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError(\"'options' must be an object.\");\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");\n    }\n\n    // check if all inputs are in feed\n    for (const name of this.inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of this.outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    // feeds, fetches and options are prepared\n\n    const results = await this.handler.run(feeds, fetches, options);\n    const returnValue: { [name: string]: OnnxValue } = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        const result = results[key];\n        if (result instanceof Tensor) {\n          returnValue[key] = result;\n        } else {\n          returnValue[key] = new Tensor(result.type, result.data, result.dims);\n        }\n      }\n    }\n    TRACE_EVENT_END('InferenceSession.run');\n    TRACE_FUNC_END();\n    return returnValue;\n  }\n\n  async release(): Promise<void> {\n    return this.handler.dispose();\n  }\n\n  static create(path: string, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(\n    buffer: ArrayBufferLike,\n    byteOffset: number,\n    byteLength?: number,\n    options?: SessionOptions,\n  ): Promise<InferenceSessionInterface>;\n  static create(buffer: Uint8Array, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static async create(\n    arg0: string | ArrayBufferLike | Uint8Array,\n    arg1?: SessionOptions | number,\n    arg2?: number,\n    arg3?: SessionOptions,\n  ): Promise<InferenceSessionInterface> {\n    TRACE_FUNC_BEGIN();\n    TRACE_EVENT_BEGIN('InferenceSession.create');\n    // either load from a file or buffer\n    let filePathOrUint8Array: string | Uint8Array;\n    let options: SessionOptions = {};\n\n    if (typeof arg0 === 'string') {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError(\"'options' must be an object.\");\n      }\n    } else if (arg0 instanceof Uint8Array) {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError(\"'options' must be an object.\");\n      }\n    } else if (\n      arg0 instanceof ArrayBuffer ||\n      (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)\n    ) {\n      const buffer = arg0;\n      let byteOffset = 0;\n      let byteLength = arg0.byteLength;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 === 'number') {\n        byteOffset = arg1;\n        if (!Number.isSafeInteger(byteOffset)) {\n          throw new RangeError(\"'byteOffset' must be an integer.\");\n        }\n        if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n          throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n        }\n        byteLength = arg0.byteLength - byteOffset;\n        if (typeof arg2 === 'number') {\n          byteLength = arg2;\n          if (!Number.isSafeInteger(byteLength)) {\n            throw new RangeError(\"'byteLength' must be an integer.\");\n          }\n          if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n            throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n          }\n          if (typeof arg3 === 'object' && arg3 !== null) {\n            options = arg3;\n          } else if (typeof arg3 !== 'undefined') {\n            throw new TypeError(\"'options' must be an object.\");\n          }\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError(\"'byteLength' must be a number.\");\n        }\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError(\"'options' must be an object.\");\n      }\n      filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n    } else {\n      throw new TypeError(\"Unexpected argument[0]: must be 'path' or 'buffer'.\");\n    }\n\n    // resolve backend, update session options with validated EPs, and create session handler\n    const [backend, optionsWithValidatedEPs] = await resolveBackendAndExecutionProviders(options);\n    const handler = await backend.createInferenceSessionHandler(filePathOrUint8Array, optionsWithValidatedEPs);\n    TRACE_EVENT_END('InferenceSession.create');\n    TRACE_FUNC_END();\n    return new InferenceSession(handler);\n  }\n\n  startProfiling(): void {\n    this.handler.startProfiling();\n  }\n  endProfiling(): void {\n    this.handler.endProfiling();\n  }\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  get inputMetadata(): readonly InferenceSessionInterface.ValueMetadata[] {\n    return this.handler.inputMetadata;\n  }\n\n  get outputMetadata(): readonly InferenceSessionInterface.ValueMetadata[] {\n    return this.handler.outputMetadata;\n  }\n\n  private handler: InferenceSessionHandler;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl.js';\nimport { OnnxModelOptions } from './onnx-model.js';\nimport { OnnxValue, OnnxValueDataLocation } from './onnx-value.js';\nimport type { Tensor } from './tensor.js';\nimport { TryGetGlobalType } from './type-helper.js';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace InferenceSession {\n  // #region input/output types\n\n  type OnnxValueMapType = { readonly [name: string]: OnnxValue };\n  type NullableOnnxValueMapType = { readonly [name: string]: OnnxValue | null };\n\n  /**\n   * A feeds (model inputs) is an object that uses input names as keys and OnnxValue as corresponding values.\n   */\n  type FeedsType = OnnxValueMapType;\n\n  /**\n   * A fetches (model outputs) could be one of the following:\n   *\n   * - Omitted. Use model's output names definition.\n   * - An array of string indicating the output names.\n   * - An object that use output names as keys and OnnxValue or null as corresponding values.\n   *\n   * @remark\n   * different from input argument, in output, OnnxValue is optional. If an OnnxValue is present it will be\n   * used as a pre-allocated value by the inference engine; if omitted, inference engine will allocate buffer\n   * internally.\n   */\n  type FetchesType = readonly string[] | NullableOnnxValueMapType;\n\n  /**\n   * A inferencing return type is an object that uses output names as keys and OnnxValue as corresponding values.\n   */\n  type ReturnType = OnnxValueMapType;\n\n  // #endregion\n\n  // #region session options\n\n  /**\n   * A set of configurations for session behavior.\n   */\n  export interface SessionOptions extends OnnxModelOptions {\n    /**\n     * An array of execution provider options.\n     *\n     * An execution provider option can be a string indicating the name of the execution provider,\n     * or an object of corresponding type.\n     */\n    executionProviders?: readonly ExecutionProviderConfig[];\n\n    /**\n     * The intra OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    intraOpNumThreads?: number;\n\n    /**\n     * The inter OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    interOpNumThreads?: number;\n\n    /**\n     * The free dimension override.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    freeDimensionOverrides?: { readonly [dimensionName: string]: number };\n\n    /**\n     * The optimization level.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    graphOptimizationLevel?: 'disabled' | 'basic' | 'extended' | 'layout' | 'all';\n\n    /**\n     * Whether enable CPU memory arena.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableCpuMemArena?: boolean;\n\n    /**\n     * Whether enable memory pattern.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableMemPattern?: boolean;\n\n    /**\n     * Execution mode.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    executionMode?: 'sequential' | 'parallel';\n\n    /**\n     * Optimized model file path.\n     *\n     * If this setting is specified, the optimized model will be dumped. In browser, a blob will be created\n     * with a pop-up window.\n     */\n    optimizedModelFilePath?: string;\n\n    /**\n     * Whether enable profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    enableProfiling?: boolean;\n\n    /**\n     * File prefix for profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    profileFilePrefix?: string;\n\n    /**\n     * Log ID.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logId?: string;\n\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0 | 1 | 2 | 3 | 4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Specify string as a preferred data location for all outputs, or an object that use output names as keys and a\n     * preferred data location as corresponding values.\n     *\n     * This setting is available only in ONNXRuntime Web for WebGL and WebGPU EP.\n     */\n    preferredOutputLocation?: OnnxValueDataLocation | { readonly [outputName: string]: OnnxValueDataLocation };\n\n    /**\n     * Whether enable graph capture.\n     * This setting is available only in ONNXRuntime Web for WebGPU EP.\n     */\n    enableGraphCapture?: boolean;\n\n    /**\n     * Store configurations for a session. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_session_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     * ```js\n     * extra: {\n     *   session: {\n     *     set_denormal_as_zero: \"1\",\n     *     disable_prepacking: \"1\"\n     *   },\n     *   optimization: {\n     *     enable_gelu_approximation: \"1\"\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #region execution providers\n\n  // Currently, we have the following backends to support execution providers:\n  // Backend Node.js binding: supports 'cpu', 'dml' (win32), 'coreml' (macOS) and 'cuda' (linux).\n  // Backend WebAssembly: supports 'cpu', 'wasm', 'webgpu' and 'webnn'.\n  // Backend ONNX.js: supports 'webgl'.\n  // Backend React Native: supports 'cpu', 'xnnpack', 'coreml' (iOS), 'nnapi' (Android).\n  interface ExecutionProviderOptionMap {\n    coreml: CoreMLExecutionProviderOption;\n    cpu: CpuExecutionProviderOption;\n    cuda: CudaExecutionProviderOption;\n    dml: DmlExecutionProviderOption;\n    nnapi: NnapiExecutionProviderOption;\n    tensorrt: TensorRtExecutionProviderOption;\n    wasm: WebAssemblyExecutionProviderOption;\n    webgl: WebGLExecutionProviderOption;\n    webgpu: WebGpuExecutionProviderOption;\n    webnn: WebNNExecutionProviderOption;\n    qnn: QnnExecutionProviderOption;\n    xnnpack: XnnpackExecutionProviderOption;\n  }\n\n  type ExecutionProviderName = keyof ExecutionProviderOptionMap;\n  type ExecutionProviderConfig =\n    | ExecutionProviderOptionMap[ExecutionProviderName]\n    | ExecutionProviderOption\n    | ExecutionProviderName\n    | string;\n\n  export interface ExecutionProviderOption {\n    readonly name: string;\n  }\n  export interface CpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cpu';\n    useArena?: boolean;\n  }\n  export interface CudaExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cuda';\n    deviceId?: number;\n  }\n  export interface DmlExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'dml';\n    deviceId?: number;\n  }\n  export interface TensorRtExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'tensorrt';\n    deviceId?: number;\n  }\n  export interface WebAssemblyExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'wasm';\n  }\n  export interface WebGLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgl';\n    // TODO: add flags\n  }\n  export interface XnnpackExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'xnnpack';\n  }\n  export interface WebGpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgpu';\n    preferredLayout?: 'NCHW' | 'NHWC';\n  }\n\n  // #region WebNN options\n\n  interface WebNNExecutionProviderName extends ExecutionProviderOption {\n    readonly name: 'webnn';\n  }\n\n  /**\n   * Represents a set of options for creating a WebNN MLContext.\n   *\n   * @see https://www.w3.org/TR/webnn/#dictdef-mlcontextoptions\n   */\n  export interface WebNNContextOptions {\n    deviceType?: 'cpu' | 'gpu' | 'npu';\n    numThreads?: number;\n    powerPreference?: 'default' | 'low-power' | 'high-performance';\n  }\n\n  /**\n   * Represents a set of options for WebNN execution provider without MLContext.\n   */\n  export interface WebNNOptionsWithoutMLContext extends WebNNExecutionProviderName, WebNNContextOptions {\n    context?: never;\n  }\n\n  /**\n   * Represents a set of options for WebNN execution provider with MLContext.\n   *\n   * When MLContext is provided, the deviceType is also required so that the WebNN EP can determine the preferred\n   * channel layout.\n   *\n   * @see https://www.w3.org/TR/webnn/#dom-ml-createcontext\n   */\n  export interface WebNNOptionsWithMLContext\n    extends WebNNExecutionProviderName,\n      Omit<WebNNContextOptions, 'deviceType'>,\n      Required<Pick<WebNNContextOptions, 'deviceType'>> {\n    context: TryGetGlobalType<'MLContext'>;\n  }\n\n  /**\n   * Represents a set of options for WebNN execution provider with MLContext which is created from GPUDevice.\n   *\n   * @see https://www.w3.org/TR/webnn/#dom-ml-createcontext-gpudevice\n   */\n  export interface WebNNOptionsWebGpu extends WebNNExecutionProviderName {\n    context: TryGetGlobalType<'MLContext'>;\n    gpuDevice: TryGetGlobalType<'GPUDevice'>;\n  }\n\n  /**\n   * Options for WebNN execution provider.\n   */\n  export type WebNNExecutionProviderOption =\n    | WebNNOptionsWithoutMLContext\n    | WebNNOptionsWithMLContext\n    | WebNNOptionsWebGpu;\n\n  // #endregion\n\n  export interface QnnExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'qnn';\n    /**\n     * Specify the QNN backend type. E.g., 'cpu' or 'htp'.\n     * Mutually exclusive with `backendPath`.\n     *\n     * @default 'htp'\n     */\n    backendType?: string;\n    /**\n     * Specify a path to the QNN backend library.\n     * Mutually exclusive with `backendType`.\n     */\n    backendPath?: string;\n    /**\n     * Specify whether to enable HTP FP16 precision.\n     *\n     * @default true\n     */\n    enableFp16Precision?: boolean;\n  }\n  export interface CoreMLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'coreml';\n    /**\n     * The bit flags for CoreML execution provider.\n     *\n     * ```\n     * COREML_FLAG_USE_CPU_ONLY = 0x001\n     * COREML_FLAG_ENABLE_ON_SUBGRAPH = 0x002\n     * COREML_FLAG_ONLY_ENABLE_DEVICE_WITH_ANE = 0x004\n     * COREML_FLAG_ONLY_ALLOW_STATIC_INPUT_SHAPES = 0x008\n     * COREML_FLAG_CREATE_MLPROGRAM = 0x010\n     * COREML_FLAG_USE_CPU_AND_GPU = 0x020\n     * ```\n     *\n     * See include/onnxruntime/core/providers/coreml/coreml_provider_factory.h for more details.\n     *\n     * This flag is available only in ONNXRuntime (Node.js binding).\n     */\n    coreMlFlags?: number;\n    /**\n     * Specify whether to use CPU only in CoreML EP.\n     *\n     * This setting is available only in ONNXRuntime (react-native).\n     */\n    useCPUOnly?: boolean;\n    useCPUAndGPU?: boolean;\n    /**\n     * Specify whether to enable CoreML EP on subgraph.\n     *\n     * This setting is available only in ONNXRuntime (react-native).\n     */\n    enableOnSubgraph?: boolean;\n    /**\n     * Specify whether to only enable CoreML EP for Apple devices with ANE (Apple Neural Engine).\n     *\n     * This setting is available only in ONNXRuntime (react-native).\n     */\n    onlyEnableDeviceWithANE?: boolean;\n  }\n  export interface NnapiExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'nnapi';\n    useFP16?: boolean;\n    useNCHW?: boolean;\n    cpuDisabled?: boolean;\n    cpuOnly?: boolean;\n  }\n  // #endregion\n\n  // #endregion\n\n  // #region run options\n\n  /**\n   * A set of configurations for inference run behavior\n   */\n  export interface RunOptions {\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0 | 1 | 2 | 3 | 4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Terminate all incomplete OrtRun calls as soon as possible if true\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    terminate?: boolean;\n\n    /**\n     * A tag for the Run() calls using this\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    tag?: string;\n\n    /**\n     * Set a single run configuration entry. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_run_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     *\n     * ```js\n     * extra: {\n     *   memory: {\n     *     enable_memory_arena_shrinkage: \"1\",\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #endregion\n\n  // #region value metadata\n\n  /**\n   * The common part of the value metadata type for both tensor and non-tensor values.\n   */\n  export interface ValueMetadataBase {\n    /**\n     * The name of the specified input or output.\n     */\n    readonly name: string;\n  }\n\n  /**\n   * Represents the metadata of a non-tensor value.\n   */\n  export interface NonTensorValueMetadata extends ValueMetadataBase {\n    /**\n     * Get a value indicating whether the value is a tensor.\n     */\n    readonly isTensor: false;\n  }\n\n  /**\n   * Represents the metadata of a tensor value.\n   */\n  export interface TensorValueMetadata extends ValueMetadataBase {\n    /**\n     * Get a value indicating whether the value is a tensor.\n     */\n    readonly isTensor: true;\n    /**\n     * Get the data type of the tensor.\n     */\n    readonly type: Tensor.Type;\n    /**\n     * Get the shape of the tensor.\n     *\n     * If the shape is not defined, the value will an empty array. Otherwise, it will be an array representing the shape\n     * of the tensor. Each element in the array can be a number or a string. If the element is a number, it represents\n     * the corresponding dimension size. If the element is a string, it represents a symbolic dimension.\n     */\n    readonly shape: ReadonlyArray<number | string>;\n  }\n\n  /**\n   * Represents the metadata of a value.\n   */\n  export type ValueMetadata = NonTensorValueMetadata | TensorValueMetadata;\n\n  // #endregion\n}\n\n/**\n * Represent a runtime instance of an ONNX model.\n */\nexport interface InferenceSession {\n  // #region run()\n\n  /**\n   * Execute the model asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Execute the model asynchronously with the given feeds, fetches and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param fetches - Representation of the model output. See type description of `InferenceSession.OutputType` for\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(\n    feeds: InferenceSession.FeedsType,\n    fetches: InferenceSession.FetchesType,\n    options?: InferenceSession.RunOptions,\n  ): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region release()\n\n  /**\n   * Release the inference session and the underlying resources.\n   */\n  release(): Promise<void>;\n\n  // #endregion\n\n  // #region profiling\n\n  /**\n   * Start profiling.\n   */\n  startProfiling(): void;\n\n  /**\n   * End profiling.\n   */\n  endProfiling(): void;\n\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n\n  /**\n   * Get input metadata of the loaded model.\n   */\n  readonly inputMetadata: readonly InferenceSession.ValueMetadata[];\n\n  /**\n   * Get output metadata of the loaded model.\n   */\n  readonly outputMetadata: readonly InferenceSession.ValueMetadata[];\n\n  // #endregion\n}\n\nexport interface InferenceSessionFactory {\n  // #region create()\n\n  /**\n   * Create a new inference session and load model asynchronously from an ONNX model file.\n   *\n   * @param uri - The URI or file path of the model to load.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(uri: string, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from segment of an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param byteOffset - The beginning of the specified portion of the array buffer.\n   * @param byteLength - The length in bytes of the array buffer.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(\n    buffer: ArrayBufferLike,\n    byteOffset: number,\n    byteLength?: number,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from a Uint8Array.\n   *\n   * @param buffer - A Uint8Array representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession: InferenceSessionFactory = InferenceSessionImpl;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { OptionsFormat, OptionsNormalizationParameters, OptionsTensorLayout } from './tensor-factory.js';\n\nexport interface TensorToDataUrlOptions extends OptionsTensorLayout, OptionsFormat, OptionsNormalizationParameters {}\n\nexport interface TensorToImageDataOptions extends OptionsTensorLayout, OptionsFormat, OptionsNormalizationParameters {}\n\nexport interface ConversionUtils {\n  /**\n   * creates a DataURL instance from tensor\n   *\n   * @param options - An optional object representing options for creating a DataURL instance from the tensor.\n   *\n   * The following default settings will be applied:\n   * - `format`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * @returns a DataURL string representing the image converted from tensor data\n   */\n  toDataURL(options?: TensorToDataUrlOptions): string;\n\n  /**\n   * creates an ImageData instance from tensor\n   *\n   * @param options - An optional object representing options for creating an ImageData instance from the tensor.\n   *\n   * The following default settings will be applied:\n   * - `format`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * @returns an ImageData instance representing the image converted from tensor data\n   */\n  toImageData(options?: TensorToImageDataOptions): ImageData;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor, TypedTensor } from './tensor.js';\n\nexport type ImageFormat = 'RGB' | 'RGBA' | 'BGR' | 'RBG';\nexport type ImageTensorLayout = 'NHWC' | 'NCHW';\n\n// the following region contains type definitions for constructing tensor from a specific location.\n\n// #region types for constructing a tensor from a specific location\n\n/**\n * represent common properties of the parameter for constructing a tensor from a specific location.\n */\ninterface CommonConstructorParameters<T> extends Pick<Tensor, 'dims'> {\n  /**\n   * Specify the data type of the tensor.\n   */\n  readonly type: T;\n}\n\n/**\n * represent the parameter for constructing a tensor from a GPU resource.\n */\ninterface GpuResourceConstructorParameters<T extends Tensor.Type> {\n  /**\n   * an optional callback function to download data from GPU to CPU.\n   *\n   * If not provided, the tensor treat the GPU data as external resource.\n   */\n  download?(): Promise<Tensor.DataTypeMap[T]>;\n\n  /**\n   * an optional callback function that will be called when the tensor is disposed.\n   *\n   * If not provided, the tensor treat the GPU data as external resource.\n   */\n  dispose?(): void;\n}\n\n/**\n * represent the parameter for constructing a tensor from a pinned CPU buffer\n */\nexport interface CpuPinnedConstructorParameters<T extends Tensor.CpuPinnedDataTypes = Tensor.CpuPinnedDataTypes>\n  extends CommonConstructorParameters<T> {\n  /**\n   * Specify the location of the data to be 'cpu-pinned'.\n   */\n  readonly location: 'cpu-pinned';\n  /**\n   * Specify the CPU pinned buffer that holds the tensor data.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n}\n\n/**\n * represent the parameter for constructing a tensor from a WebGL texture\n */\nexport interface TextureConstructorParameters<T extends Tensor.TextureDataTypes = Tensor.TextureDataTypes>\n  extends CommonConstructorParameters<T>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Specify the location of the data to be 'texture'.\n   */\n  readonly location: 'texture';\n  /**\n   * Specify the WebGL texture that holds the tensor data.\n   */\n  readonly texture: Tensor.TextureType;\n}\n\n/**\n * represent the parameter for constructing a tensor from a WebGPU buffer\n */\nexport interface GpuBufferConstructorParameters<T extends Tensor.GpuBufferDataTypes = Tensor.GpuBufferDataTypes>\n  extends CommonConstructorParameters<T>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Specify the location of the data to be 'gpu-buffer'.\n   */\n  readonly location: 'gpu-buffer';\n  /**\n   * Specify the WebGPU buffer that holds the tensor data.\n   */\n  readonly gpuBuffer: Tensor.GpuBufferType;\n}\n\nexport interface MLTensorConstructorParameters<T extends Tensor.MLTensorDataTypes = Tensor.MLTensorDataTypes>\n  extends CommonConstructorParameters<T>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Specify the location of the data to be 'ml-tensor'.\n   */\n  readonly location: 'ml-tensor';\n\n  /**\n   * Specify the WebNN MLTensor that holds the tensor data.\n   */\n  readonly mlTensor: Tensor.MLTensorType;\n}\n\n// #endregion\n\n// the following region contains type definitions of each individual options.\n// the tensor factory functions use a composition of those options as the parameter type.\n\n// #region Options fields\n\nexport interface OptionsFormat {\n  /**\n   * Describes the image format represented in RGBA color space.\n   */\n  format?: ImageFormat;\n}\n\nexport interface OptionsTensorFormat {\n  /**\n   * Describes the image format of the tensor.\n   *\n   * NOTE: this is different from option 'format'. While option 'format' represents the original image, 'tensorFormat'\n   * represents the target format of the tensor. A transpose will be performed if they are different.\n   */\n  tensorFormat?: ImageFormat;\n}\n\nexport interface OptionsTensorDataType {\n  /**\n   * Describes the data type of the tensor.\n   */\n  dataType?: 'float32' | 'uint8';\n}\n\nexport interface OptionsTensorLayout {\n  /**\n   * Describes the tensor layout when representing data of one or more image(s).\n   */\n  tensorLayout?: ImageTensorLayout;\n}\n\nexport interface OptionsDimensions {\n  /**\n   * Describes the image height in pixel\n   */\n  height?: number;\n  /**\n   * Describes the image width in pixel\n   */\n  width?: number;\n}\n\nexport interface OptionResizedDimensions {\n  /**\n   * Describes the resized height. If omitted, original height will be used.\n   */\n  resizedHeight?: number;\n  /**\n   * Describes resized width - can be accessed via tensor dimensions as well\n   */\n  resizedWidth?: number;\n}\n\nexport interface OptionsNormalizationParameters {\n  /**\n   * Describes normalization parameters when preprocessing the image as model input.\n   *\n   * Data element are ranged from 0 to 255.\n   */\n  norm?: {\n    /**\n     * The 'bias' value for image normalization.\n     * - If omitted, use default value 0.\n     * - If it's a single number, apply to each channel\n     * - If it's an array of 3 or 4 numbers, apply element-wise. Number of elements need to match the number of channels\n     * for the corresponding image format\n     */\n    bias?: number | [number, number, number] | [number, number, number, number];\n    /**\n     * The 'mean' value for image normalization.\n     * - If omitted, use default value 255.\n     * - If it's a single number, apply to each channel\n     * - If it's an array of 3 or 4 numbers, apply element-wise. Number of elements need to match the number of channels\n     * for the corresponding image format\n     */\n    mean?: number | [number, number, number] | [number, number, number, number];\n  };\n}\n\n// #endregion\n\n// #region Options composition\n\nexport interface TensorFromImageDataOptions\n  extends OptionResizedDimensions,\n    OptionsTensorFormat,\n    OptionsTensorLayout,\n    OptionsTensorDataType,\n    OptionsNormalizationParameters {}\n\nexport interface TensorFromImageElementOptions\n  extends OptionResizedDimensions,\n    OptionsTensorFormat,\n    OptionsTensorLayout,\n    OptionsTensorDataType,\n    OptionsNormalizationParameters {}\n\nexport interface TensorFromUrlOptions\n  extends OptionsDimensions,\n    OptionResizedDimensions,\n    OptionsTensorFormat,\n    OptionsTensorLayout,\n    OptionsTensorDataType,\n    OptionsNormalizationParameters {}\n\nexport interface TensorFromImageBitmapOptions\n  extends OptionResizedDimensions,\n    OptionsTensorFormat,\n    OptionsTensorLayout,\n    OptionsTensorDataType,\n    OptionsNormalizationParameters {}\n\nexport interface TensorFromTextureOptions<T extends Tensor.TextureDataTypes>\n  extends Required<OptionsDimensions>,\n    OptionsFormat,\n    GpuResourceConstructorParameters<T> /* TODO: add more */ {}\n\nexport interface TensorFromGpuBufferOptions<T extends Tensor.GpuBufferDataTypes>\n  extends Pick<Tensor, 'dims'>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Describes the data type of the tensor.\n   */\n  dataType?: T;\n}\n\nexport interface TensorFromMLTensorOptions<T extends Tensor.MLTensorDataTypes>\n  extends Pick<Tensor, 'dims'>,\n    GpuResourceConstructorParameters<T> {\n  /**\n   * Describes the data type of the tensor.\n   */\n  dataType?: T;\n}\n\n// #endregion\n\n/**\n * type TensorFactory defines the factory functions of 'Tensor' to create tensor instances from existing data or\n * resources.\n */\nexport interface TensorFactory {\n  /**\n   * create a tensor from an ImageData object\n   *\n   * @param imageData - the ImageData object to create tensor from\n   * @param options - An optional object representing options for creating tensor from ImageData.\n   *\n   * The following default settings will be applied:\n   * - `tensorFormat`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * - `dataType`: `'float32'`\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(\n    imageData: ImageData,\n    options?: TensorFromImageDataOptions,\n  ): Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n\n  /**\n   * create a tensor from a HTMLImageElement object\n   *\n   * @param imageElement - the HTMLImageElement object to create tensor from\n   * @param options - An optional object representing options for creating tensor from HTMLImageElement.\n   *\n   * The following default settings will be applied:\n   * - `tensorFormat`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * - `dataType`: `'float32'`\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(\n    imageElement: HTMLImageElement,\n    options?: TensorFromImageElementOptions,\n  ): Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n\n  /**\n   * create a tensor from URL\n   *\n   * @param urlSource - a string as a URL to the image or a data URL containing the image data.\n   * @param options - An optional object representing options for creating tensor from URL.\n   *\n   * The following default settings will be applied:\n   * - `tensorFormat`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * - `dataType`: `'float32'`\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(urlSource: string, options?: TensorFromUrlOptions): Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n\n  /**\n   * create a tensor from an ImageBitmap object\n   *\n   * @param bitmap - the ImageBitmap object to create tensor from\n   * @param options - An optional object representing options for creating tensor from URL.\n   *\n   * The following default settings will be applied:\n   * - `tensorFormat`: `'RGB'`\n   * - `tensorLayout`: `'NCHW'`\n   * - `dataType`: `'float32'`\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(\n    bitmap: ImageBitmap,\n    options: TensorFromImageBitmapOptions,\n  ): Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n\n  /**\n   * create a tensor from a WebGL texture\n   *\n   * @param texture - the WebGLTexture object to create tensor from\n   * @param options - An optional object representing options for creating tensor from WebGL texture.\n   *\n   * The options include following properties:\n   * - `width`: the width of the texture. Required.\n   * - `height`: the height of the texture. Required.\n   * - `format`: the format of the texture. If omitted, assume 'RGBA'.\n   * - `download`: an optional function to download the tensor data from GPU to CPU. If omitted, the GPU data\n   * will not be able to download. Usually, this is provided by a GPU backend for the inference outputs. Users don't\n   * need to provide this function.\n   * - `dispose`: an optional function to dispose the tensor data on GPU. If omitted, the GPU data will not be disposed.\n   * Usually, this is provided by a GPU backend for the inference outputs. Users don't need to provide this function.\n   *\n   * @returns a tensor object\n   */\n  fromTexture<T extends Tensor.TextureDataTypes = 'float32'>(\n    texture: Tensor.TextureType,\n    options: TensorFromTextureOptions<T>,\n  ): TypedTensor<'float32'>;\n\n  /**\n   * create a tensor from a WebGPU buffer\n   *\n   * @param buffer - the GPUBuffer object to create tensor from\n   * @param options - An optional object representing options for creating tensor from WebGPU buffer.\n   *\n   * The options include following properties:\n   * - `dataType`: the data type of the tensor. If omitted, assume 'float32'.\n   * - `dims`: the dimension of the tensor. Required.\n   * - `download`: an optional function to download the tensor data from GPU to CPU. If omitted, the GPU data\n   * will not be able to download. Usually, this is provided by a GPU backend for the inference outputs. Users don't\n   * need to provide this function.\n   * - `dispose`: an optional function to dispose the tensor data on GPU. If omitted, the GPU data will not be disposed.\n   * Usually, this is provided by a GPU backend for the inference outputs. Users don't need to provide this function.\n   *\n   * @returns a tensor object\n   */\n  fromGpuBuffer<T extends Tensor.GpuBufferDataTypes>(\n    buffer: Tensor.GpuBufferType,\n    options: TensorFromGpuBufferOptions<T>,\n  ): TypedTensor<T>;\n\n  /**\n   * create a tensor from a WebNN MLTensor\n   *\n   * @param tensor - the MLTensor object to create tensor from\n   * @param options - An optional object representing options for creating tensor from a WebNN MLTensor.\n   *\n   * The options include following properties:\n   * - `dataType`: the data type of the tensor. If omitted, assume 'float32'.\n   * - `dims`: the dimension of the tensor. Required.\n   * - `download`: an optional function to download the tensor data from the MLTensor to CPU. If omitted, the MLTensor\n   * data will not be able to download. Usually, this is provided by the WebNN backend for the inference outputs.\n   * Users don't need to provide this function.\n   * - `dispose`: an optional function to dispose the tensor data on the WebNN MLTensor. If omitted, the MLTensor will\n   * not be disposed. Usually, this is provided by the WebNN backend for the inference outputs. Users don't need to\n   * provide this function.\n   *\n   * @returns a tensor object\n   */\n  fromMLTensor<T extends Tensor.MLTensorDataTypes>(\n    tensor: Tensor.MLTensorType,\n    options: TensorFromMLTensorOptions<T>,\n  ): TypedTensor<T>;\n\n  /**\n   * create a tensor from a pre-allocated buffer. The buffer will be used as a pinned buffer.\n   *\n   * @param type - the tensor element type.\n   * @param buffer - a TypedArray corresponding to the type.\n   * @param dims - specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   *\n   * @returns a tensor object\n   */\n  fromPinnedBuffer<T extends Exclude<Tensor.Type, 'string'>>(\n    type: T,\n    buffer: Tensor.DataTypeMap[T],\n    dims?: readonly number[],\n  ): TypedTensor<T>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * A string that represents a file's URL or path.\n *\n * Path is vailable only in onnxruntime-node or onnxruntime-web running in Node.js.\n */\nexport type FileUrlOrPath = string;\n\n/**\n * A Blob object that represents a file.\n */\nexport type FileBlob = Blob;\n\n/**\n * A Uint8Array, ArrayBuffer or SharedArrayBuffer object that represents a file content.\n *\n * When it is an ArrayBuffer or SharedArrayBuffer, the whole buffer is assumed to be the file content.\n */\nexport type FileData = Uint8Array | ArrayBufferLike;\n\n/**\n * Represents a file that can be loaded by the ONNX Runtime JavaScript API.\n */\nexport type FileType = FileUrlOrPath | FileBlob | FileData;\n\n/**\n * Represents an external data file.\n */\nexport interface ExternalDataFileDescription {\n  /**\n   * Specify the external data file.\n   */\n  data: FileType;\n  /**\n   * Specify the file path.\n   */\n  path: string;\n}\n\n/**\n * Represents an external data file.\n *\n * When using a string, it should be a file URL or path that in the same directory as the model file.\n */\nexport type ExternalDataFileType = ExternalDataFileDescription | FileUrlOrPath;\n\n/**\n * Options for model loading.\n */\nexport interface OnnxModelOptions {\n  /**\n   * Specifying a list of files that represents the external data.\n   */\n  externalData?: readonly ExternalDataFileType[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor } from './tensor.js';\n\nexport type NonTensorType = never;\n\n/**\n * Type OnnxValue Represents both tensors and non-tensors value for model's inputs/outputs.\n *\n * NOTE: currently not support non-tensor\n */\nexport type OnnxValue = Tensor | NonTensorType;\n\n/**\n * Type OnnxValueDataLocation represents the location of the data of an OnnxValue.\n */\nexport type OnnxValueDataLocation = Tensor.DataLocation;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript/)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n\nexport * from './backend.js';\nexport * from './env.js';\nexport * from './inference-session.js';\nexport * from './tensor.js';\nexport * from './tensor-conversion.js';\nexport * from './tensor-factory.js';\nexport * from './trace.js';\nexport * from './onnx-model.js';\nexport * from './onnx-value.js';\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport const isNode = !!(typeof process !== 'undefined' && process.versions && process.versions.node);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/// <reference lib=\"webworker\" />\n\n//\n// * type hack for \"HTMLImageElement\"\n//\n// in typescript, the type of \"HTMLImageElement\" is defined in lib.dom.d.ts, which is conflict with lib.webworker.d.ts.\n// when we use webworker, the lib.webworker.d.ts will be used, which does not have HTMLImageElement defined.\n//\n// we will get the following errors complaining that HTMLImageElement is not defined:\n//\n// ====================================================================================================================\n//\n// ../common/dist/cjs/tensor-factory.d.ts:187:29 - error TS2552: Cannot find name 'HTMLImageElement'. Did you mean\n// 'HTMLLIElement'?\n//\n// 187     fromImage(imageElement: HTMLImageElement, options?: TensorFromImageElementOptions):\n// Promise<TypedTensor<'float32'> | TypedTensor<'uint8'>>;\n//                                 ~~~~~~~~~~~~~~~~\n//\n// node_modules/@webgpu/types/dist/index.d.ts:83:7 - error TS2552: Cannot find name 'HTMLImageElement'. Did you mean\n// 'HTMLLIElement'?\n//\n// 83     | HTMLImageElement\n//          ~~~~~~~~~~~~~~~~\n//\n// ====================================================================================================================\n//\n// `HTMLImageElement` is only used in type declaration and not in real code. So we define it as `unknown` here to\n// bypass the type check.\n\n//\n// * type hack for \"document\"\n//\n// in typescript, the type of \"document\" is defined in lib.dom.d.ts, so it's not available in webworker.\n//\n// we will get the following errors complaining that document is not defined:\n//\n// ====================================================================================================================\n//\n// lib/wasm/wasm-utils-import.ts:7:33 - error TS2584: Cannot find name 'document'. Do you need to change your target\n// library? Try changing the 'lib' compiler option to include 'dom'.\n//\n// 7 export const scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src :\n//                                   ~~~~~~~~\n//\n// lib/wasm/wasm-utils-import.ts:7:61 - error TS2584: Cannot find name 'document'. Do you need to change your target\n// library? Try changing the 'lib' compiler option to include 'dom'.\n//\n// 7 export const scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src :\n//                                                               ~~~~~~~~\n//\n// lib/wasm/wasm-utils-import.ts:7:88 - error TS2552: Cannot find name 'HTMLScriptElement'. Did you mean\n// 'HTMLLIElement'?\n//\n// 7 export const scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src :\n//                                                                                          ~~~~~~~~~~~~~~~~~\n// ====================================================================================================================\n//\n// `document` is used to get the current script URL, which is not available in webworker. This file is served as a\n// \"dual\" file for entries of both webworker and the esm module.\n//\ndeclare global {\n  type HTMLImageElement = unknown;\n  type HTMLScriptElement = { src?: string };\n  const document: undefined | { currentScript?: HTMLScriptElement };\n}\n\n/**\n * @summary\n *\n * This file is served as a \"dual\" file for both entries of the following:\n * - The proxy worker itself.\n *   - When used as a worker, it listens to the messages from the main thread and performs the corresponding operations.\n *   - Should be imported directly using `new Worker()` in the main thread.\n *\n * - The ESM module that creates the proxy worker (as a worker launcher).\n *   - When used as a worker launcher, it creates the proxy worker and returns it.\n *   - Should be imported using `import()` in the main thread, with the query parameter `import=1`.\n *\n * This file will be always compiling into ESM format.\n */\n\nimport type { OrtWasmMessage, SerializableTensorMetadata } from '../proxy-messages.js';\nimport {\n  createSession,\n  copyFromExternalBuffer,\n  endProfiling,\n  extractTransferableBuffers,\n  initEp,\n  initRuntime,\n  releaseSession,\n  run,\n} from '../wasm-core-impl.js';\nimport { initializeWebAssembly } from '../wasm-factory.js';\nimport { scriptSrc } from '../wasm-utils-import.js';\n\nconst WORKER_NAME = 'ort-wasm-proxy-worker';\nconst isProxyWorker = globalThis.self?.name === WORKER_NAME;\n\nif (isProxyWorker) {\n  // Worker thread\n  self.onmessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n    const { type, in: message } = ev.data;\n    try {\n      switch (type) {\n        case 'init-wasm':\n          initializeWebAssembly(message!.wasm).then(\n            () => {\n              initRuntime(message!).then(\n                () => {\n                  postMessage({ type });\n                },\n                (err) => {\n                  postMessage({ type, err });\n                },\n              );\n            },\n            (err) => {\n              postMessage({ type, err });\n            },\n          );\n          break;\n        case 'init-ep': {\n          const { epName, env } = message!;\n          initEp(env, epName).then(\n            () => {\n              postMessage({ type });\n            },\n            (err) => {\n              postMessage({ type, err });\n            },\n          );\n          break;\n        }\n        case 'copy-from': {\n          const { buffer } = message!;\n          const bufferData = copyFromExternalBuffer(buffer);\n          postMessage({ type, out: bufferData } as OrtWasmMessage);\n          break;\n        }\n        case 'create': {\n          const { model, options } = message!;\n          createSession(model, options).then(\n            (sessionMetadata) => {\n              postMessage({ type, out: sessionMetadata } as OrtWasmMessage);\n            },\n            (err) => {\n              postMessage({ type, err });\n            },\n          );\n          break;\n        }\n        case 'release':\n          releaseSession(message!);\n          postMessage({ type });\n          break;\n        case 'run': {\n          const { sessionId, inputIndices, inputs, outputIndices, options } = message!;\n          run(sessionId, inputIndices, inputs, outputIndices, new Array(outputIndices.length).fill(null), options).then(\n            (outputs) => {\n              if (outputs.some((o) => o[3] !== 'cpu')) {\n                postMessage({ type, err: 'Proxy does not support non-cpu tensor location.' });\n              } else {\n                postMessage(\n                  { type, out: outputs } as OrtWasmMessage,\n                  extractTransferableBuffers([...inputs, ...outputs] as SerializableTensorMetadata[]),\n                );\n              }\n            },\n            (err) => {\n              postMessage({ type, err });\n            },\n          );\n          break;\n        }\n        case 'end-profiling':\n          endProfiling(message!);\n          postMessage({ type });\n          break;\n        default:\n      }\n    } catch (err) {\n      postMessage({ type, err } as OrtWasmMessage);\n    }\n  };\n}\n\nexport default isProxyWorker\n  ? null\n  : (urlOverride?: string) =>\n      new Worker(urlOverride ?? scriptSrc!, { type: BUILD_DEFS.IS_ESM ? 'module' : 'classic', name: WORKER_NAME });\n","var i=async function(i={}){var e,r,n=i,t=new Promise(((i,n)=>{e=i,r=n})),a=\"object\"==typeof window,o=\"undefined\"!=typeof WorkerGlobalScope,l=o&&self.name?.startsWith(\"em-pthread\");n.mountExternalData=(i,e)=>{i.startsWith(\"./\")&&(i=i.substring(2)),(n.fc||(n.fc=new Map)).set(i,e)},n.unmountExternalData=()=>{delete n.fc};var u=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,ld:!0}).buffer.constructor;let f=()=>{const i=(i,e,r)=>(...n)=>{const t=ke,a=e?.();n=i(...n);const o=e?.();return a!==o&&(i=o,r(a),e=r=null),ke!=t?new Promise(((i,e)=>{ze={resolve:i,reject:e}})):n};(()=>{for(const e of[\"_OrtAppendExecutionProvider\",\"_OrtCreateSession\",\"_OrtRun\",\"_OrtRunWithBinding\",\"_OrtBindInput\"])n[e]=i(n[e],(()=>n[e]),(i=>n[e]=i))})(),\"undefined\"!=typeof jsepRunAsync&&(n._OrtRun=jsepRunAsync(n._OrtRun),n._OrtRunWithBinding=jsepRunAsync(n._OrtRunWithBinding)),f=void 0};n.asyncInit=()=>{f?.()};var s,c,d=(i,e)=>{throw e},y=import.meta.url,m=\"\";if(a||o){try{m=new URL(\".\",y).href}catch{}o&&(c=i=>{var e=new XMLHttpRequest;return e.open(\"GET\",i,!1),e.responseType=\"arraybuffer\",e.send(null),new Uint8Array(e.response)}),s=async i=>{if(D(i))return new Promise(((e,r)=>{var n=new XMLHttpRequest;n.open(\"GET\",i,!0),n.responseType=\"arraybuffer\",n.onload=()=>{200==n.status||0==n.status&&n.response?e(n.response):r(n.status)},n.onerror=r,n.send(null)}));var e=await fetch(i,{credentials:\"same-origin\"});if(e.ok)return e.arrayBuffer();throw Error(e.status+\" : \"+e.url)}}var v,p,g,_,C,h,b,w,j,x,O,S,T,A,B,P=console.log.bind(console),E=console.error.bind(console),M=P,R=E,W=!1,D=i=>i.startsWith(\"file://\");function U(){return p.buffer!=C.buffer&&N(),C}function k(){return p.buffer!=C.buffer&&N(),h}function I(){return p.buffer!=C.buffer&&N(),b}function G(){return p.buffer!=C.buffer&&N(),w}function F(){return p.buffer!=C.buffer&&N(),j}function L(){return p.buffer!=C.buffer&&N(),x}function $(){return p.buffer!=C.buffer&&N(),O}function z(){return p.buffer!=C.buffer&&N(),A}if(l){var V=!1;function Kt(i){try{var e=i.data,r=e.dc;if(\"load\"===r){let i=[];self.onmessage=e=>i.push(e),self.startWorker=()=>{postMessage({dc:\"loaded\"});for(let e of i)Kt(e);self.onmessage=Kt};for(const i of e.Uc)n[i]&&!n[i].proxy||(n[i]=(...e)=>{postMessage({dc:\"callHandler\",Tc:i,args:e})},\"print\"==i&&(M=n[i]),\"printErr\"==i&&(R=n[i]));p=e.bd,N(),B(e.cd)}else if(\"run\"===r){pi(e.ac),Ut(e.ac,0,0,1,0,0),yi(),je(e.ac),V||(yt(),V=!0);try{gi(e.Zc,e.jc)}catch(i){if(\"unwind\"!=i)throw i}}else\"setimmediate\"!==e.target&&(\"checkMailbox\"===r?V&&xe():r&&(R(`worker: received unknown command ${r}`),R(e)))}catch(i){throw kt(),i}}self.onunhandledrejection=i=>{throw i.reason||i},self.onmessage=Kt}function N(){var i=p.buffer;n.HEAP8=C=new Int8Array(i),b=new Int16Array(i),n.HEAPU8=h=new Uint8Array(i),w=new Uint16Array(i),n.HEAP32=j=new Int32Array(i),n.HEAPU32=x=new Uint32Array(i),O=new Float32Array(i),A=new Float64Array(i),S=new BigInt64Array(i),T=new BigUint64Array(i)}function H(){l?startWorker(n):ct.nb()}var q,Y=0,Q=null;function X(){if(0==--Y&&Q){var i=Q;Q=null,i()}}function Z(i){throw R(i=\"Aborted(\"+i+\")\"),W=!0,i=new WebAssembly.RuntimeError(i+\". Build with -sASSERTIONS for more info.\"),r(i),i}function J(){return{a:{R:st,b:hi,ba:wi,I:Si,ra:Ti,jb:Ai,lb:Bi,sa:Pi,pa:Ei,ia:Mi,oa:Ri,P:Wi,kb:Di,hb:Ui,qa:ki,ib:Ii,xa:Fi,Z:Yi,cb:Xi,ab:te,Y:oe,w:le,t:ue,bb:ce,L:Ce,db:he,la:be,fb:Oe,ca:Te,_a:Ae,$:Be,ka:je,ua:Pe,s:Re,Na:We,A:He,o:Ye,m:Ze,c:Ki,Ma:Je,n:ir,i:nr,v:tr,p:ar,f:or,u:lr,k:ur,e:fr,j:sr,h:cr,g:dr,d:yr,fa:mr,ga:_r,ha:Cr,da:hr,ea:br,$a:xr,za:Or,wa:Ar,E:Er,La:Mr,M:Rr,va:Sr,C:Wr,ta:Dr,gb:Ur,r:jr,Ia:kr,F:Ir,Q:Gr,eb:Fr,Ba:Vr,Aa:Nr,Ha:cn,q:dn,U:mn,T:vn,Ka:pn,D:gn,l:_n,Ga:Cn,Fa:hn,Ja:bn,Ea:wn,Da:jn,Ca:xn,ma:An,na:Bn,aa:li,J:Pn,O:En,ja:Mn,N:Wn,a:p,ya:ai,Xa:Dn,K:Un,x:kn,S:In,Ya:Gn,y:Fn,Ta:Ln,Va:$n,V:zn,z:Vn,_:Nn,W:Hn,G:qn,Ra:Yn,mb:Qn,B:Xn,Ua:Zn,Wa:Jn,Oa:Kn,Pa:it,Qa:et,H:rt,X:nt,Sa:tt,Za:at}}}class K{name=\"ExitStatus\";constructor(i){this.message=`Program terminated with exit(${i})`,this.status=i}}var ii=i=>{i.terminate(),i.onmessage=()=>{}},ei=[],ri=i=>{0==ui.length&&(vi(),mi(ui[0]));var e=ui.pop();if(!e)return 6;fi.push(e),ci[i.ac]=e,e.ac=i.ac;var r={dc:\"run\",Zc:i.Yc,jc:i.jc,ac:i.ac};return e.postMessage(r,i.Oc),0},ni=0,ti=(i,e,...r)=>{for(var n=2*r.length,t=qt(),a=Ht(8*n),o=a>>>3,l=0;l<r.length;l++){var u=r[l];\"bigint\"==typeof u?(S[o+2*l]=1n,S[o+2*l+1]=u):(S[o+2*l]=0n,z()[o+2*l+1>>>0]=u)}return i=It(i,0,n,a,e),Nt(t),i};function ai(i){if(l)return ti(0,1,i);if(_=i,!(0<ni)){for(var e of fi)ii(e);for(e of ui)ii(e);ui=[],fi=[],ci={},W=!0}d(0,new K(i))}function oi(i){if(l)return ti(1,0,i);li(i)}var li=i=>{if(_=i,l)throw oi(i),\"unwind\";ai(i)},ui=[],fi=[],si=[],ci={},di=i=>{var e=i.ac;delete ci[e],ui.push(i),fi.splice(fi.indexOf(i),1),i.ac=0,Gt(e)};function yi(){si.forEach((i=>i()))}var mi=i=>new Promise((e=>{i.onmessage=r=>{var t=(r=r.data).dc;if(r.hc&&r.hc!=vt()){var a=ci[r.hc];a?a.postMessage(r,r.Oc):R(`Internal error! Worker sent a message \"${t}\" to target pthread ${r.hc}, but that thread no longer exists!`)}else\"checkMailbox\"===t?xe():\"spawnThread\"===t?ri(r):\"cleanupThread\"===t?di(ci[r.$c]):\"loaded\"===t?(i.loaded=!0,e(i)):\"setimmediate\"===r.target?i.postMessage(r):\"callHandler\"===t?n[r.Tc](...r.args):t&&R(`worker sent an unknown command ${t}`)},i.onerror=i=>{throw R(`worker sent an error! ${i.filename}:${i.lineno}: ${i.message}`),i};var r,t=[];for(r of[])n.propertyIsEnumerable(r)&&t.push(r);i.postMessage({dc:\"load\",Uc:t,bd:p,cd:g})}));function vi(){var i=new Worker((()=>{const i=URL;return import.meta.url>\"file:\"&&import.meta.url<\"file;\"?new i(BUILD_DEFS.BUNDLE_FILENAME,import.meta.url):new URL(import.meta.url)})(),{type:\"module\",workerData:\"em-pthread\",name:\"em-pthread\"});ui.push(i)}var pi=i=>{N();var e=L()[i+52>>>2>>>0];i=L()[i+56>>>2>>>0],Vt(e,e-i),Nt(e)},gi=(i,e)=>{ni=0,i=Yt(i,e),0<ni?_=i:Ft(i)};class _i{constructor(i){this.ic=i-24}}var Ci=i=>-9007199254740992>i||9007199254740992<i?NaN:Number(i);function hi(i,e,r){var n=new _i(i>>>=0);throw e>>>=0,r>>>=0,L()[n.ic+16>>>2>>>0]=0,L()[n.ic+4>>>2>>>0]=e,L()[n.ic+8>>>2>>>0]=r,i}function bi(i,e,r,n){return l?ti(2,1,i,e,r,n):wi(i,e,r,n)}function wi(i,e,r,n){if(i>>>=0,r>>>=0,n>>>=0,void 0===u)return 6;var t=[];return l&&0===t.length?bi(i,e>>>=0,r,n):(i={Yc:r,ac:i,jc:n,Oc:t},l?(i.dc=\"spawnThread\",postMessage(i,t),0):ri(i))}var ji=\"undefined\"!=typeof TextDecoder?new TextDecoder:void 0,xi=(i,e=0,r=NaN)=>{var n=(e>>>=0)+r;for(r=e;i[r]&&!(r>=n);)++r;if(16<r-e&&i.buffer&&ji)return ji.decode(i.buffer instanceof ArrayBuffer?i.subarray(e,r):i.slice(e,r));for(n=\"\";e<r;){var t=i[e++];if(128&t){var a=63&i[e++];if(192==(224&t))n+=String.fromCharCode((31&t)<<6|a);else{var o=63&i[e++];65536>(t=224==(240&t)?(15&t)<<12|a<<6|o:(7&t)<<18|a<<12|o<<6|63&i[e++])?n+=String.fromCharCode(t):(t-=65536,n+=String.fromCharCode(55296|t>>10,56320|1023&t))}}else n+=String.fromCharCode(t)}return n},Oi=(i,e)=>(i>>>=0)?xi(k(),i,e):\"\";function Si(i,e,r){return l?ti(3,1,i,e,r):0}function Ti(i,e){if(l)return ti(4,1,i,e)}function Ai(i,e){if(l)return ti(5,1,i,e)}function Bi(i,e,r){if(l)return ti(6,1,i,e,r)}function Pi(i,e,r){return l?ti(7,1,i,e,r):0}function Ei(i,e){if(l)return ti(8,1,i,e)}function Mi(i,e,r){if(l)return ti(9,1,i,e,r)}function Ri(i,e,r,n){if(l)return ti(10,1,i,e,r,n)}function Wi(i,e,r,n){if(l)return ti(11,1,i,e,r,n)}function Di(i,e,r,n){if(l)return ti(12,1,i,e,r,n)}function Ui(i){if(l)return ti(13,1,i)}function ki(i,e){if(l)return ti(14,1,i,e)}function Ii(i,e,r){if(l)return ti(15,1,i,e,r)}var Gi,Fi=()=>Z(\"\"),Li=i=>{for(var e=\"\";k()[i>>>0];)e+=Gi[k()[i++>>>0]];return e},$i={},zi={},Vi={},Ni=n.BindingError=class extends Error{constructor(i){super(i),this.name=\"BindingError\"}};function Hi(i,e,r={}){return function(i,e,r={}){var n=e.name;if(!i)throw new Ni(`type \"${n}\" must have a positive integer typeid pointer`);if(zi.hasOwnProperty(i)){if(r.Vc)return;throw new Ni(`Cannot register type '${n}' twice`)}zi[i]=e,delete Vi[i],$i.hasOwnProperty(i)&&(e=$i[i],delete $i[i],e.forEach((i=>i())))}(i,e,r)}var qi=(i,e,r)=>{switch(e){case 1:return r?i=>U()[i>>>0]:i=>k()[i>>>0];case 2:return r?i=>I()[i>>>1>>>0]:i=>G()[i>>>1>>>0];case 4:return r?i=>F()[i>>>2>>>0]:i=>L()[i>>>2>>>0];case 8:return r?i=>S[i>>>3]:i=>T[i>>>3];default:throw new TypeError(`invalid integer width (${e}): ${i}`)}};function Yi(i,e,r){r>>>=0,Hi(i>>>=0,{name:e=Li(e>>>0),fromWireType:i=>i,toWireType:function(i,e){if(\"bigint\"!=typeof e&&\"number\"!=typeof e)throw e=null===e?\"null\":\"object\"==(i=typeof e)||\"array\"===i||\"function\"===i?e.toString():\"\"+e,new TypeError(`Cannot convert \"${e}\" to ${this.name}`);return\"number\"==typeof e&&(e=BigInt(e)),e},cc:Qi,readValueFromPointer:qi(e,r,-1==e.indexOf(\"u\")),ec:null})}var Qi=8;function Xi(i,e,r,n){Hi(i>>>=0,{name:e=Li(e>>>0),fromWireType:function(i){return!!i},toWireType:function(i,e){return e?r:n},cc:Qi,readValueFromPointer:function(i){return this.fromWireType(k()[i>>>0])},ec:null})}var Zi=[],Ji=[];function Ki(i){9<(i>>>=0)&&0==--Ji[i+1]&&(Ji[i]=void 0,Zi.push(i))}var ie=i=>{if(!i)throw new Ni(`Cannot use deleted val. handle = ${i}`);return Ji[i]},ee=i=>{switch(i){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:const e=Zi.pop()||Ji.length;return Ji[e]=i,Ji[e+1]=1,e}};function re(i){return this.fromWireType(L()[i>>>2>>>0])}var ne={name:\"emscripten::val\",fromWireType:i=>{var e=ie(i);return Ki(i),e},toWireType:(i,e)=>ee(e),cc:Qi,readValueFromPointer:re,ec:null};function te(i){return Hi(i>>>0,ne)}var ae=(i,e)=>{switch(e){case 4:return function(i){return this.fromWireType($()[i>>>2>>>0])};case 8:return function(i){return this.fromWireType(z()[i>>>3>>>0])};default:throw new TypeError(`invalid float width (${e}): ${i}`)}};function oe(i,e,r){r>>>=0,Hi(i>>>=0,{name:e=Li(e>>>0),fromWireType:i=>i,toWireType:(i,e)=>e,cc:Qi,readValueFromPointer:ae(e,r),ec:null})}function le(i,e,r,n,t){if(i>>>=0,r>>>=0,e=Li(e>>>0),-1===t&&(t=4294967295),t=i=>i,0===n){var a=32-8*r;t=i=>i<<a>>>a}var o=e.includes(\"unsigned\")?function(i,e){return e>>>0}:function(i,e){return e};Hi(i,{name:e,fromWireType:t,toWireType:o,cc:Qi,readValueFromPointer:qi(e,r,0!==n),ec:null})}function ue(i,e,r){function n(i){var e=L()[i>>>2>>>0];return i=L()[i+4>>>2>>>0],new t(U().buffer,i,e)}var t=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][e];Hi(i>>>=0,{name:r=Li(r>>>0),fromWireType:n,cc:Qi,readValueFromPointer:n},{Vc:!0})}var fe=(i,e,r)=>{var n=k();if(e>>>=0,0<r){var t=e;r=e+r-1;for(var a=0;a<i.length;++a){var o=i.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&i.charCodeAt(++a)),127>=o){if(e>=r)break;n[e++>>>0]=o}else{if(2047>=o){if(e+1>=r)break;n[e++>>>0]=192|o>>6}else{if(65535>=o){if(e+2>=r)break;n[e++>>>0]=224|o>>12}else{if(e+3>=r)break;n[e++>>>0]=240|o>>18,n[e++>>>0]=128|o>>12&63}n[e++>>>0]=128|o>>6&63}n[e++>>>0]=128|63&o}}n[e>>>0]=0,i=e-t}else i=0;return i},se=i=>{for(var e=0,r=0;r<i.length;++r){var n=i.charCodeAt(r);127>=n?e++:2047>=n?e+=2:55296<=n&&57343>=n?(e+=4,++r):e+=3}return e};function ce(i,e){Hi(i>>>=0,{name:e=Li(e>>>0),fromWireType:function(i){for(var e,r=L()[i>>>2>>>0],n=i+4,t=n,a=0;a<=r;++a){var o=n+a;a!=r&&0!=k()[o>>>0]||(t=Oi(t,o-t),void 0===e?e=t:(e+=String.fromCharCode(0),e+=t),t=o+1)}return pt(i),e},toWireType:function(i,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var r=\"string\"==typeof e;if(!(r||ArrayBuffer.isView(e)&&1==e.BYTES_PER_ELEMENT))throw new Ni(\"Cannot pass non-string to std::string\");var n=r?se(e):e.length,t=gt(4+n+1),a=t+4;return L()[t>>>2>>>0]=n,r?fe(e,a,n+1):k().set(e,a>>>0),null!==i&&i.push(pt,t),t},cc:Qi,readValueFromPointer:re,ec(i){pt(i)}})}var de=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0,ye=(i,e)=>{for(var r=i>>1,n=r+e/2;!(r>=n)&&G()[r>>>0];)++r;if(32<(r<<=1)-i&&de)return de.decode(k().slice(i,r));for(r=\"\",n=0;!(n>=e/2);++n){var t=I()[i+2*n>>>1>>>0];if(0==t)break;r+=String.fromCharCode(t)}return r},me=(i,e,r)=>{if(r??=2147483647,2>r)return 0;var n=e;r=(r-=2)<2*i.length?r/2:i.length;for(var t=0;t<r;++t){var a=i.charCodeAt(t);I()[e>>>1>>>0]=a,e+=2}return I()[e>>>1>>>0]=0,e-n},ve=i=>2*i.length,pe=(i,e)=>{for(var r=0,n=\"\";!(r>=e/4);){var t=F()[i+4*r>>>2>>>0];if(0==t)break;++r,65536<=t?(t-=65536,n+=String.fromCharCode(55296|t>>10,56320|1023&t)):n+=String.fromCharCode(t)}return n},ge=(i,e,r)=>{if(e>>>=0,r??=2147483647,4>r)return 0;var n=e;r=n+r-4;for(var t=0;t<i.length;++t){var a=i.charCodeAt(t);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&i.charCodeAt(++t)),F()[e>>>2>>>0]=a,(e+=4)+4>r)break}return F()[e>>>2>>>0]=0,e-n},_e=i=>{for(var e=0,r=0;r<i.length;++r){var n=i.charCodeAt(r);55296<=n&&57343>=n&&++r,e+=4}return e};function Ce(i,e,r){if(i>>>=0,e>>>=0,r=Li(r>>>=0),2===e)var n=ye,t=me,a=ve,o=i=>G()[i>>>1>>>0];else 4===e&&(n=pe,t=ge,a=_e,o=i=>L()[i>>>2>>>0]);Hi(i,{name:r,fromWireType:i=>{for(var r,t=L()[i>>>2>>>0],a=i+4,l=0;l<=t;++l){var u=i+4+l*e;l!=t&&0!=o(u)||(a=n(a,u-a),void 0===r?r=a:(r+=String.fromCharCode(0),r+=a),a=u+e)}return pt(i),r},toWireType:(i,n)=>{if(\"string\"!=typeof n)throw new Ni(`Cannot pass non-string to C++ string type ${r}`);var o=a(n),l=gt(4+o+e);return L()[l>>>2>>>0]=o/e,t(n,l+4,o+e),null!==i&&i.push(pt,l),l},cc:Qi,readValueFromPointer:re,ec(i){pt(i)}})}function he(i,e){Hi(i>>>=0,{Wc:!0,name:e=Li(e>>>0),cc:0,fromWireType:()=>{},toWireType:()=>{}})}function be(i){Ut(i>>>0,!o,1,!a,131072,!1),yi()}var we=i=>{if(!W)try{if(i(),!(0<ni))try{l?Ft(_):li(_)}catch(i){i instanceof K||\"unwind\"==i||d(0,i)}}catch(i){i instanceof K||\"unwind\"==i||d(0,i)}};function je(i){i>>>=0,\"function\"==typeof Atomics.ad&&(Atomics.ad(F(),i>>>2,i).value.then(xe),i+=128,Atomics.store(F(),i>>>2,1))}var xe=()=>{var i=vt();i&&(je(i),we($t))};function Oe(i,e){(i>>>=0)==e>>>0?setTimeout(xe):l?postMessage({hc:i,dc:\"checkMailbox\"}):(i=ci[i])&&i.postMessage({dc:\"checkMailbox\"})}var Se=[];function Te(i,e,r,n,t){for(e>>>=0,n/=2,Se.length=n,r=t>>>0>>>3,t=0;t<n;t++)Se[t]=S[r+2*t]?S[r+2*t+1]:z()[r+2*t+1>>>0];return(e?ft[e]:ut[i])(...Se)}var Ae=()=>{ni=0};function Be(i){i>>>=0,l?postMessage({dc:\"cleanupThread\",$c:i}):di(ci[i])}function Pe(i){}var Ee=(i,e)=>{var r=zi[i];if(void 0===r)throw i=dt(i),r=Li(i),pt(i),new Ni(`${e} has unknown type ${r}`);return r},Me=(i,e,r)=>{var n=[];return i=i.toWireType(n,r),n.length&&(L()[e>>>2>>>0]=ee(n)),i};function Re(i,e,r){return e>>>=0,r>>>=0,i=ie(i>>>0),e=Ee(e,\"emval::as\"),Me(e,r,i)}function We(i,e){return e>>>=0,i=ie(i>>>0),(e=Ee(e,\"emval::as\")).toWireType(null,i)}var De=i=>{try{i()}catch(i){Z(i)}},Ue=0,ke=null,Ie=0,Ge=[],Fe={},Le={},$e=0,ze=null,Ve=[];function Ne(i){return function(i){if(!W){if(0===Ue){var e=!1,r=!1;i(((i=0)=>{if(!W&&(Ie=i,e=!0,r)){Ue=2,De((()=>Zt(ke))),\"undefined\"!=typeof MainLoop&&MainLoop.Sc&&MainLoop.resume(),i=!1;try{var n=function(){var i=F()[ke+8>>>2>>>0];return i=ct[Le[i]],--ni,i()}()}catch(e){n=e,i=!0}var t=!1;if(!ke){var a=ze;a&&(ze=null,(i?a.reject:a.resolve)(n),t=!0)}if(i&&!t)throw n}})),r=!0,e||(Ue=1,ke=function(){var i=gt(65548),e=i+12;L()[i>>>2>>>0]=e,L()[i+4>>>2>>>0]=e+65536,e=Ge[0];var r=Fe[e];return void 0===r&&(r=$e++,Fe[e]=r,Le[r]=e),e=r,F()[i+8>>>2>>>0]=e,i}(),\"undefined\"!=typeof MainLoop&&MainLoop.Sc&&MainLoop.pause(),De((()=>Qt(ke))))}else 2===Ue?(Ue=0,De(Jt),pt(ke),ke=null,Ve.forEach(we)):Z(`invalid state: ${Ue}`);return Ie}}((e=>{i().then(e)}))}function He(i){return i>>>=0,Ne((async()=>{var e=await ie(i);return ee(e)}))}var qe=[];function Ye(i,e,r,n){return r>>>=0,n>>>=0,(i=qe[i>>>0])(null,e=ie(e>>>0),r,n)}var Qe={},Xe=i=>{var e=Qe[i];return void 0===e?Li(i):e};function Ze(i,e,r,n,t){return r>>>=0,n>>>=0,t>>>=0,(i=qe[i>>>0])(e=ie(e>>>0),e[r=Xe(r)],n,t)}function Je(i,e){return e>>>=0,(i=ie(i>>>0))==ie(e)}var Ke=()=>\"object\"==typeof globalThis?globalThis:Function(\"return this\")();function ir(i){return 0==(i>>>=0)?ee(Ke()):(i=Xe(i),ee(Ke()[i]))}var er=i=>{var e=qe.length;return qe.push(i),e},rr=(i,e)=>{for(var r=Array(i),n=0;n<i;++n)r[n]=Ee(L()[e+4*n>>>2>>>0],`parameter ${n}`);return r};function nr(i,e,r){var n=(e=rr(i,e>>>0)).shift();i--;var t=\"return function (obj, func, destructorsRef, args) {\\n\",a=0,o=[];0===r&&o.push(\"obj\");for(var l=[\"retType\"],u=[n],f=0;f<i;++f)o.push(`arg${f}`),l.push(`argType${f}`),u.push(e[f]),t+=`  var arg${f} = argType${f}.readValueFromPointer(args${a?\"+\"+a:\"\"});\\n`,a+=e[f].cc;return t+=`  var rv = ${1===r?\"new func\":\"func.call\"}(${o.join(\", \")});\\n`,n.Wc||(l.push(\"emval_returnValue\"),u.push(Me),t+=\"  return emval_returnValue(retType, destructorsRef, rv);\\n\"),i=new Function(...l,t+\"};\\n\")(...u),r=`methodCaller<(${e.map((i=>i.name)).join(\", \")}) => ${n.name}>`,er(Object.defineProperty(i,\"name\",{value:r}))}function tr(i){return i=Xe(i>>>0),ee(n[i])}function ar(i,e){return e>>>=0,i=ie(i>>>0),e=ie(e),ee(i[e])}function or(i){9<(i>>>=0)&&(Ji[i+1]+=1)}function lr(){return ee([])}function ur(i){i=ie(i>>>0);for(var e=Array(i.length),r=0;r<i.length;r++)e[r]=i[r];return ee(e)}function fr(i){return ee(Xe(i>>>0))}function sr(){return ee({})}function cr(i){for(var e=ie(i>>>=0);e.length;){var r=e.pop();e.pop()(r)}Ki(i)}function dr(i,e,r){e>>>=0,r>>>=0,i=ie(i>>>0),e=ie(e),r=ie(r),i[e]=r}function yr(i,e){return e>>>=0,i=(i=Ee(i>>>0,\"_emval_take_value\")).readValueFromPointer(e),ee(i)}function mr(i,e){i=Ci(i),e>>>=0,i=new Date(1e3*i),F()[e>>>2>>>0]=i.getUTCSeconds(),F()[e+4>>>2>>>0]=i.getUTCMinutes(),F()[e+8>>>2>>>0]=i.getUTCHours(),F()[e+12>>>2>>>0]=i.getUTCDate(),F()[e+16>>>2>>>0]=i.getUTCMonth(),F()[e+20>>>2>>>0]=i.getUTCFullYear()-1900,F()[e+24>>>2>>>0]=i.getUTCDay(),i=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,F()[e+28>>>2>>>0]=i}var vr=i=>0==i%4&&(0!=i%100||0==i%400),pr=[0,31,60,91,121,152,182,213,244,274,305,335],gr=[0,31,59,90,120,151,181,212,243,273,304,334];function _r(i,e){i=Ci(i),e>>>=0,i=new Date(1e3*i),F()[e>>>2>>>0]=i.getSeconds(),F()[e+4>>>2>>>0]=i.getMinutes(),F()[e+8>>>2>>>0]=i.getHours(),F()[e+12>>>2>>>0]=i.getDate(),F()[e+16>>>2>>>0]=i.getMonth(),F()[e+20>>>2>>>0]=i.getFullYear()-1900,F()[e+24>>>2>>>0]=i.getDay();var r=(vr(i.getFullYear())?pr:gr)[i.getMonth()]+i.getDate()-1|0;F()[e+28>>>2>>>0]=r,F()[e+36>>>2>>>0]=-60*i.getTimezoneOffset(),r=new Date(i.getFullYear(),6,1).getTimezoneOffset();var n=new Date(i.getFullYear(),0,1).getTimezoneOffset();i=0|(r!=n&&i.getTimezoneOffset()==Math.min(n,r)),F()[e+32>>>2>>>0]=i}function Cr(i){i>>>=0;var e=new Date(F()[i+20>>>2>>>0]+1900,F()[i+16>>>2>>>0],F()[i+12>>>2>>>0],F()[i+8>>>2>>>0],F()[i+4>>>2>>>0],F()[i>>>2>>>0],0),r=F()[i+32>>>2>>>0],n=e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset(),a=new Date(e.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(a,t);return 0>r?F()[i+32>>>2>>>0]=Number(t!=a&&o==n):0<r!=(o==n)&&(t=Math.max(a,t),e.setTime(e.getTime()+6e4*((0<r?o:t)-n))),F()[i+24>>>2>>>0]=e.getDay(),r=(vr(e.getFullYear())?pr:gr)[e.getMonth()]+e.getDate()-1|0,F()[i+28>>>2>>>0]=r,F()[i>>>2>>>0]=e.getSeconds(),F()[i+4>>>2>>>0]=e.getMinutes(),F()[i+8>>>2>>>0]=e.getHours(),F()[i+12>>>2>>>0]=e.getDate(),F()[i+16>>>2>>>0]=e.getMonth(),F()[i+20>>>2>>>0]=e.getYear(),i=e.getTime(),BigInt(isNaN(i)?-1:i/1e3)}function hr(i,e,r,n,t,a,o){return l?ti(16,1,i,e,r,n,t,a,o):-52}function br(i,e,r,n,t,a){if(l)return ti(17,1,i,e,r,n,t,a)}var wr={},jr=()=>performance.timeOrigin+performance.now();function xr(i,e){if(l)return ti(18,1,i,e);if(wr[i]&&(clearTimeout(wr[i].id),delete wr[i]),!e)return 0;var r=setTimeout((()=>{delete wr[i],we((()=>Lt(i,performance.timeOrigin+performance.now())))}),e);return wr[i]={id:r,nd:e},0}function Or(i,e,r,n){i>>>=0,e>>>=0,r>>>=0,n>>>=0;var t=(new Date).getFullYear(),a=new Date(t,0,1).getTimezoneOffset();t=new Date(t,6,1).getTimezoneOffset();var o=Math.max(a,t);L()[i>>>2>>>0]=60*o,F()[e>>>2>>>0]=Number(a!=t),i=(e=i=>{var e=Math.abs(i);return`UTC${0<=i?\"-\":\"+\"}${String(Math.floor(e/60)).padStart(2,\"0\")}${String(e%60).padStart(2,\"0\")}`})(a),e=e(t),t<a?(fe(i,r,17),fe(e,n,17)):(fe(i,n,17),fe(e,r,17))}var Sr=()=>Date.now(),Tr=1;function Ar(i,e,r){if(!(0<=i&&3>=i))return 28;if(0===i)i=Date.now();else{if(!Tr)return 52;i=performance.timeOrigin+performance.now()}return S[r>>>0>>>3]=BigInt(Math.round(1e6*i)),0}var Br=[],Pr=(i,e)=>{Br.length=0;for(var r;r=k()[i++>>>0];){var n=105!=r;e+=(n&=112!=r)&&e%8?4:0,Br.push(112==r?L()[e>>>2>>>0]:106==r?S[e>>>3]:105==r?F()[e>>>2>>>0]:z()[e>>>3>>>0]),e+=n?8:4}return Br};function Er(i,e,r){return i>>>=0,e=Pr(e>>>0,r>>>0),ft[i](...e)}function Mr(i,e,r){return i>>>=0,e=Pr(e>>>0,r>>>0),ft[i](...e)}var Rr=()=>{};function Wr(i,e){return R(Oi(i>>>0,e>>>0))}var Dr=()=>{throw ni+=1,\"unwind\"};function Ur(){return 4294901760}var kr=()=>1,Ir=()=>navigator.hardwareConcurrency;function Gr(){return Z(\"Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER\"),0}function Fr(i){i>>>=0;var e=k().length;if(i<=e||4294901760<i)return!1;for(var r=1;4>=r;r*=2){var n=e*(1+.2/r);n=Math.min(n,i+100663296);i:{n=(Math.min(4294901760,65536*Math.ceil(Math.max(i,n)/65536))-p.buffer.byteLength+65535)/65536|0;try{p.grow(n),N();var t=1;break i}catch(i){}t=void 0}if(t)return!0}return!1}var Lr=()=>(Z(\"Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER\"),0),$r={},zr=i=>{i.forEach((i=>{var e=Lr();e&&($r[e]=i)}))};function Vr(){var i=Error().stack.toString().split(\"\\n\");return\"Error\"==i[0]&&i.shift(),zr(i),$r.oc=Lr(),$r.Xc=i,$r.oc}function Nr(i,e,r){if(i>>>=0,e>>>=0,$r.oc==i)var n=$r.Xc;else\"Error\"==(n=Error().stack.toString().split(\"\\n\"))[0]&&n.shift(),zr(n);for(var t=3;n[t]&&Lr()!=i;)++t;for(i=0;i<r&&n[i+t];++i)F()[e+4*i>>>2>>>0]=Lr();return i}var Hr=i=>{var e=se(i)+1,r=Ht(e);return fe(i,r,e),r},qr=[],Yr=(i,e)=>{qr[i>>>=0]=e},Qr=[],Xr=[],Zr=(i,e)=>{Xr[i]=new Promise((r=>e.finally((()=>r(i)))))},Jr=i=>{if(i)return qr[i>>>0]},Kr=(i,e,r)=>{L()[i>>>2>>>0]=e,L()[i+4>>>2>>>0]=r},en=i=>{var e=L()[i>>>2>>>0];return i=L()[i+4>>>2>>>0],Oi(e,i)},rn=i=>{var e=L()[i>>>2>>>0];return i=L()[i+4>>>2>>>0],e?Oi(e,i):0===i?\"\":void 0},nn=(i,e)=>{function r(r,n){r=i[r],F()[e+n>>>2>>>0]=r}function n(r,n){S[e+n>>>3]=BigInt(i[r])}r(\"maxTextureDimension1D\",4),r(\"maxTextureDimension2D\",8),r(\"maxTextureDimension3D\",12),r(\"maxTextureArrayLayers\",16),r(\"maxBindGroups\",20),r(\"maxBindGroupsPlusVertexBuffers\",24),r(\"maxBindingsPerBindGroup\",28),r(\"maxDynamicUniformBuffersPerPipelineLayout\",32),r(\"maxDynamicStorageBuffersPerPipelineLayout\",36),r(\"maxSampledTexturesPerShaderStage\",40),r(\"maxSamplersPerShaderStage\",44),r(\"maxStorageBuffersPerShaderStage\",48),r(\"maxStorageTexturesPerShaderStage\",52),r(\"maxUniformBuffersPerShaderStage\",56),r(\"minUniformBufferOffsetAlignment\",80),r(\"minStorageBufferOffsetAlignment\",84),n(\"maxUniformBufferBindingSize\",64),n(\"maxStorageBufferBindingSize\",72),r(\"maxVertexBuffers\",88),n(\"maxBufferSize\",96),r(\"maxVertexAttributes\",104),r(\"maxVertexBufferArrayStride\",108),r(\"maxInterStageShaderVariables\",112),r(\"maxColorAttachments\",116),r(\"maxColorAttachmentBytesPerSample\",120),r(\"maxComputeWorkgroupStorageSize\",124),r(\"maxComputeInvocationsPerWorkgroup\",128),r(\"maxComputeWorkgroupSizeX\",132),r(\"maxComputeWorkgroupSizeY\",136),r(\"maxComputeWorkgroupSizeZ\",140),r(\"maxComputeWorkgroupsPerDimension\",144),void 0!==i.kd&&r(\"maxImmediateSize\",148)},tn={undefined:1,pd:1,gd:2},an={1:\"validation\",2:\"out-of-memory\",3:\"internal\"},on=[,\"compatibility\",\"core\"],ln={1:\"depth-clip-control\",2:\"depth32float-stencil8\",3:\"timestamp-query\",4:\"texture-compression-bc\",5:\"texture-compression-bc-sliced-3d\",6:\"texture-compression-etc2\",7:\"texture-compression-astc\",8:\"texture-compression-astc-sliced-3d\",9:\"indirect-first-instance\",10:\"shader-f16\",11:\"rg11b10ufloat-renderable\",12:\"bgra8unorm-storage\",13:\"float32-filterable\",14:\"float32-blendable\",15:\"clip-distances\",16:\"dual-source-blending\",17:\"subgroups\",18:\"core-features-and-limits\",327692:\"chromium-experimental-unorm16-texture-formats\",327693:\"chromium-experimental-snorm16-texture-formats\",327732:\"chromium-experimental-multi-draw-indirect\"},un=[,\"low-power\",\"high-performance\"],fn={1:\"occlusion\",2:\"timestamp\"},sn={\"depth-clip-control\":\"1\",\"depth32float-stencil8\":\"2\",\"timestamp-query\":\"3\",\"texture-compression-bc\":\"4\",\"texture-compression-bc-sliced-3d\":\"5\",\"texture-compression-etc2\":\"6\",\"texture-compression-astc\":\"7\",\"texture-compression-astc-sliced-3d\":\"8\",\"indirect-first-instance\":\"9\",\"shader-f16\":\"10\",\"rg11b10ufloat-renderable\":\"11\",\"bgra8unorm-storage\":\"12\",\"float32-filterable\":\"13\",\"float32-blendable\":\"14\",\"clip-distances\":\"15\",\"dual-source-blending\":\"16\",md:\"17\",\"core-features-and-limits\":\"18\",\"chromium-experimental-unorm16-texture-formats\":\"327692\",\"chromium-experimental-snorm16-texture-formats\":\"327693\",\"chromium-experimental-multi-draw-indirect\":\"327732\"};function cn(i,e,r,n,t,a){e=Ci(e),r=Ci(r),n>>>=0,t>>>=0,a>>>=0,i=Jr(i>>>0);var o={};if(a){var l=L()[a+12>>>2>>>0];if(l){var u=L()[a+16>>>2>>>0];o.requiredFeatures=Array.from(L().subarray(u>>>2>>>0,u+4*l>>>2>>>0),(i=>ln[i]))}var f=L()[a+20>>>2>>>0];if(f){var s={};function c(i,e,r=!1){e=f+e,4294967295==(e=L()[e>>>2>>>0])||r&&0==e||(s[i]=e)}function d(i,e){e=f+e;var r=L()[e>>>2>>>0],n=L()[e+4>>>2>>>0];4294967295==r&&4294967295==n||(s[i]=4294967296*L()[e+4>>>2>>>0]+L()[e>>>2>>>0])}c(\"maxTextureDimension1D\",4),c(\"maxTextureDimension2D\",8),c(\"maxTextureDimension3D\",12),c(\"maxTextureArrayLayers\",16),c(\"maxBindGroups\",20),c(\"maxBindGroupsPlusVertexBuffers\",24),c(\"maxDynamicUniformBuffersPerPipelineLayout\",32),c(\"maxDynamicStorageBuffersPerPipelineLayout\",36),c(\"maxSampledTexturesPerShaderStage\",40),c(\"maxSamplersPerShaderStage\",44),c(\"maxStorageBuffersPerShaderStage\",48),c(\"maxStorageTexturesPerShaderStage\",52),c(\"maxUniformBuffersPerShaderStage\",56),c(\"minUniformBufferOffsetAlignment\",80),c(\"minStorageBufferOffsetAlignment\",84),d(\"maxUniformBufferBindingSize\",64),d(\"maxStorageBufferBindingSize\",72),c(\"maxVertexBuffers\",88),d(\"maxBufferSize\",96),c(\"maxVertexAttributes\",104),c(\"maxVertexBufferArrayStride\",108),c(\"maxInterStageShaderVariables\",112),c(\"maxColorAttachments\",116),c(\"maxColorAttachmentBytesPerSample\",120),c(\"maxComputeWorkgroupStorageSize\",124),c(\"maxComputeInvocationsPerWorkgroup\",128),c(\"maxComputeWorkgroupSizeX\",132),c(\"maxComputeWorkgroupSizeY\",136),c(\"maxComputeWorkgroupSizeZ\",140),c(\"maxComputeWorkgroupsPerDimension\",144),c(\"maxImmediateSize\",148,!0),o.requiredLimits=s}(l=L()[a+24>>>2>>>0])&&(l={label:rn(l+4)},o.defaultQueue=l),o.label=rn(a+4)}ni+=1,Zr(e,i.requestDevice(o).then((i=>{--ni,Yr(t,i.queue),Yr(n,i),r&&(ni+=1,Zr(r,i.lost.then((e=>{--ni,i.onuncapturederror=()=>{};var n=qt(),t=Hr(e.message);Pt(r,tn[e.reason],t),Nt(n)})))),i.onuncapturederror=i=>{var e=5;i.error instanceof GPUValidationError?e=2:i.error instanceof GPUOutOfMemoryError?e=3:i.error instanceof GPUInternalError&&(e=4);var r=qt();i=Hr(i.error.message),Dt(n,e,i),Nt(r)},Wt(e,1,n,0)}),(i=>{--ni;var t=qt();i=Hr(i.message),Wt(e,3,n,i),r&&Pt(r,4,i),Nt(t)})))}function dn(i){var e=Jr(i>>>=0),r=Qr[i];if(r){for(var n=0;n<r.length;++n)r[n]();delete Qr[i]}e.destroy()}var yn=()=>{var i=\"getMappedRange size=0 no longer means WGPU_WHOLE_MAP_SIZE\";yn.kc||(yn.kc={}),yn.kc[i]||(yn.kc[i]=1,R(i))};function mn(i,e,r){e>>>=0,r>>>=0;var n=Jr(i>>>=0);0===r&&yn(),4294967295==r&&(r=void 0);try{var t=n.getMappedRange(e,r)}catch(i){return 0}var a=zt(16,t.byteLength);return k().set(new Uint8Array(t),a>>>0),Qr[i].push((()=>pt(a))),a}function vn(i,e,r){e>>>=0,r>>>=0;var n=Jr(i>>>=0);0===r&&yn(),4294967295==r&&(r=void 0);try{var t=n.getMappedRange(e,r)}catch(i){return 0}var a=zt(16,t.byteLength);return k().fill(0,a,t.byteLength),Qr[i].push((()=>{new Uint8Array(t).set(k().subarray(a>>>0,a+t.byteLength>>>0)),pt(a)})),a}function pn(i,e,r,n,t){i>>>=0,e=Ci(e),r=Ci(r),t>>>=0;var a=Jr(i);Qr[i]=[],4294967295==t&&(t=void 0),ni+=1,Zr(e,a.mapAsync(r,n>>>0,t).then((()=>{--ni,Et(e,1,0)}),(r=>{--ni,qt();var n=Hr(r.message);Et(e,\"AbortError\"===r.name?4:\"OperationError\"===r.name?3:0,n),delete Qr[i]})))}function gn(i){var e=Jr(i>>>=0),r=Qr[i];if(r){for(var n=0;n<r.length;++n)r[n]();delete Qr[i],e.unmap()}}function _n(i){delete qr[i>>>0]}function Cn(i,e,r){i>>>=0,e>>>=0,r>>>=0;var n=!!L()[e+32>>>2>>>0];e={label:rn(e+4),usage:L()[e+16>>>2>>>0],size:4294967296*L()[e+28>>>2>>>0]+L()[e+24>>>2>>>0],mappedAtCreation:n},i=Jr(i);try{var t=i.createBuffer(e)}catch(i){return!1}return Yr(r,t),n&&(Qr[r]=[]),!0}function hn(i,e,r){i>>>=0,e>>>=0,r>>>=0;var n=L()[e>>>2>>>0],t=L()[n+4>>>2>>>0];e={label:rn(e+4),code:\"\"},2===t&&(e.code=en(n+8)),Yr(r,Jr(i).createShaderModule(e))}var bn=i=>{Jr(i).destroy()};function wn(i,e){e=Ci(e),i=Jr(i>>>0),ni+=1,Zr(e,i.popErrorScope().then((i=>{--ni;var r=5;i?i instanceof GPUValidationError?r=2:i instanceof GPUOutOfMemoryError?r=3:i instanceof GPUInternalError&&(r=4):r=1;var n=qt();i=i?Hr(i.message):0,Mt(e,1,r,i),Nt(n)}),(i=>{--ni;var r=qt();i=Hr(i.message),Mt(e,1,5,i),Nt(r)})))}function jn(i,e,r,n){if(e=Ci(e),n>>>=0,r>>>=0){var t=L()[r+4>>>2>>>0];t={featureLevel:on[t],powerPreference:un[L()[r+8>>>2>>>0]],forceFallbackAdapter:!!L()[r+12>>>2>>>0]},0!==(r=L()[r>>>2>>>0])&&(L(),t.rd=!!L()[r+8>>>2>>>0])}\"gpu\"in navigator?(ni+=1,Zr(e,navigator.gpu.requestAdapter(t).then((i=>{if(--ni,i)Yr(n,i),Rt(e,1,n,0);else{i=qt();var r=Hr(\"WebGPU not available on this browser (requestAdapter returned null)\");Rt(e,3,n,r),Nt(i)}}),(i=>{--ni;var r=qt();i=Hr(i.message),Rt(e,4,n,i),Nt(r)})))):(r=qt(),t=Hr(\"WebGPU not available on this browser (navigator.gpu is not available)\"),Rt(e,3,n,t),Nt(r))}function xn(i,e,r){return i>>>=0,e>>>=0,r>>>=0,Ne((async()=>{var n=[];if(r){var t=F()[r>>>2>>>0];n.length=e+1,n[e]=new Promise((i=>setTimeout(i,t,0)))}else n.length=e;for(var a=0;a<e;++a){var o=4294967296*L()[i+8*a+4>>>2>>>0]+L()[i+8*a>>>2>>>0];if(!(o in Xr))return o;n[a]=Xr[o]}return n=await Promise.race(n),delete Xr[n],n}))}var On,Sn={},Tn=()=>{if(!On){var i,e={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:\"./this.program\"};for(i in Sn)void 0===Sn[i]?delete e[i]:e[i]=Sn[i];var r=[];for(i in e)r.push(`${i}=${e[i]}`);On=r}return On};function An(i,e){if(l)return ti(19,1,i,e);i>>>=0,e>>>=0;var r,n=0,t=0;for(r of Tn()){var a=e+n;L()[i+t>>>2>>>0]=a,n+=fe(r,a,1/0)+1,t+=4}return 0}function Bn(i,e){if(l)return ti(20,1,i,e);i>>>=0,e>>>=0;var r=Tn();for(var n of(L()[i>>>2>>>0]=r.length,i=0,r))i+=se(n)+1;return L()[e>>>2>>>0]=i,0}function Pn(i){return l?ti(21,1,i):52}function En(i,e,r,n){return l?ti(22,1,i,e,r,n):52}function Mn(i,e,r,n){return l?ti(23,1,i,e,r,n):70}var Rn=[null,[],[]];function Wn(i,e,r,n){if(l)return ti(24,1,i,e,r,n);e>>>=0,r>>>=0,n>>>=0;for(var t=0,a=0;a<r;a++){var o=L()[e>>>2>>>0],u=L()[e+4>>>2>>>0];e+=8;for(var f=0;f<u;f++){var s=i,c=k()[o+f>>>0],d=Rn[s];0===c||10===c?((1===s?M:R)(xi(d)),d.length=0):d.push(c)}t+=u}return L()[n>>>2>>>0]=t,0}function Dn(i,e){return nn(Jr(i>>>0).limits,e>>>0),1}function Un(i,e){return Jr(i>>>0).features.has(ln[e])}function kn(i){return BigInt(Jr(i>>>0).size)}function In(i){return BigInt(Jr(i>>>0).usage)}function Gn(i,e){if(i>>>=0,e>>>=0){var r=rn(e+4);r={label:r,timestampWrites:e=0!==(e=L()[e+12>>>2>>>0])?{querySet:Jr(L()[e+4>>>2>>>0]),beginningOfPassWriteIndex:L()[e+8>>>2>>>0],endOfPassWriteIndex:L()[e+12>>>2>>>0]}:void 0}}return i=Jr(i),e=xt(0),Yr(e,i.beginComputePass(r)),e}function Fn(i,e,r,n,t,a){r=Ci(r),t=Ci(t),a=Ci(a),Jr(i>>>0).copyBufferToBuffer(Jr(e>>>0),r,Jr(n>>>0),t,a)}function Ln(i){i=Jr(i>>>0);var e=wt(0);return Yr(e,i.finish()),e}function $n(i,e,r,n,t,a){a=Ci(a),Jr(i>>>0).resolveQuerySet(Jr(e>>>0),r,n,Jr(t>>>0),a)}function zn(i,e,r,n){Jr(i>>>0).dispatchWorkgroups(e,r,n)}function Vn(i){Jr(i>>>0).end()}function Nn(i,e,r,n,t){n>>>=0,t>>>=0,i=Jr(i>>>0),r=Jr(r>>>0),0==n?i.setBindGroup(e,r):i.setBindGroup(e,r,L(),t>>>2,n)}function Hn(i,e){Jr(i>>>0).setPipeline(Jr(e>>>0))}function qn(i,e,r){Jr(i>>>0).qd(Jr(e>>>0),r)}function Yn(i,e){i=Jr(i>>>0);var r=bt(0);return Yr(r,i.getBindGroupLayout(e)),r}function Qn(i,e){i>>>=0;var r=rn(4+(e>>>=0)),n=Jr(L()[e+12>>>2>>>0]),t=L()[e+16>>>2>>>0];e=L()[e+20>>>2>>>0];for(var a=[],o=0;o<t;++o){var l=a,u=l.push,f=e+40*o,s=L()[f+8>>>2>>>0],c=L()[f+32>>>2>>>0],d=L()[f+36>>>2>>>0],y=L()[f+4>>>2>>>0];s?(c=f+24,-1==(c=L()[c>>>2>>>0]+4294967296*F()[c+4>>>2>>>0])&&(c=void 0),f={binding:y,resource:{buffer:Jr(s),offset:4294967296*L()[f+4+16>>>2>>>0]+L()[f+16>>>2>>>0],size:c}}):f=c?{binding:y,resource:Jr(c)}:{binding:y,resource:Jr(d)},u.call(l,f)}return r={label:r,layout:n,entries:a},i=Jr(i),n=ht(0),Yr(n,i.createBindGroup(r)),n}function Xn(i,e){var r;return i>>>=0,(e>>>=0)&&(r={label:rn(e+4)}),i=Jr(i),e=jt(0),Yr(e,i.createCommandEncoder(r)),e}function Zn(i,e){i>>>=0;var r=e>>>0;e=rn(r+4);var n=(n=L()[r+12>>>2>>>0])?Jr(n):\"auto\";if(r+=16){var t=Jr(L()[r+4>>>2>>>0]),a=L()[r+16>>>2>>>0],o=L()[r+20>>>2>>>0];if(a){for(var l={},u=0;u<a;++u){var f=o+24*u;l[en(f+4)]=z()[f+16>>>3>>>0]}a=l}else a=void 0;r={module:t,constants:a,entryPoint:rn(r+8)}}else r=void 0;return e={label:e,layout:n,compute:r},i=Jr(i),n=Ot(0),Yr(n,i.createComputePipeline(e)),n}function Jn(i,e){i>>>=0,e>>>=0,e={type:fn[L()[e+12>>>2>>>0]],count:L()[e+16>>>2>>>0]},i=Jr(i);var r=St(0);return Yr(r,i.createQuerySet(e)),r}function Kn(i,e){i=Jr(i>>>0).adapterInfo,e>>>=0,F()[e+52>>>2>>>0]=i.subgroupMinSize,F()[e+56>>>2>>>0]=i.subgroupMaxSize;var r=i.vendor+i.architecture+i.device+i.description,n=se(r)+1,t=gt(n);return t&&fe(r,t,n),r=t,n=se(i.vendor),Kr(e+4,r,n),r+=n,n=se(i.architecture),Kr(e+12,r,n),r+=n,n=se(i.device),Kr(e+20,r,n),Kr(e+28,r+n,se(i.description)),F()[e+36>>>2>>>0]=2,i=i.isFallbackAdapter?3:4,F()[e+40>>>2>>>0]=i,F()[e+44>>>2>>>0]=0,F()[e+48>>>2>>>0]=0,1}function it(i,e){e>>>=0,i=Jr(i>>>0);var r=gt(4*i.features.size),n=0,t=0;i.features.forEach((i=>{void 0!==(i=sn[i])&&(F()[r+n>>>2>>>0]=i,n+=4,t++)})),L()[e+4>>>2>>>0]=r,L()[e>>>2>>>0]=t}function et(i,e){return nn(Jr(i>>>0).limits,e>>>0),1}function rt(i,e){return Jr(i>>>0).features.has(ln[e])}function nt(i,e){Jr(i>>>0).pushErrorScope(an[e])}function tt(i,e,r){e>>>=0,r>>>=0,i=Jr(i>>>0),e=Array.from(F().subarray(r>>>2>>>0,r+4*e>>>2>>>0),(i=>Jr(i))),i.submit(e)}function at(i,e,r,n,t){r=Ci(r),n>>>=0,t>>>=0,i=Jr(i>>>0),e=Jr(e>>>0),n=k().subarray(n>>>0,n+t>>>0),i.writeBuffer(e,r,n,0,t)}l||function(){for(var i=n.numThreads-1;i--;)vi();ei.push((()=>{Y++,function(i){l?i():Promise.all(ui.map(mi)).then(i)}((()=>X()))}))}();for(var ot=Array(256),lt=0;256>lt;++lt)ot[lt]=String.fromCharCode(lt);Gi=ot,Ji.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>Ji.length/2-5-Zi.length,l||(p=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),N()),n.wasmBinary&&(v=n.wasmBinary),n.stackSave=()=>qt(),n.stackRestore=i=>Nt(i),n.stackAlloc=i=>Ht(i),n.setValue=function(i,e,r=\"i8\"){switch(r.endsWith(\"*\")&&(r=\"*\"),r){case\"i1\":case\"i8\":U()[i>>>0]=e;break;case\"i16\":I()[i>>>1>>>0]=e;break;case\"i32\":F()[i>>>2>>>0]=e;break;case\"i64\":S[i>>>3]=BigInt(e);break;case\"float\":$()[i>>>2>>>0]=e;break;case\"double\":z()[i>>>3>>>0]=e;break;case\"*\":L()[i>>>2>>>0]=e;break;default:Z(`invalid type for setValue: ${r}`)}},n.getValue=function(i,e=\"i8\"){switch(e.endsWith(\"*\")&&(e=\"*\"),e){case\"i1\":case\"i8\":return U()[i>>>0];case\"i16\":return I()[i>>>1>>>0];case\"i32\":return F()[i>>>2>>>0];case\"i64\":return S[i>>>3];case\"float\":return $()[i>>>2>>>0];case\"double\":return z()[i>>>3>>>0];case\"*\":return L()[i>>>2>>>0];default:Z(`invalid type for getValue: ${e}`)}},n.UTF8ToString=Oi,n.stringToUTF8=fe,n.lengthBytesUTF8=se;var ut=[ai,oi,bi,Si,Ti,Ai,Bi,Pi,Ei,Mi,Ri,Wi,Di,Ui,ki,Ii,hr,br,xr,An,Bn,Pn,En,Mn,Wn],ft={1046876:(i,e,r,t,a)=>{if(void 0===n||!n.fc)return 1;if((i=Oi(Number(i>>>0))).startsWith(\"./\")&&(i=i.substring(2)),!(i=n.fc.get(i)))return 2;if(e=Number(e>>>0),r=Number(r>>>0),t=Number(t>>>0),e+r>i.byteLength)return 3;try{const o=i.subarray(e,e+r);switch(a){case 0:k().set(o,t>>>0);break;case 1:n.Pc?n.Pc(t,o):n.jd(t,o);break;default:return 4}return 0}catch{return 4}},1047700:(i,e,r)=>{n.Rc(i,k().subarray(e>>>0,e+r>>>0))},1047764:()=>n.ed(),1047806:i=>{n.Qc(i)},1047843:()=>\"undefined\"!=typeof wasmOffsetConverter};function st(){return\"undefined\"!=typeof wasmOffsetConverter}var ct=await async function(){function i(i,e){return ct=i.exports,ct=function(){var i=ct,e={};for(let[r,n]of Object.entries(i))e[r]=\"function\"==typeof n?(...i)=>{Ge.push(r);try{return n(...i)}finally{W||(Ge.pop(),ke&&1===Ue&&0===Ge.length&&(Ue=0,ni+=1,De(Xt),\"undefined\"!=typeof Fibers&&Fibers.od()))}}:n;return e}(),ct=function(){var i=ct,e=i=>e=>i(e)>>>0,r=i=>()=>i()>>>0;return(i=Object.assign({},i)).ob=e(i.ob),i.Rb=r(i.Rb),i.Tb=e(i.Tb),i.Dc=(i=>(e,r)=>i(e,r)>>>0)(i.Dc),i.Gc=e(i.Gc),i.Hc=r(i.Hc),i.__cxa_get_exception_ptr=e(i.__cxa_get_exception_ptr),i}(),si.push(ct.vc),g=e,X(),ct}Y++;var e=J();if(n.instantiateWasm)return new Promise((r=>{n.instantiateWasm(e,((e,n)=>{r(i(e,n))}))}));if(l)return new Promise((e=>{B=r=>{var n=new WebAssembly.Instance(r,J());e(i(n,r))}}));q??=n.locateFile?n.locateFile?n.locateFile(\"ort-wasm-simd-threaded.asyncify.wasm\",m):m+\"ort-wasm-simd-threaded.asyncify.wasm\":new URL(\"ort-wasm-simd-threaded.asyncify.wasm\",import.meta.url).href;try{var t=await async function(i){var e=q;if(!v&&\"function\"==typeof WebAssembly.instantiateStreaming&&!D(e))try{var r=fetch(e,{credentials:\"same-origin\"});return await WebAssembly.instantiateStreaming(r,i)}catch(i){R(`wasm streaming compile failed: ${i}`),R(\"falling back to ArrayBuffer instantiation\")}return async function(i,e){try{var r=await async function(i){if(!v)try{var e=await s(i);return new Uint8Array(e)}catch{}if(i==q&&v)i=new Uint8Array(v);else{if(!c)throw\"both async and sync fetching of the wasm failed\";i=c(i)}return i}(i);return await WebAssembly.instantiate(r,e)}catch(i){R(`failed to asynchronously prepare wasm: ${i}`),Z(i)}}(e,i)}(e);return i(t.instance,t.module)}catch(i){return r(i),Promise.reject(i)}}(),dt=i=>(dt=ct.ob)(i),yt=()=>(yt=ct.pb)();n._OrtInit=(i,e)=>(n._OrtInit=ct.qb)(i,e),n._OrtGetLastError=(i,e)=>(n._OrtGetLastError=ct.rb)(i,e),n._OrtCreateSessionOptions=(i,e,r,t,a,o,l,u,f,s)=>(n._OrtCreateSessionOptions=ct.sb)(i,e,r,t,a,o,l,u,f,s),n._OrtAppendExecutionProvider=(i,e,r,t,a)=>(n._OrtAppendExecutionProvider=ct.tb)(i,e,r,t,a),n._OrtAddFreeDimensionOverride=(i,e,r)=>(n._OrtAddFreeDimensionOverride=ct.ub)(i,e,r),n._OrtAddSessionConfigEntry=(i,e,r)=>(n._OrtAddSessionConfigEntry=ct.vb)(i,e,r),n._OrtReleaseSessionOptions=i=>(n._OrtReleaseSessionOptions=ct.wb)(i),n._OrtCreateSession=(i,e,r)=>(n._OrtCreateSession=ct.xb)(i,e,r),n._OrtReleaseSession=i=>(n._OrtReleaseSession=ct.yb)(i),n._OrtGetInputOutputCount=(i,e,r)=>(n._OrtGetInputOutputCount=ct.zb)(i,e,r),n._OrtGetInputOutputMetadata=(i,e,r,t)=>(n._OrtGetInputOutputMetadata=ct.Ab)(i,e,r,t),n._OrtFree=i=>(n._OrtFree=ct.Bb)(i),n._OrtCreateTensor=(i,e,r,t,a,o)=>(n._OrtCreateTensor=ct.Cb)(i,e,r,t,a,o),n._OrtGetTensorData=(i,e,r,t,a)=>(n._OrtGetTensorData=ct.Db)(i,e,r,t,a),n._OrtReleaseTensor=i=>(n._OrtReleaseTensor=ct.Eb)(i),n._OrtCreateRunOptions=(i,e,r,t)=>(n._OrtCreateRunOptions=ct.Fb)(i,e,r,t),n._OrtAddRunConfigEntry=(i,e,r)=>(n._OrtAddRunConfigEntry=ct.Gb)(i,e,r),n._OrtReleaseRunOptions=i=>(n._OrtReleaseRunOptions=ct.Hb)(i),n._OrtCreateBinding=i=>(n._OrtCreateBinding=ct.Ib)(i),n._OrtBindInput=(i,e,r)=>(n._OrtBindInput=ct.Jb)(i,e,r),n._OrtBindOutput=(i,e,r,t)=>(n._OrtBindOutput=ct.Kb)(i,e,r,t),n._OrtClearBoundOutputs=i=>(n._OrtClearBoundOutputs=ct.Lb)(i),n._OrtReleaseBinding=i=>(n._OrtReleaseBinding=ct.Mb)(i),n._OrtRunWithBinding=(i,e,r,t,a)=>(n._OrtRunWithBinding=ct.Nb)(i,e,r,t,a),n._OrtRun=(i,e,r,t,a,o,l,u)=>(n._OrtRun=ct.Ob)(i,e,r,t,a,o,l,u),n._OrtEndProfiling=i=>(n._OrtEndProfiling=ct.Pb)(i);var mt=n._OrtGetWebGpuDevice=i=>(mt=n._OrtGetWebGpuDevice=ct.Qb)(i),vt=()=>(vt=ct.Rb)(),pt=n._free=i=>(pt=n._free=ct.Sb)(i),gt=n._malloc=i=>(gt=n._malloc=ct.Tb)(i),_t=n._wgpuBufferRelease=i=>(_t=n._wgpuBufferRelease=ct.Ub)(i),Ct=n._wgpuCreateInstance=i=>(Ct=n._wgpuCreateInstance=ct.Vb)(i),ht=i=>(ht=ct.Wb)(i),bt=i=>(bt=ct.Xb)(i),wt=i=>(wt=ct.Yb)(i),jt=i=>(jt=ct.Zb)(i),xt=i=>(xt=ct._b)(i),Ot=i=>(Ot=ct.$b)(i),St=i=>(St=ct.bc)(i),Tt=(i,e)=>(Tt=ct.lc)(i,e),At=(i,e)=>(At=ct.mc)(i,e),Bt=i=>(Bt=ct.nc)(i),Pt=(i,e,r)=>(Pt=ct.pc)(i,e,r),Et=(i,e,r)=>(Et=ct.qc)(i,e,r),Mt=(i,e,r,n)=>(Mt=ct.rc)(i,e,r,n),Rt=(i,e,r,n)=>(Rt=ct.sc)(i,e,r,n),Wt=(i,e,r,n)=>(Wt=ct.tc)(i,e,r,n),Dt=(i,e,r)=>(Dt=ct.uc)(i,e,r),Ut=(i,e,r,n,t,a)=>(Ut=ct.wc)(i,e,r,n,t,a),kt=()=>(kt=ct.xc)(),It=(i,e,r,n,t)=>(It=ct.yc)(i,e,r,n,t),Gt=i=>(Gt=ct.zc)(i),Ft=i=>(Ft=ct.Ac)(i),Lt=(i,e)=>(Lt=ct.Bc)(i,e),$t=()=>($t=ct.Cc)(),zt=(i,e)=>(zt=ct.Dc)(i,e),Vt=(i,e)=>(Vt=ct.Ec)(i,e),Nt=i=>(Nt=ct.Fc)(i),Ht=i=>(Ht=ct.Gc)(i),qt=()=>(qt=ct.Hc)(),Yt=n.dynCall_ii=(i,e)=>(Yt=n.dynCall_ii=ct.Ic)(i,e);n.dynCall_viiii=(i,e,r,t,a)=>(n.dynCall_viiii=ct.dynCall_viiii)(i,e,r,t,a),n.dynCall_viiiii=(i,e,r,t,a,o)=>(n.dynCall_viiiii=ct.dynCall_viiiii)(i,e,r,t,a,o),n.dynCall_viii=(i,e,r,t)=>(n.dynCall_viii=ct.Jc)(i,e,r,t),n.dynCall_vi=(i,e)=>(n.dynCall_vi=ct.dynCall_vi)(i,e),n.dynCall_viijj=(i,e,r,t,a)=>(n.dynCall_viijj=ct.dynCall_viijj)(i,e,r,t,a),n.dynCall_viiiiii=(i,e,r,t,a,o,l)=>(n.dynCall_viiiiii=ct.dynCall_viiiiii)(i,e,r,t,a,o,l),n.dynCall_viiiiiiii=(i,e,r,t,a,o,l,u,f)=>(n.dynCall_viiiiiiii=ct.dynCall_viiiiiiii)(i,e,r,t,a,o,l,u,f),n.dynCall_i=i=>(n.dynCall_i=ct.dynCall_i)(i),n.dynCall_vii=(i,e,r)=>(n.dynCall_vii=ct.dynCall_vii)(i,e,r),n.dynCall_fffffff=(i,e,r,t,a,o,l)=>(n.dynCall_fffffff=ct.dynCall_fffffff)(i,e,r,t,a,o,l),n.dynCall_iiiii=(i,e,r,t,a)=>(n.dynCall_iiiii=ct.dynCall_iiiii)(i,e,r,t,a),n.dynCall_iii=(i,e,r)=>(n.dynCall_iii=ct.dynCall_iii)(i,e,r),n.dynCall_iiiiii=(i,e,r,t,a,o)=>(n.dynCall_iiiiii=ct.dynCall_iiiiii)(i,e,r,t,a,o),n.dynCall_iiiiiiii=(i,e,r,t,a,o,l,u)=>(n.dynCall_iiiiiiii=ct.dynCall_iiiiiiii)(i,e,r,t,a,o,l,u),n.dynCall_iiiiiii=(i,e,r,t,a,o,l)=>(n.dynCall_iiiiiii=ct.dynCall_iiiiiii)(i,e,r,t,a,o,l),n.dynCall_iiii=(i,e,r,t)=>(n.dynCall_iiii=ct.dynCall_iiii)(i,e,r,t),n.dynCall_vfiii=(i,e,r,t,a)=>(n.dynCall_vfiii=ct.dynCall_vfiii)(i,e,r,t,a),n.dynCall_viiiiff=(i,e,r,t,a,o,l)=>(n.dynCall_viiiiff=ct.dynCall_viiiiff)(i,e,r,t,a,o,l),n.dynCall_viiiiiff=(i,e,r,t,a,o,l,u)=>(n.dynCall_viiiiiff=ct.dynCall_viiiiiff)(i,e,r,t,a,o,l,u),n.dynCall_ffff=(i,e,r,t)=>(n.dynCall_ffff=ct.dynCall_ffff)(i,e,r,t),n.dynCall_viiff=(i,e,r,t,a)=>(n.dynCall_viiff=ct.dynCall_viiff)(i,e,r,t,a),n.dynCall_jjjjjjj=(i,e,r,t,a,o,l)=>(n.dynCall_jjjjjjj=ct.dynCall_jjjjjjj)(i,e,r,t,a,o,l),n.dynCall_jjjjjj=(i,e,r,t,a,o)=>(n.dynCall_jjjjjj=ct.dynCall_jjjjjj)(i,e,r,t,a,o),n.dynCall_iijjii=(i,e,r,t,a,o)=>(n.dynCall_iijjii=ct.dynCall_iijjii)(i,e,r,t,a,o),n.dynCall_viiiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y,m)=>(n.dynCall_viiiiiiiiiiiii=ct.dynCall_viiiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y,m),n.dynCall_viiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c)=>(n.dynCall_viiiiiiiiii=ct.dynCall_viiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c),n.dynCall_viiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d)=>(n.dynCall_viiiiiiiiiii=ct.dynCall_viiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d),n.dynCall_viiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y)=>(n.dynCall_viiiiiiiiiiii=ct.dynCall_viiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y),n.dynCall_viiiiiiiiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g,_,C)=>(n.dynCall_viiiiiiiiiiiiiiiiii=ct.dynCall_viiiiiiiiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g,_,C),n.dynCall_viiiiiiiii=(i,e,r,t,a,o,l,u,f,s)=>(n.dynCall_viiiiiiiii=ct.dynCall_viiiiiiiii)(i,e,r,t,a,o,l,u,f,s),n.dynCall_viiiiiiiiiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g,_,C,h)=>(n.dynCall_viiiiiiiiiiiiiiiiiii=ct.dynCall_viiiiiiiiiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g,_,C,h),n.dynCall_viiiiiii=(i,e,r,t,a,o,l,u)=>(n.dynCall_viiiiiii=ct.dynCall_viiiiiii)(i,e,r,t,a,o,l,u),n.dynCall_viiiiiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p)=>(n.dynCall_viiiiiiiiiiiiiii=ct.dynCall_viiiiiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p),n.dynCall_jiji=(i,e,r,t)=>(n.dynCall_jiji=ct.dynCall_jiji)(i,e,r,t),n.dynCall_v=i=>(n.dynCall_v=ct.dynCall_v)(i),n.dynCall_iidiiii=(i,e,r,t,a,o,l)=>(n.dynCall_iidiiii=ct.dynCall_iidiiii)(i,e,r,t,a,o,l),n.dynCall_ji=(i,e)=>(n.dynCall_ji=ct.dynCall_ji)(i,e),n.dynCall_vij=(i,e,r)=>(n.dynCall_vij=ct.dynCall_vij)(i,e,r),n.dynCall_viiijii=(i,e,r,t,a,o,l)=>(n.dynCall_viiijii=ct.dynCall_viiijii)(i,e,r,t,a,o,l),n.dynCall_viijiiiiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g,_)=>(n.dynCall_viijiiiiiiiiiiiiii=ct.dynCall_viijiiiiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g,_),n.dynCall_viiiji=(i,e,r,t,a,o)=>(n.dynCall_viiiji=ct.dynCall_viiiji)(i,e,r,t,a,o),n.dynCall_jfi=(i,e,r)=>(n.dynCall_jfi=ct.dynCall_jfi)(i,e,r),n.dynCall_fif=(i,e,r)=>(n.dynCall_fif=ct.dynCall_fif)(i,e,r),n.dynCall_jii=(i,e,r)=>(n.dynCall_jii=ct.dynCall_jii)(i,e,r),n.dynCall_viiiijii=(i,e,r,t,a,o,l,u)=>(n.dynCall_viiiijii=ct.dynCall_viiiijii)(i,e,r,t,a,o,l,u),n.dynCall_iij=(i,e,r)=>(n.dynCall_iij=ct.dynCall_iij)(i,e,r),n.dynCall_viji=(i,e,r,t)=>(n.dynCall_viji=ct.dynCall_viji)(i,e,r,t),n.dynCall_iiiiiiiii=(i,e,r,t,a,o,l,u,f)=>(n.dynCall_iiiiiiiii=ct.dynCall_iiiiiiiii)(i,e,r,t,a,o,l,u,f),n.dynCall_iiij=(i,e,r,t)=>(n.dynCall_iiij=ct.dynCall_iiij)(i,e,r,t),n.dynCall_iiiiiiiiii=(i,e,r,t,a,o,l,u,f,s)=>(n.dynCall_iiiiiiiiii=ct.dynCall_iiiiiiiiii)(i,e,r,t,a,o,l,u,f,s),n.dynCall_iiiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y)=>(n.dynCall_iiiiiiiiiiiii=ct.dynCall_iiiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y),n.dynCall_iiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c)=>(n.dynCall_iiiiiiiiiii=ct.dynCall_iiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c),n.dynCall_iijii=(i,e,r,t,a)=>(n.dynCall_iijii=ct.dynCall_iijii)(i,e,r,t,a),n.dynCall_fiii=(i,e,r,t)=>(n.dynCall_fiii=ct.dynCall_fiii)(i,e,r,t),n.dynCall_viijii=(i,e,r,t,a,o)=>(n.dynCall_viijii=ct.dynCall_viijii)(i,e,r,t,a,o),n.dynCall_viij=(i,e,r,t)=>(n.dynCall_viij=ct.dynCall_viij)(i,e,r,t),n.dynCall_jiij=(i,e,r,t)=>(n.dynCall_jiij=ct.dynCall_jiij)(i,e,r,t),n.dynCall_fi=(i,e)=>(n.dynCall_fi=ct.dynCall_fi)(i,e),n.dynCall_fii=(i,e,r)=>(n.dynCall_fii=ct.dynCall_fii)(i,e,r),n.dynCall_dii=(i,e,r)=>(n.dynCall_dii=ct.dynCall_dii)(i,e,r),n.dynCall_fiiii=(i,e,r,t,a)=>(n.dynCall_fiiii=ct.dynCall_fiiii)(i,e,r,t,a),n.dynCall_viiiiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v)=>(n.dynCall_viiiiiiiiiiiiii=ct.dynCall_viiiiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v),n.dynCall_viiiiiiiiiiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g,_,C,h,b)=>(n.dynCall_viiiiiiiiiiiiiiiiiiii=ct.dynCall_viiiiiiiiiiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g,_,C,h,b),n.dynCall_viiiiiiiiiiiiiiii=(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g)=>(n.dynCall_viiiiiiiiiiiiiiii=ct.dynCall_viiiiiiiiiiiiiiii)(i,e,r,t,a,o,l,u,f,s,c,d,y,m,v,p,g),n.dynCall_iif=(i,e,r)=>(n.dynCall_iif=ct.dynCall_iif)(i,e,r),n.dynCall_jiiii=(i,e,r,t,a)=>(n.dynCall_jiiii=ct.dynCall_jiiii)(i,e,r,t,a),n.dynCall_jiii=(i,e,r,t)=>(n.dynCall_jiii=ct.dynCall_jiii)(i,e,r,t),n.dynCall_viif=(i,e,r,t)=>(n.dynCall_viif=ct.dynCall_viif)(i,e,r,t),n.dynCall_viiij=(i,e,r,t,a)=>(n.dynCall_viiij=ct.dynCall_viiij)(i,e,r,t,a),n.dynCall_iiiiij=(i,e,r,t,a,o)=>(n.dynCall_iiiiij=ct.dynCall_iiiiij)(i,e,r,t,a,o),n.dynCall_iiiiid=(i,e,r,t,a,o)=>(n.dynCall_iiiiid=ct.dynCall_iiiiid)(i,e,r,t,a,o),n.dynCall_iiiiijj=(i,e,r,t,a,o,l)=>(n.dynCall_iiiiijj=ct.dynCall_iiiiijj)(i,e,r,t,a,o,l),n.dynCall_iiiiiijj=(i,e,r,t,a,o,l,u)=>(n.dynCall_iiiiiijj=ct.dynCall_iiiiiijj)(i,e,r,t,a,o,l,u);var Qt=i=>(Qt=ct.Kc)(i),Xt=()=>(Xt=ct.Lc)(),Zt=i=>(Zt=ct.Mc)(i),Jt=()=>(Jt=ct.Nc)();return function i(){if(0<Y)Q=i;else if(l)e(n),H();else{for(;0<ei.length;)ei.shift()(n);0<Y?Q=i:(n.calledRun=!0,W||(H(),e(n)))}}(),n.PTR_SIZE=4,n.webgpuInit=i=>{const e=new WeakMap;let r,t,a=1;n.webgpuRegisterDevice=i=>{if(void 0!==t)throw Error(\"another WebGPU EP inference session is being created.\");if(i){var n=e.get(i);if(!n){const r=((i,e=0)=>{var r=Bt(e);return e=At(e,r),Yr(r,i.queue),Yr(e,i),e})(i,n=Ct(0));n=[a++,n,r],e.set(i,n)}return r=i,t=n[0],n}r=void 0,t=0};const o=new Map;n.webgpuOnCreateSession=e=>{if(void 0!==t){var n=t;if(t=void 0,e){const t=mt(n);o.set(e,t),0===n&&i(r??Jr(t))}r=void 0}},n.webgpuOnReleaseSession=i=>{o.delete(i)};const l=Symbol(\"gpuBufferMetadata\");n.webgpuRegisterBuffer=(i,e,r)=>{if(r)return i[l]=[r,NaN],r;if(r=i[l])return r[1]++,r[0];if(void 0===(e=o.get(e)))throw Error(\"Invalid session handle passed to webgpuRegisterBuffer\");return e=((i,e=0)=>(\"pending\"!=i.mapState||Z(),e=Tt(e,\"mapped\"==i.mapState?3:1),Yr(e,i),\"mapped\"==i.mapState&&(Qr[e]=[]),e))(i,e),i[l]=[e,1],e},n.webgpuUnregisterBuffer=i=>{const e=i[l];if(!e)throw Error(\"Buffer is not registered\");e[1]--,0===e[1]&&(_t(e[0]),delete i[l])},n.webgpuGetBuffer=i=>Jr(i),n.webgpuCreateDownloader=(i,e,r)=>{if(void 0===(r=o.get(r)))throw Error(\"Invalid session handle passed to webgpuRegisterBuffer\");const n=Jr(r),t=16*Math.ceil(Number(e)/16);return async()=>{const r=n.createBuffer({size:t,usage:9});try{const a=n.createCommandEncoder();return a.copyBufferToBuffer(i,0,r,0,t),n.queue.submit([a.finish()]),await r.mapAsync(GPUMapMode.READ),r.getMappedRange().slice(0,e)}finally{r.destroy()}}},n.Pc=(i,e)=>{var n=e.buffer;const a=e.byteOffset,o=e.byteLength;if(e=16*Math.ceil(Number(o)/16),i=Jr(i),!r){var l=mt(t);r=Jr(l)}const u=(l=r.createBuffer({mappedAtCreation:!0,size:e,usage:6})).getMappedRange();new Uint8Array(u).set(new Uint8Array(n,a,o)),l.unmap(),(n=r.createCommandEncoder()).copyBufferToBuffer(l,0,i,0,e),r.queue.submit([n.finish()]),l.destroy()}},n.webnnInit=i=>{const e=i[0];[n.ed,n.Qc,n.webnnEnsureTensor,n.Rc,n.webnnDownloadTensor,n.dd,n.webnnEnableTraceEvent]=i.slice(1),n.webnnReleaseTensorId=n.Qc,n.webnnUploadTensor=n.Rc,n.webnnRegisterMLContext=n.dd,n.webnnOnRunStart=i=>e.onRunStart(i),n.webnnOnRunEnd=e.onRunEnd.bind(e),n.webnnOnReleaseSession=i=>{e.onReleaseSession(i)},n.webnnCreateMLTensorDownloader=(i,r)=>e.createMLTensorDownloader(i,r),n.webnnRegisterMLTensor=(i,r,n,t)=>e.registerMLTensor(i,r,n,t),n.webnnCreateMLContext=i=>e.createMLContext(i),n.webnnRegisterMLConstant=(i,r,t,a,o,l)=>e.registerMLConstant(i,r,t,a,o,n.fc,l),n.webnnRegisterGraphInput=e.registerGraphInput.bind(e),n.webnnIsGraphInput=e.isGraphInput.bind(e),n.webnnRegisterGraphOutput=e.registerGraphOutput.bind(e),n.webnnIsGraphOutput=e.isGraphOutput.bind(e),n.webnnCreateTemporaryTensor=e.createTemporaryTensor.bind(e),n.webnnIsGraphInputOutputTypeSupported=e.isGraphInputOutputTypeSupported.bind(e)},t};export default i;var e=globalThis.self?.name?.startsWith(\"em-pthread\");e&&i();","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport type { OrtWasmModule } from './wasm-types';\nimport { isNode } from './wasm-utils-env';\n\n/**\n * The origin of the current location.\n *\n * In Node.js, this is undefined.\n */\nconst origin = isNode || typeof location === 'undefined' ? undefined : location.origin;\n\n/**\n * Some bundlers (eg. Webpack) will rewrite `import.meta.url` to a file URL at compile time.\n *\n * This function checks if `import.meta.url` starts with `file:`, but using the `>` and `<` operators instead of\n * `startsWith` function so that code minimizers can remove the dead code correctly.\n *\n * For example, if we use terser to minify the following code:\n * ```js\n * if (\"file://hard-coded-filename\".startsWith(\"file:\")) {\n *   console.log(1)\n * } else {\n *   console.log(2)\n * }\n *\n * if (\"file://hard-coded-filename\" > \"file:\" && \"file://hard-coded-filename\" < \"file;\") {\n *   console.log(3)\n * } else {\n *   console.log(4)\n * }\n * ```\n *\n * The minified code will be:\n * ```js\n * \"file://hard-coded-filename\".startsWith(\"file:\")?console.log(1):console.log(2),console.log(3);\n * ```\n *\n * (use Terser 5.39.0 with default options, https://try.terser.org/)\n *\n * @returns true if the import.meta.url is hardcoded as a file URI.\n */\nexport const isEsmImportMetaUrlHardcodedAsFileUri =\n  BUILD_DEFS.IS_ESM && BUILD_DEFS.ESM_IMPORT_META_URL! > 'file:' && BUILD_DEFS.ESM_IMPORT_META_URL! < 'file;';\n\nconst getScriptSrc = (): string | undefined => {\n  // if Nodejs, return undefined\n  if (isNode) {\n    return undefined;\n  }\n  // if It's ESM, use import.meta.url\n  if (BUILD_DEFS.IS_ESM) {\n    // For ESM, if the import.meta.url is a file URL, this usually means the bundler rewrites `import.meta.url` to\n    // the file path at compile time. In this case, this file path cannot be used to determine the runtime URL.\n    //\n    // We need to use the URL constructor like this:\n    // ```js\n    // new URL('actual-bundle-name.js', import.meta.url).href\n    // ```\n    // So that bundler can preprocess the URL correctly.\n    if (isEsmImportMetaUrlHardcodedAsFileUri) {\n      // if the rewritten URL is a relative path, we need to use the origin to resolve the URL.\n\n      // The following is a workaround for Vite.\n      //\n      // Vite uses a bundler(rollup/rolldown) that does not rewrite `import.meta.url` to a file URL. So in theory, this\n      // code path should not be executed in Vite. However, the bundler does not know it and it still try to load the\n      // following pattern:\n      // - `return new URL('filename', import.meta.url).href`\n      //\n      // By replacing the pattern above with the following code, we can skip the resource loading behavior:\n      // - `const URL2 = URL; return new URL2('filename', import.meta.url).href;`\n      //\n      // And it still works in Webpack.\n      const URL2 = URL;\n      return new URL(new URL2(BUILD_DEFS.BUNDLE_FILENAME, BUILD_DEFS.ESM_IMPORT_META_URL).href, origin).href;\n    }\n\n    return BUILD_DEFS.ESM_IMPORT_META_URL;\n  }\n\n  return typeof document !== 'undefined'\n    ? (document.currentScript as HTMLScriptElement)?.src\n    : // use `self.location.href` if available\n      typeof self !== 'undefined'\n      ? self.location?.href\n      : undefined;\n};\n\n/**\n * The classic script source URL. This is not always available in non ESModule environments.\n *\n * In Node.js, this is undefined.\n */\nexport const scriptSrc = getScriptSrc();\n\n/**\n * Infer the wasm path prefix from the script source URL.\n *\n * @returns The inferred wasm path prefix, or undefined if the script source URL is not available or is a blob URL.\n */\nexport const inferWasmPathPrefixFromScriptSrc = (): string | undefined => {\n  if (scriptSrc && !scriptSrc.startsWith('blob:')) {\n    return scriptSrc.substring(0, scriptSrc.lastIndexOf('/') + 1);\n  }\n  return undefined;\n};\n\n/**\n * Check if the given filename with prefix is from the same origin.\n */\nconst isSameOrigin = (filename: string, prefixOverride?: string) => {\n  try {\n    const baseUrl = prefixOverride ?? scriptSrc;\n    const url = baseUrl ? new URL(filename, baseUrl) : new URL(filename);\n    return url.origin === origin;\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Normalize the inputs to an absolute URL with the given prefix override. If failed, return undefined.\n */\nconst normalizeUrl = (filename: string, prefixOverride?: string) => {\n  const baseUrl = prefixOverride ?? scriptSrc;\n  try {\n    const url = baseUrl ? new URL(filename, baseUrl) : new URL(filename);\n    return url.href;\n  } catch {\n    return undefined;\n  }\n};\n\n/**\n * Create a fallback URL if an absolute URL cannot be created by the normalizeUrl function.\n */\nconst fallbackUrl = (filename: string, prefixOverride?: string) => `${prefixOverride ?? './'}${filename}`;\n\n/**\n * This helper function is used to preload a module from a URL.\n *\n * If the origin of the worker URL is different from the current origin, the worker cannot be loaded directly.\n * See discussions in https://github.com/webpack-contrib/worker-loader/issues/154\n *\n * In this case, we will fetch the worker URL and create a new Blob URL with the same origin as a workaround.\n *\n * @param absoluteUrl - The absolute URL to preload.\n *\n * @returns - A promise that resolves to a new Blob URL\n */\nconst preload = async (absoluteUrl: string): Promise<string> => {\n  const response = await fetch(absoluteUrl, { credentials: 'same-origin' });\n  const blob = await response.blob();\n  return URL.createObjectURL(blob);\n};\n\n/**\n * This helper function is used to dynamically import a module from a URL.\n *\n * The build script has special handling for this function to ensure that the URL is not bundled into the final output.\n *\n * @param url - The URL to import.\n *\n * @returns - A promise that resolves to the default export of the module.\n */\nconst dynamicImportDefault = async <T>(url: string): Promise<T> =>\n  (await import(/* webpackIgnore: true */ url)).default;\n\n/**\n * The proxy worker factory imported from the proxy worker module.\n *\n * This is only available when the WebAssembly proxy is not disabled.\n */\nconst createProxyWorker: ((urlOverride?: string) => Worker) | undefined =\n  // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n  BUILD_DEFS.DISABLE_WASM_PROXY ? undefined : require('./proxy-worker/main').default;\n\n/**\n * Import the proxy worker.\n *\n * This function will perform the following steps:\n * 1. If a preload is needed, it will preload the module and return the object URL.\n * 2. Use the proxy worker factory to create the proxy worker.\n *\n * @returns - A promise that resolves to a tuple of 2 elements:\n *            - The object URL of the preloaded module, or undefined if no preload is needed.\n *            - The proxy worker.\n */\nexport const importProxyWorker = async (): Promise<[undefined | string, Worker]> => {\n  if (!scriptSrc) {\n    throw new Error('Failed to load proxy worker: cannot determine the script source URL.');\n  }\n\n  // If the script source is from the same origin, we can use the embedded proxy module directly.\n  if (isSameOrigin(scriptSrc)) {\n    return [undefined, createProxyWorker!()];\n  }\n\n  // Otherwise, need to preload\n  const url = await preload(scriptSrc);\n  return [url, createProxyWorker!(url)];\n};\n\n/**\n * The embedded WebAssembly module.\n *\n * This is only available in ESM and when embedding is not disabled.\n */\nconst embeddedWasmModule: EmscriptenModuleFactory<OrtWasmModule> | undefined =\n  BUILD_DEFS.IS_ESM && BUILD_DEFS.ENABLE_BUNDLE_WASM_JS\n    ? // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n      require(\n        !BUILD_DEFS.DISABLE_JSEP\n          ? '../../dist/ort-wasm-simd-threaded.jsep.mjs'\n          : !BUILD_DEFS.DISABLE_WEBGPU\n            ? '../../dist/ort-wasm-simd-threaded.asyncify.mjs'\n            : '../../dist/ort-wasm-simd-threaded.mjs',\n      ).default\n    : undefined;\n\n/**\n * Import the WebAssembly module.\n *\n * This function will perform the following steps:\n * 1. If the embedded module exists and no custom URL is specified, use the embedded module.\n * 2. If a preload is needed, it will preload the module and return the object URL.\n * 3. Otherwise, it will perform a dynamic import of the module.\n *\n * @returns - A promise that resolves to a tuple of 2 elements:\n *            - The object URL of the preloaded module, or undefined if no preload is needed.\n *            - The default export of the module, which is a factory function to create the WebAssembly module.\n */\nexport const importWasmModule = async (\n  urlOverride: string | undefined,\n  prefixOverride: string | undefined,\n  isMultiThreaded: boolean,\n  isWasmOverridden: boolean,\n): Promise<[undefined | string, EmscriptenModuleFactory<OrtWasmModule>]> => {\n  //\n  // Check if we should use the embedded module.\n  //\n\n  // To use the embedded module, it should be available, and no URL override or prefix override should be specified.\n  let useEmbeddedModule = embeddedWasmModule && !(urlOverride || prefixOverride);\n  if (useEmbeddedModule) {\n    if (!scriptSrc) {\n      // no URL info available.\n      //\n      // Note: when the embedded module is available, it means the current script is ESM. Usually, in ESM, the\n      // `import.meta.url` is available. But in some cases (eg. Cloudflare Workers), the value of `import.meta.url`\n      // can be `null` or `undefined`. In this case, we can only load the embedded module when:\n      //\n      // 1. The WebAssembly module binary is overridden:\n      //    ```js\n      //    env.wasm.wasmPaths = undefined;  // or not specified\n      //    env.wasm.wasmBinary = /* a Uint8Array containing the WebAssembly binary */;\n      //    ```\n      //\n      // 2. The \".wasm\" only is overridden.\n      //    ```js\n      //    env.wasm.wasmPaths = { wasm: /* URL of the .wasm file */ };\n      //    ```\n      //\n      if (isWasmOverridden && !isMultiThreaded) {\n        useEmbeddedModule = true;\n      } else {\n        throw new Error('cannot determine the script source URL.');\n      }\n    } else {\n      // if the script source is available, we can check if it is from the same origin.\n      useEmbeddedModule = isSameOrigin(scriptSrc);\n    }\n  }\n  if (useEmbeddedModule) {\n    return [undefined, embeddedWasmModule!];\n  } else {\n    const wasmModuleFilename = !BUILD_DEFS.DISABLE_JSEP\n      ? 'ort-wasm-simd-threaded.jsep.mjs'\n      : !BUILD_DEFS.DISABLE_WEBGPU\n        ? 'ort-wasm-simd-threaded.asyncify.mjs'\n        : 'ort-wasm-simd-threaded.mjs';\n    const wasmModuleUrl = urlOverride ?? normalizeUrl(wasmModuleFilename, prefixOverride);\n    // need to preload if all of the following conditions are met:\n    // 1. not in Node.js.\n    //    - Node.js does not have the same origin policy for creating workers.\n    // 2. multi-threaded is enabled.\n    //    - If multi-threaded is disabled, no worker will be created. So we don't need to preload the module.\n    // 3. the absolute URL is available.\n    //    - If the absolute URL is failed to be created, the origin cannot be determined. In this case, we will not\n    //    preload the module.\n    // 4. the worker URL is not from the same origin.\n    //    - If the worker URL is from the same origin, we can create the worker directly.\n    const needPreload = !isNode && isMultiThreaded && wasmModuleUrl && !isSameOrigin(wasmModuleUrl, prefixOverride);\n    const url = needPreload\n      ? await preload(wasmModuleUrl)\n      : (wasmModuleUrl ?? fallbackUrl(wasmModuleFilename, prefixOverride));\n    return [needPreload ? url : undefined, await dynamicImportDefault<EmscriptenModuleFactory<OrtWasmModule>>(url)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Env } from 'onnxruntime-common';\n\nimport type { OrtWasmModule } from './wasm-types';\nimport { importWasmModule, inferWasmPathPrefixFromScriptSrc } from './wasm-utils-import';\n\nlet wasm: OrtWasmModule | undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n  if (typeof SharedArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(\n      new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16,\n        2, 0, 26, 11,\n      ]),\n    );\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(\n      new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1, 28, 0, 65, 0, 253, 15, 253, 12, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 186, 1, 26, 11,\n      ]),\n    );\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isRelaxedSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly Relaxed SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing Relaxed SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    // (module\n    //   (func (result v128)\n    //      i32.const 1\n    //      i8x16.splat\n    //      i32.const 2\n    //      i8x16.splat\n    //      i32.const 3\n    //      i8x16.splat\n    //      i32x4.relaxed_dot_i8x16_i7x16_add_s\n    //   )\n    //  )\n    return WebAssembly.validate(\n      new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 19, 1, 17, 0, 65, 1, 253, 15, 65, 2, 253,\n        15, 65, 3, 253, 15, 253, 147, 2, 11,\n      ]),\n    );\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const initializeWebAssembly = async (flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error(\"multiple calls to 'initializeWebAssembly()' detected.\");\n  }\n  if (aborted) {\n    throw new Error(\"previous call to 'initializeWebAssembly()' failed.\");\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  let numThreads = flags.numThreads!;\n\n  // ensure SIMD is supported\n  if (flags.simd === false) {\n    // skip SIMD feature checking as it is disabled explicitly by user\n  } else if (flags.simd === 'relaxed') {\n    // check if relaxed SIMD is supported\n    if (!isRelaxedSimdSupported()) {\n      throw new Error('Relaxed WebAssembly SIMD is not supported in the current environment.');\n    }\n  } else if (!isSimdSupported()) {\n    throw new Error('WebAssembly SIMD is not supported in the current environment.');\n  }\n\n  // check if multi-threading is supported\n  const multiThreadSupported = isMultiThreadSupported();\n  if (numThreads > 1 && !multiThreadSupported) {\n    if (typeof self !== 'undefined' && !self.crossOriginIsolated) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'env.wasm.numThreads is set to ' +\n          numThreads +\n          ', but this will not work unless you enable crossOriginIsolated mode. ' +\n          'See https://web.dev/cross-origin-isolation-guide/ for more info.',\n      );\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      'WebAssembly multi-threading is not supported in the current environment. ' + 'Falling back to single-threading.',\n    );\n\n    // set flags.numThreads to 1 so that OrtInit() will not create a global thread pool.\n    flags.numThreads = numThreads = 1;\n  }\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const mjsPathOverrideFlag = (wasmPaths as Env.WasmFilePaths)?.mjs;\n  const mjsPathOverride = (mjsPathOverrideFlag as URL)?.href ?? mjsPathOverrideFlag;\n  const wasmPathOverrideFlag = (wasmPaths as Env.WasmFilePaths)?.wasm;\n  const wasmPathOverride = (wasmPathOverrideFlag as URL)?.href ?? wasmPathOverrideFlag;\n  const wasmBinaryOverride = flags.wasmBinary;\n\n  const [objectUrl, ortWasmFactory] = await importWasmModule(\n    mjsPathOverride,\n    wasmPrefixOverride,\n    numThreads > 1,\n    !!wasmBinaryOverride || !!wasmPathOverride,\n  );\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(\n      new Promise((resolve) => {\n        setTimeout(() => {\n          isTimeout = true;\n          resolve();\n        }, timeout);\n      }),\n    );\n  }\n\n  // promise for module initialization\n  tasks.push(\n    new Promise((resolve, reject) => {\n      const config: Partial<OrtWasmModule> = {\n        /**\n         * The number of threads. WebAssembly will create (Module.numThreads - 1) workers. If it is 1, no worker will be\n         * created.\n         */\n        numThreads,\n      };\n\n      if (wasmBinaryOverride) {\n        // Set a custom buffer which contains the WebAssembly binary. This will skip the wasm file fetching.\n        config.wasmBinary = wasmBinaryOverride;\n      } else if (wasmPathOverride || wasmPrefixOverride) {\n        // A callback function to locate the WebAssembly file. The function should return the full path of the file.\n        //\n        // Since Emscripten 3.1.58, this function is only called for the .wasm file.\n        config.locateFile = (fileName) => wasmPathOverride ?? wasmPrefixOverride + fileName;\n      } else if (mjsPathOverride && mjsPathOverride.indexOf('blob:') !== 0) {\n        // if mjs path is specified, use it as the base path for the .wasm file.\n        config.locateFile = (fileName) => new URL(fileName, mjsPathOverride).href;\n      } else if (objectUrl) {\n        const inferredWasmPathPrefix = inferWasmPathPrefixFromScriptSrc();\n        if (inferredWasmPathPrefix) {\n          // if the wasm module is preloaded, use the inferred wasm path as the base path for the .wasm file.\n          config.locateFile = (fileName) => inferredWasmPathPrefix + fileName;\n        }\n      }\n\n      ortWasmFactory(config).then(\n        // wasm module initialized successfully\n        (module) => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n          if (objectUrl) {\n            URL.revokeObjectURL(objectUrl);\n          }\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        },\n      );\n    }),\n  );\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    // TODO: currently \"PThread.terminateAllThreads()\" is not exposed in the wasm module.\n    //       And this function is not yet called by any code.\n    //       If it is needed in the future, we should expose it in the wasm module and uncomment the following line.\n\n    // wasm?.PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { getInstance } from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions = (\n  options: Record<string, unknown>,\n  prefix: string,\n  seen: WeakSet<Record<string, unknown>>,\n  handler: ExtraOptionsHandler,\n): void => {\n  if (typeof options == 'object' && options !== null) {\n    if (seen.has(options)) {\n      throw new Error('Circular reference in options');\n    } else {\n      seen.add(options);\n    }\n  }\n\n  Object.entries(options).forEach(([key, value]) => {\n    const name = prefix ? prefix + key : key;\n    if (typeof value === 'object') {\n      iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n    } else if (typeof value === 'string' || typeof value === 'number') {\n      handler(name, value.toString());\n    } else if (typeof value === 'boolean') {\n      handler(name, value ? '1' : '0');\n    } else {\n      throw new Error(`Can't handle extra config type: ${typeof value}`);\n    }\n  });\n};\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const ptrSize = wasm.PTR_SIZE;\n    const paramsOffset = wasm.stackAlloc(2 * ptrSize);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + ptrSize);\n    const errorCode = Number(wasm.getValue(paramsOffset, ptrSize === 4 ? 'i32' : 'i64'));\n    const errorMessagePointer = wasm.getValue(paramsOffset + ptrSize, '*');\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { InferenceSession } from 'onnxruntime-common';\n\nimport { getInstance } from './wasm-factory';\nimport { allocWasmString, checkLastError, iterateExtraOptions } from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2; // Default to warning\n    } else if (\n      typeof options.logSeverityLevel !== 'number' ||\n      !Number.isInteger(options.logSeverityLevel) ||\n      options.logSeverityLevel < 0 ||\n      options.logSeverityLevel > 4\n    ) {\n      throw new Error(`log severity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0; // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n      runOptions.logSeverityLevel!,\n      runOptions.logVerbosityLevel!,\n      !!runOptions.terminate!,\n      tagDataOffset,\n    );\n    if (runOptionsHandle === 0) {\n      checkLastError(\"Can't create run options.\");\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach((alloc) => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport type { InferenceSession } from 'onnxruntime-common';\n\nimport { getInstance } from './wasm-factory';\nimport { allocWasmString, checkLastError, iterateExtraOptions } from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string | unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'layout':\n      return 3;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential' | 'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (\n    options.executionProviders &&\n    options.executionProviders.some((ep) => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')\n  ) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst appendSessionConfig = (sessionOptionsHandle: number, key: string, value: string, allocs: number[]): void => {\n  const keyDataOffset = allocWasmString(key, allocs);\n  const valueDataOffset = allocWasmString(value, allocs);\n  if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n    checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n  }\n};\n\nconst appendEpOption = (epOptions: Array<[number, number]>, key: string, value: string, allocs: number[]): void => {\n  const keyDataOffset = allocWasmString(key, allocs);\n  const valueDataOffset = allocWasmString(value, allocs);\n  epOptions.push([keyDataOffset, valueDataOffset]);\n};\n\nconst setExecutionProviders = async (\n  sessionOptionsHandle: number,\n  executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n  allocs: number[],\n): Promise<void> => {\n  for (const ep of executionProviders) {\n    let epName = typeof ep === 'string' ? ep : ep.name;\n    const epOptions: Array<[number, number]> = [];\n\n    // check EP name\n    switch (epName) {\n      case 'webnn':\n        epName = 'WEBNN';\n        if (typeof ep !== 'string') {\n          const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n          // const context = (webnnOptions as InferenceSession.WebNNOptionsWithMLContext)?.context;\n          const deviceType = (webnnOptions as InferenceSession.WebNNContextOptions)?.deviceType;\n          if (deviceType) {\n            appendSessionConfig(sessionOptionsHandle, 'deviceType', deviceType, allocs);\n          }\n        }\n        break;\n      case 'webgpu':\n        if (!BUILD_DEFS.DISABLE_WEBGPU) {\n          epName = 'WebGPU';\n          let customDevice: GPUDevice | undefined;\n\n          if (typeof ep !== 'string') {\n            const customOptions = ep as unknown as { device: GPUDevice };\n            if (customOptions.device) {\n              if (typeof GPUDevice !== 'undefined' && customOptions.device instanceof GPUDevice) {\n                customDevice = customOptions.device;\n              } else {\n                throw new Error('Invalid GPU device set in WebGPU EP options.');\n              }\n            }\n\n            // TODO: handle more options\n          }\n\n          const info = getInstance().webgpuRegisterDevice!(customDevice);\n          if (info) {\n            const [deviceId, instanceHandle, deviceHandle] = info;\n            appendEpOption(epOptions, 'deviceId', deviceId.toString(), allocs);\n            appendEpOption(epOptions, 'webgpuInstance', instanceHandle.toString(), allocs);\n            appendEpOption(epOptions, 'webgpuDevice', deviceHandle.toString(), allocs);\n          }\n        } else {\n          epName = 'JS';\n          if (typeof ep !== 'string') {\n            const webgpuOptions = ep as InferenceSession.WebGpuExecutionProviderOption;\n            if (webgpuOptions?.preferredLayout) {\n              if (webgpuOptions.preferredLayout !== 'NCHW' && webgpuOptions.preferredLayout !== 'NHWC') {\n                throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${webgpuOptions.preferredLayout}`);\n              }\n              appendSessionConfig(sessionOptionsHandle, 'preferredLayout', webgpuOptions.preferredLayout, allocs);\n            }\n          }\n        }\n        break;\n      case 'wasm':\n      case 'cpu':\n        continue;\n      default:\n        throw new Error(`not supported execution provider: ${epName}`);\n    }\n\n    const epNameDataOffset = allocWasmString(epName, allocs);\n    const epOptionsCount = epOptions.length;\n    let keysOffset = 0;\n    let valuesOffset = 0;\n    if (epOptionsCount > 0) {\n      keysOffset = getInstance()._malloc(epOptionsCount * getInstance().PTR_SIZE);\n      allocs.push(keysOffset);\n      valuesOffset = getInstance()._malloc(epOptionsCount * getInstance().PTR_SIZE);\n      allocs.push(valuesOffset);\n      for (let i = 0; i < epOptionsCount; i++) {\n        getInstance().setValue(keysOffset + i * getInstance().PTR_SIZE, epOptions[i][0], '*');\n        getInstance().setValue(valuesOffset + i * getInstance().PTR_SIZE, epOptions[i][1], '*');\n      }\n    }\n    if (\n      (await getInstance()._OrtAppendExecutionProvider(\n        sessionOptionsHandle,\n        epNameDataOffset,\n        keysOffset,\n        valuesOffset,\n        epOptionsCount,\n      )) !== 0\n    ) {\n      checkLastError(`Can't append execution provider: ${epName}.`);\n    }\n  }\n};\n\nexport const setSessionOptions = async (options?: InferenceSession.SessionOptions): Promise<[number, number[]]> => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n      typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2; // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log severity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0; // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset =\n      typeof sessionOptions.optimizedModelFilePath === 'string'\n        ? allocWasmString(sessionOptions.optimizedModelFilePath, allocs)\n        : 0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n      graphOptimizationLevel,\n      !!sessionOptions.enableCpuMemArena,\n      !!sessionOptions.enableMemPattern,\n      executionMode,\n      !!sessionOptions.enableProfiling,\n      0,\n      logIdDataOffset,\n      logSeverityLevel,\n      logVerbosityLevel,\n      optimizedModelFilePathOffset,\n    );\n    if (sessionOptionsHandle === 0) {\n      checkLastError(\"Can't create session options.\");\n    }\n\n    if (sessionOptions.executionProviders) {\n      await setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.enableGraphCapture !== undefined) {\n      if (typeof sessionOptions.enableGraphCapture !== 'boolean') {\n        throw new Error(`enableGraphCapture must be a boolean value: ${sessionOptions.enableGraphCapture}`);\n      }\n      appendSessionConfig(\n        sessionOptionsHandle,\n        'enableGraphCapture',\n        sessionOptions.enableGraphCapture.toString(),\n        allocs,\n      );\n    }\n\n    if (sessionOptions.freeDimensionOverrides) {\n      for (const [name, value] of Object.entries(sessionOptions.freeDimensionOverrides)) {\n        if (typeof name !== 'string') {\n          throw new Error(`free dimension override name must be a string: ${name}`);\n        }\n        if (typeof value !== 'number' || !Number.isInteger(value) || value < 0) {\n          throw new Error(`free dimension override value must be a non-negative integer: ${value}`);\n        }\n        const nameOffset = allocWasmString(name, allocs);\n        if (wasm._OrtAddFreeDimensionOverride(sessionOptionsHandle, nameOffset, value) !== 0) {\n          checkLastError(`Can't set a free dimension override: ${name} - ${value}.`);\n        }\n      }\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        appendSessionConfig(sessionOptionsHandle, key, value, allocs);\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      if (wasm._OrtReleaseSessionOptions(sessionOptionsHandle) !== 0) {\n        checkLastError(\"Can't release session options.\");\n      }\n    }\n    allocs.forEach((alloc) => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor } from 'onnxruntime-common';\n\n// a dummy type declaration for Float16Array in case any polyfill is available.\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-explicit-any\n  const Float16Array: any;\n}\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16,\n\n  // 4-bit data-types\n  uint4 = 21,\n  int4 = 22,\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n    case 'int4':\n      return DataType.int4;\n    case 'uint4':\n      return DataType.uint4;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n    case DataType.int4:\n      return 'int4';\n    case DataType.uint4:\n      return 'uint4';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor size in bytes by the given data type and dimensions\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const calculateTensorSizeInBytes = (\n  dateType: number,\n  dimsOrSize: readonly number[] | number,\n): number | undefined => {\n  const elementSize = [\n    -1, // undefined = 0\n    4, // float = 1\n    1, // uint8 = 2\n    1, // int8 = 3\n    2, // uint16 = 4\n    2, // int16 = 5\n    4, // int32 = 6\n    8, // int64 = 7\n    -1, // string = 8\n    1, // bool = 9\n    2, // float16 = 10\n    8, // double = 11\n    4, // uint32 = 12\n    8, // uint64 = 13\n    -1, // complex64 = 14\n    -1, // complex128 = 15\n    -1, // bfloat16 = 16\n    -1, // FLOAT8E4M3FN = 17\n    -1, // FLOAT8E4M3FNUZ = 18\n    -1, // FLOAT8E5M2 = 19\n    -1, // FLOAT8E5M2FNUZ = 20\n    0.5, // uint4 = 21\n    0.5, // int4 = 22\n  ][dateType];\n\n  const size = typeof dimsOrSize === 'number' ? dimsOrSize : dimsOrSize.reduce((a, b) => a * b, 1);\n  return elementSize > 0 ? Math.ceil(size * elementSize) : undefined;\n};\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (\n  type: Tensor.Type,\n):\n  | Float32ArrayConstructor\n  | Uint8ArrayConstructor\n  | Int8ArrayConstructor\n  | Uint16ArrayConstructor\n  | Int16ArrayConstructor\n  | Int32ArrayConstructor\n  | BigInt64ArrayConstructor\n  | Uint8ArrayConstructor\n  | Float64ArrayConstructor\n  | Uint32ArrayConstructor\n  | BigUint64ArrayConstructor => {\n  switch (type) {\n    case 'float16':\n      // allow Float16Array polyfill.\n      return typeof Float16Array !== 'undefined' && Float16Array.from ? Float16Array : Uint16Array;\n    case 'float32':\n      return Float32Array;\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int16':\n      return Int16Array;\n    case 'int32':\n      return Int32Array;\n    case 'bool':\n      return Uint8Array;\n    case 'float64':\n      return Float64Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'int64':\n      return BigInt64Array;\n    case 'uint64':\n      return BigUint64Array;\n    default:\n      throw new Error(`unsupported type: ${type}`);\n  }\n};\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose' | 'info' | 'warning' | 'error' | 'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n/**\n * Check whether the given tensor type is supported by GPU buffer\n */\nexport const isGpuBufferSupportedType = (type: Tensor.Type): type is Tensor.GpuBufferDataTypes =>\n  type === 'float32' ||\n  type === 'float16' ||\n  type === 'int32' ||\n  type === 'int64' ||\n  type === 'uint32' ||\n  type === 'uint8' ||\n  type === 'bool' ||\n  type === 'uint4' ||\n  type === 'int4';\n\n/**\n * Check whether the given tensor type is supported by WebNN MLTensor\n */\nexport const isMLTensorSupportedType = (type: Tensor.Type): type is Tensor.MLTensorDataTypes =>\n  type === 'float32' ||\n  type === 'float16' ||\n  type === 'int32' ||\n  type === 'int64' ||\n  type === 'uint32' ||\n  type === 'uint64' ||\n  type === 'int8' ||\n  type === 'uint8' ||\n  type === 'bool' ||\n  type === 'uint4' ||\n  type === 'int4';\n\n/**\n * Map string data location to integer value\n */\nexport const dataLocationStringToEnum = (location: Tensor.DataLocation): number => {\n  switch (location) {\n    case 'none':\n      return 0;\n    case 'cpu':\n      return 1;\n    case 'cpu-pinned':\n      return 2;\n    case 'texture':\n      return 3;\n    case 'gpu-buffer':\n      return 4;\n    case 'ml-tensor':\n      return 5;\n    default:\n      throw new Error(`unsupported data location: ${location}`);\n  }\n};\n\n/**\n * Map integer data location to string value\n */\nexport const dataLocationEnumToString = (location: number): Tensor.DataLocation | undefined =>\n  (['none', 'cpu', 'cpu-pinned', 'texture', 'gpu-buffer', 'ml-tensor'] as const)[location];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { isNode } from './wasm-utils-env';\n\n/**\n * Load a file into a Uint8Array.\n *\n * @param file - the file to load. Can be a URL/path, a Blob, an ArrayBuffer, or a Uint8Array.\n * @returns a Uint8Array containing the file data.\n */\nexport const loadFile = async (file: string | Blob | ArrayBufferLike | Uint8Array): Promise<Uint8Array> => {\n  if (typeof file === 'string') {\n    if (isNode) {\n      // load file into ArrayBuffer in Node.js\n      try {\n        const { readFile } = require('node:fs/promises');\n        return new Uint8Array(await readFile(file));\n      } catch (e) {\n        if (e.code === 'ERR_FS_FILE_TOO_LARGE') {\n          // file is too large, use fs.createReadStream instead\n          const { createReadStream } = require('node:fs');\n          const stream = createReadStream(file);\n          const chunks: Uint8Array[] = [];\n          for await (const chunk of stream) {\n            chunks.push(chunk);\n          }\n          return new Uint8Array(Buffer.concat(chunks));\n        }\n        throw e;\n      }\n    } else {\n      // load file into ArrayBuffer in browsers\n      const response = await fetch(file);\n      if (!response.ok) {\n        throw new Error(`failed to load external data file: ${file}`);\n      }\n      const contentLengthHeader = response.headers.get('Content-Length');\n      const fileSize = contentLengthHeader ? parseInt(contentLengthHeader, 10) : 0;\n      if (fileSize < 1073741824 /* 1GB */) {\n        // when Content-Length header is not set, we cannot determine the file size. We assume it is small enough to\n        // load into memory.\n        return new Uint8Array(await response.arrayBuffer());\n      } else {\n        // file is too large, use stream instead\n        if (!response.body) {\n          throw new Error(`failed to load external data file: ${file}, no response body.`);\n        }\n        const reader = response.body.getReader();\n\n        let buffer;\n        try {\n          // try to create ArrayBuffer directly\n          buffer = new ArrayBuffer(fileSize);\n        } catch (e) {\n          if (e instanceof RangeError) {\n            // use WebAssembly Memory to allocate larger ArrayBuffer\n            const pages = Math.ceil(fileSize / 65536);\n            buffer = new WebAssembly.Memory({ initial: pages, maximum: pages }).buffer;\n          } else {\n            throw e;\n          }\n        }\n\n        let offset = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) {\n            break;\n          }\n          const chunkSize = value.byteLength;\n          const chunk = new Uint8Array(buffer, offset, chunkSize);\n          chunk.set(value);\n          offset += chunkSize;\n        }\n        return new Uint8Array(buffer, 0, fileSize);\n      }\n    }\n  } else if (file instanceof Blob) {\n    return new Uint8Array(await file.arrayBuffer());\n  } else if (file instanceof Uint8Array) {\n    return file;\n  } else {\n    return new Uint8Array(file);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tensor } from 'onnxruntime-common';\n\nimport { tensorTypeToTypedArrayConstructor } from '../wasm-common';\n\nexport const createView = (\n  dataBuffer: ArrayBuffer,\n  type: Tensor.Type,\n):\n  | Int32Array\n  | Uint32Array\n  | BigInt64Array\n  | BigUint64Array\n  | Uint8Array\n  | Float32Array\n  | Float64Array\n  | Int8Array\n  | Int16Array\n  | Uint16Array => new (tensorTypeToTypedArrayConstructor(type))(dataBuffer);\n\n/**\n * a TensorView does not own the data.\n */\nexport interface TensorView {\n  readonly data: number;\n  readonly dataType: number;\n  readonly dims: readonly number[];\n\n  /**\n   * get a Float16Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getUint16Array(): Uint16Array;\n\n  /**\n   * get a Float32Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getFloat32Array(): Float32Array;\n\n  /**\n   * get a BigInt64Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getBigInt64Array(): BigInt64Array;\n\n  /**\n   * get a Int32Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getInt32Array(): Int32Array;\n\n  /**\n   * get a Uint16Array data view of the tensor data. tensor data must be on CPU.\n   */\n  getUint16Array(): Uint16Array;\n\n  /**\n   * create a new tensor view with the same data but different dimensions.\n   */\n  reshape(newDims: readonly number[]): TensorView;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Env } from 'onnxruntime-common';\n\nimport { logLevelStringToEnum } from '../wasm-common';\n\ntype LogLevel = NonNullable<Env['logLevel']>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString | MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\nlet configLogLevel: LogLevel | undefined;\nlet debug: boolean | undefined;\n\nexport const configureLogger = ($configLogLevel: LogLevel, $debug: boolean): void => {\n  configLogLevel = $configLogLevel;\n  debug = $debug;\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(configLogLevel);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (debug) {\n    LOG(...args);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { WebNNBackend } from '../backend-webnn';\nimport { tensorTypeToTypedArrayConstructor } from '../../wasm-common';\nimport { LOG_DEBUG } from '../log';\n\n// WebNN API currently does not have a TypeScript definition file. This file is a workaround with types generated from\n// WebNN API specification.\n// https://github.com/webmachinelearning/webnn/issues/677\n/// <reference path=\"webnn.d.ts\" />\n\n/**\n * Map from MLOperandDataType to size in bits. Using bits instead of bytes to avoid possible precision loss on int4 and uint4.\n */\nconst webnnDataTypeToSize = new Map<MLOperandDataType, number>([\n  ['float32', 32],\n  ['float16', 16],\n  ['int32', 32],\n  ['uint32', 32],\n  ['int64', 64],\n  ['uint64', 64],\n  ['int8', 8],\n  ['uint8', 8],\n  ['int4', 4],\n  ['uint4', 4],\n]);\n\n// Convert integer data to an Int32Array buffer.\n// Supports conversion from int64, uint64, uint32, int8 and uint8 to int32.\nexport const convertDataToInt32 = (data: Uint8Array, dataType: MLOperandDataType): Uint8Array => {\n  if (dataType === 'int32') {\n    return data;\n  }\n\n  const dataTypeSize = webnnDataTypeToSize.get(dataType);\n  if (!dataTypeSize) {\n    throw new Error(`WebNN backend does not support data type: ${dataType}`);\n  }\n  const bytesPerElement = dataTypeSize / 8;\n  // Make sure the data length is a multiple of the data type size.\n  if (data.byteLength % bytesPerElement !== 0) {\n    throw new Error(`Invalid Uint8Array length - must be a multiple of ${bytesPerElement}.`);\n  }\n\n  // Convert Uint8Array to original typed array.\n  const numElements = data.byteLength / bytesPerElement;\n  const originalArray = new (tensorTypeToTypedArrayConstructor(dataType))(data.buffer, data.byteOffset, numElements);\n\n  switch (dataType) {\n    case 'int64':\n    case 'uint64': {\n      // Convert original typed array to Int32Array.\n      const int32Array = new Int32Array(numElements);\n      for (let i = 0; i < numElements; i++) {\n        const value = originalArray[i];\n\n        // Check for overflow.\n        if (value > 2147483647n || value < -2147483648n) {\n          throw new Error(`Can not convert int64 data to int32 - value out of range.`);\n        }\n\n        int32Array[i] = Number(value);\n      }\n\n      return new Uint8Array(int32Array.buffer);\n    }\n    case 'int8':\n    case 'uint8':\n    case 'uint32': {\n      // Check for overflow.\n      if (dataType === 'uint32') {\n        if (originalArray.some((value) => value > 2147483647)) {\n          throw new Error(`Can not convert uint32 data to int32 - value out of range.`);\n        }\n      }\n      // Convert original typed array to Int32Array.\n      const int32Array = Int32Array.from(originalArray, Number);\n      return new Uint8Array(int32Array.buffer);\n    }\n    default:\n      throw new Error(`Unsupported data conversion from ${dataType} to 'int32'`);\n  }\n};\n\n// Convert Int32Array data to original integer data buffer.\n// Supports conversion from int32 to int64, uint64, uint32, int8 and uint8.\nexport const convertInt32ToData = (data: Uint8Array, dataType: MLOperandDataType): Uint8Array => {\n  if (dataType === 'int32') {\n    return data;\n  }\n\n  // Make sure the data length is a multiple of 4 bytes (Int32Array).\n  if (data.byteLength % 4 !== 0) {\n    throw new Error('Invalid Uint8Array length - must be a multiple of 4 (int32).');\n  }\n\n  // Convert Uint8Array to Int32Array.\n  const numElements = data.byteLength / 4;\n  const int32Array = new Int32Array(data.buffer, data.byteOffset, numElements);\n\n  switch (dataType) {\n    case 'int64': {\n      const bigInt64Array = BigInt64Array.from(int32Array, BigInt);\n      return new Uint8Array(bigInt64Array.buffer);\n    }\n    case 'uint64': {\n      if (int32Array.some((value) => value < 0)) {\n        throw new Error('Can not convert int32 data to uin64 - negative value found.');\n      }\n      const bigUint64Array = BigUint64Array.from(int32Array, BigInt);\n      return new Uint8Array(bigUint64Array.buffer);\n    }\n    case 'int8': {\n      if (int32Array.some((value) => value < -128 || value > 127)) {\n        throw new Error('Can not convert int32 data to int8 - value out of range.');\n      }\n      const int8Array = Int8Array.from(int32Array, Number);\n      return new Uint8Array(int8Array.buffer);\n    }\n    case 'uint8': {\n      if (int32Array.some((value) => value < 0 || value > 255)) {\n        throw new Error('Can not convert int32 data to uint8 - value out of range.');\n      }\n      return Uint8Array.from(int32Array, Number);\n    }\n    case 'uint32': {\n      if (int32Array.some((value) => value < 0)) {\n        throw new Error('Can not convert int32 data to uint32 - negative value found.');\n      }\n      const uint32Array = Uint32Array.from(int32Array, Number);\n      return new Uint8Array(uint32Array.buffer);\n    }\n    default:\n      throw new Error(`Unsupported data conversion from 'int32' to ${dataType}`);\n  }\n};\n\nexport type TensorId = number;\n\n/**\n * Manages TensorId to MLTensor mapping.\n */\nexport interface TensorManager {\n  /**\n   * Reserve a new TensorId.\n   */\n  reserveTensorId(): TensorId;\n  /**\n   * Release a TensorId.\n   */\n  releaseTensorId(tensorId: TensorId): void;\n  /**\n   * Ensure a MLTensor is created for the TensorId.\n   */\n  ensureTensor(\n    sessionId: number,\n    tensorId: TensorId,\n    dataType: MLOperandDataType,\n    shape: readonly number[],\n    copyOld: boolean,\n  ): Promise<MLTensor>;\n  /**\n   * Upload data to a MLTensor.\n   */\n  upload(tensorId: TensorId, data: Uint8Array): void;\n  /**\n   * Download data from a MLTensor.\n   */\n  download(tensorId: TensorId): Promise<ArrayBuffer>;\n  download(tensorId: TensorId, dstTensor: ArrayBufferView | ArrayBuffer): Promise<undefined>;\n  /**\n   * Release all tensors for a given session.\n   */\n  releaseTensorsForSession(session: number): void;\n  /**\n   * Register an externally created MLTensor with a given session id and return a TensorId.\n   */\n  registerTensor(sessionId: number, mlTensor: MLTensor, dataType: MLOperandDataType, shape: number[]): TensorId;\n}\n\nlet tensorGuid = 1;\nconst createNewTensorId = (): TensorId => tensorGuid++;\n\n/**\n * Map from data type to fallback data type.\n * When the context does not support the original data type, use fallback data type as workaround.\n * Note: Currently, we only support fallback to int32 for certain integer data types.\n */\nconst webnnDataTypeToFallback = new Map<MLOperandDataType, MLOperandDataType>([\n  ['int8', 'int32'],\n  ['uint8', 'int32'],\n  ['uint32', 'int32'],\n  ['int64', 'int32'],\n]);\n\n/**\n * Calculate the byte length of a tensor with the given data type and shape.\n */\nconst calculateByteLength = (dataType: MLOperandDataType, shape: readonly number[]): number => {\n  const dataTypeSize = webnnDataTypeToSize.get(dataType);\n  if (!dataTypeSize) {\n    throw new Error(`WebNN backend does not support data type: ${dataType}`);\n  }\n  return shape.length > 0 ? Math.ceil((shape.reduce((a, b) => a * b) * dataTypeSize) / 8) : 0;\n};\n\n/**\n * TensorWrapper wraps an MLTensor and provides a way to track the last session that used it.\n */\nclass TensorWrapper {\n  // The id of the last session that used this tensor.\n  public sessionId: number;\n  // This flag is used to indicate whether the data has been converted to fallback data type.\n  public isDataConverted = false;\n\n  private mlContext: MLContext;\n  private mlTensor: MLTensor;\n  private dataType: MLOperandDataType;\n  // Fallback data type to use when the context does not support the original data type.\n  private fallbackDataType: MLOperandDataType | undefined;\n  private tensorShape: readonly number[];\n\n  constructor(descriptor: {\n    sessionId: number;\n    context: MLContext;\n    tensor: MLTensor;\n    dataType: MLOperandDataType;\n    shape: readonly number[];\n    fallbackDataType?: MLOperandDataType;\n  }) {\n    const { sessionId, context, tensor, dataType, shape, fallbackDataType } = descriptor;\n    this.sessionId = sessionId;\n    this.mlContext = context;\n    this.mlTensor = tensor;\n    this.dataType = dataType;\n    this.tensorShape = shape;\n    this.fallbackDataType = fallbackDataType;\n  }\n\n  public get tensor(): MLTensor {\n    return this.mlTensor;\n  }\n\n  public get type(): MLOperandDataType {\n    return this.dataType;\n  }\n\n  public get fallbackType(): MLOperandDataType | undefined {\n    return this.fallbackDataType;\n  }\n\n  public get shape(): readonly number[] {\n    return this.tensorShape;\n  }\n\n  public get byteLength(): number {\n    return calculateByteLength(this.dataType, this.tensorShape);\n  }\n\n  public destroy(): void {\n    LOG_DEBUG('verbose', () => '[WebNN] TensorWrapper.destroy');\n    this.mlTensor.destroy();\n  }\n\n  public write(data: Uint8Array): void {\n    this.mlContext.writeTensor(this.mlTensor, data);\n  }\n\n  public async read(): Promise<ArrayBuffer>;\n  public async read(dstBuffer?: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer | undefined>;\n  public async read(dstBuffer?: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer | undefined> {\n    if (this.fallbackDataType) {\n      // This tensor has been fallback to int32 as workaround, we need to read it as its original integer data type.\n      const data = await this.mlContext.readTensor(this.mlTensor);\n      const originalData = convertInt32ToData(new Uint8Array(data), this.dataType);\n\n      if (dstBuffer) {\n        const targetBuffer =\n          dstBuffer instanceof ArrayBuffer\n            ? new Uint8Array(dstBuffer)\n            : new Uint8Array(dstBuffer.buffer, dstBuffer.byteOffset, dstBuffer.byteLength);\n        targetBuffer.set(originalData);\n        return undefined;\n      } else {\n        return originalData.buffer;\n      }\n    } else {\n      return dstBuffer ? this.mlContext.readTensor(this.mlTensor, dstBuffer) : this.mlContext.readTensor(this.mlTensor);\n    }\n  }\n\n  public canReuseTensor(context: MLContext, dataType: MLOperandDataType, shape: readonly number[]): boolean {\n    return (\n      this.mlContext === context &&\n      this.dataType === dataType &&\n      this.tensorShape.length === shape.length &&\n      this.tensorShape.every((v, i) => v === shape[i])\n    );\n  }\n\n  public setIsDataConverted(isConverted: boolean): void {\n    this.isDataConverted = isConverted;\n  }\n}\n\n/**\n * TensorTracker tracks the MLTensor and pending upload data.\n *\n * We need to track the MLTensor and pending upload data because we delay the creation of MLTensor until\n * we know the data type and shape. This is because WebNN only support creating MLTensors with dataTypes and shape.\n */\nclass TensorIdTracker {\n  private activeUpload?: Uint8Array;\n\n  constructor(\n    private tensorManager: TensorManagerImpl,\n    private wrapper?: TensorWrapper,\n  ) {}\n\n  public get tensorWrapper(): TensorWrapper | undefined {\n    return this.wrapper;\n  }\n\n  public releaseTensor(): void {\n    if (this.tensorWrapper) {\n      this.tensorManager.releaseTensor(this.tensorWrapper);\n      this.wrapper = undefined;\n    }\n  }\n\n  public async ensureTensor(\n    sessionId: number,\n    dataType: MLOperandDataType,\n    shape: readonly number[],\n    copyOld: boolean,\n  ): Promise<MLTensor> {\n    const context = this.tensorManager.getMLContext(sessionId);\n    let fallbackDataType: MLOperandDataType | undefined;\n    // Check if the context supports the data type. If not, try to use the fallback data type.\n    if (!context.opSupportLimits().input.dataTypes.includes(dataType)) {\n      fallbackDataType = webnnDataTypeToFallback.get(dataType);\n      if (!fallbackDataType || !context.opSupportLimits().input.dataTypes.includes(fallbackDataType)) {\n        throw new Error(`WebNN backend does not support data type: ${dataType}`);\n      }\n      LOG_DEBUG(\n        'verbose',\n        () => `[WebNN] TensorIdTracker.ensureTensor: fallback dataType from ${dataType} to ${fallbackDataType}`,\n      );\n    }\n\n    if (this.wrapper) {\n      if (this.wrapper.canReuseTensor(context, dataType, shape)) {\n        return this.wrapper.tensor;\n      } else {\n        if (copyOld) {\n          if (this.wrapper.byteLength !== calculateByteLength(dataType, shape)) {\n            throw new Error('Unable to copy data to tensor with different size.');\n          }\n          this.activeUpload = new Uint8Array(await this.wrapper.read());\n        }\n        this.tensorManager.releaseTensor(this.wrapper);\n      }\n    }\n\n    // eslint-disable-next-line no-bitwise\n    const usage = typeof MLTensorUsage == 'undefined' ? undefined : MLTensorUsage.READ | MLTensorUsage.WRITE;\n    this.wrapper = await this.tensorManager.getCachedTensor(\n      sessionId,\n      dataType,\n      shape,\n      usage,\n      true,\n      true,\n      fallbackDataType,\n    );\n\n    if (copyOld && this.activeUpload) {\n      // We don't need to convert the original integer data to int32,\n      // because it has been converted when it was uploaded.\n      this.wrapper.write(this.activeUpload);\n      this.activeUpload = undefined;\n    }\n\n    return this.wrapper.tensor;\n  }\n\n  public upload(data: Uint8Array): void {\n    let newData = data;\n    if (this.wrapper) {\n      if (this.wrapper.fallbackType) {\n        if (this.wrapper.fallbackType === 'int32') {\n          // Convert original integer data to int32.\n          newData = convertDataToInt32(data, this.wrapper.type);\n          this.wrapper.setIsDataConverted(true);\n        } else {\n          throw new Error(`Unsupported fallback data type: ${this.wrapper.fallbackType}`);\n        }\n      }\n\n      // Check if the data size matches the tensor size.\n      if (data.byteLength === this.wrapper.byteLength) {\n        // Write the newData to the tensor.\n        this.wrapper.write(newData);\n        return;\n      } else {\n        LOG_DEBUG('verbose', () => 'Data size does not match tensor size. Releasing tensor.');\n        this.releaseTensor();\n      }\n    }\n\n    if (this.activeUpload) {\n      this.activeUpload.set(newData);\n    } else {\n      this.activeUpload = new Uint8Array(newData);\n    }\n  }\n\n  public async download(dstBuffer?: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer | undefined> {\n    if (this.activeUpload) {\n      // If this.activeUpload has been converted to int32, we need to convert it back to original integer data type.\n      const dstData = this.wrapper?.isDataConverted\n        ? convertInt32ToData(this.activeUpload, this.wrapper?.type)\n        : this.activeUpload;\n\n      if (dstBuffer) {\n        if (dstBuffer instanceof ArrayBuffer) {\n          new Uint8Array(dstBuffer).set(dstData);\n        } else {\n          new Uint8Array(dstBuffer.buffer, dstBuffer.byteOffset, dstBuffer.byteLength).set(dstData);\n        }\n        return;\n      } else {\n        return dstData.buffer;\n      }\n    }\n    if (!this.wrapper) {\n      throw new Error('Tensor has not been created.');\n    }\n\n    if (!dstBuffer) {\n      return this.wrapper.read();\n    }\n    return this.wrapper.read(dstBuffer);\n  }\n}\n\nclass TensorManagerImpl implements TensorManager {\n  private tensorTrackersById: Map<TensorId, TensorIdTracker> = new Map();\n  private freeTensors: TensorWrapper[] = [];\n  private externalTensors: Set<TensorWrapper> = new Set();\n\n  constructor(private backend: WebNNBackend) {}\n\n  public getMLContext(sessionId: number): MLContext {\n    const context = this.backend.getMLContext(sessionId);\n    if (!context) {\n      throw new Error('MLContext not found for session.');\n    }\n    return context;\n  }\n\n  public reserveTensorId(): TensorId {\n    const tensorId = createNewTensorId();\n    this.tensorTrackersById.set(tensorId, new TensorIdTracker(this));\n    return tensorId;\n  }\n\n  public releaseTensorId(tensorId: TensorId): void {\n    const tensorTracker = this.tensorTrackersById.get(tensorId);\n    if (!tensorTracker) {\n      return;\n    }\n    this.tensorTrackersById.delete(tensorId);\n    if (tensorTracker.tensorWrapper) {\n      this.releaseTensor(tensorTracker.tensorWrapper);\n    }\n  }\n\n  public async ensureTensor(\n    sessionId: number,\n    tensorId: TensorId,\n    dataType: MLOperandDataType,\n    shape: number[],\n    copyOld: boolean,\n  ): Promise<MLTensor> {\n    LOG_DEBUG(\n      'verbose',\n      () =>\n        `[WebNN] TensorManager.ensureTensor {tensorId: ${tensorId}, dataType: ${\n          dataType\n        }, shape: ${shape}, copyOld: ${copyOld}}`,\n    );\n    const tensor = this.tensorTrackersById.get(tensorId);\n    if (!tensor) {\n      throw new Error('Tensor not found.');\n    }\n    return tensor.ensureTensor(sessionId, dataType, shape, copyOld);\n  }\n\n  public upload(tensorId: TensorId, data: Uint8Array): void {\n    const tensor = this.tensorTrackersById.get(tensorId);\n    if (!tensor) {\n      throw new Error('Tensor not found.');\n    }\n    tensor.upload(data);\n  }\n\n  public async download(tensorId: TensorId): Promise<ArrayBuffer>;\n  public async download(tensorId: TensorId, dstBuffer: ArrayBufferView | ArrayBuffer): Promise<undefined>;\n  async download(tensorId: TensorId, dstBuffer?: ArrayBufferView | ArrayBuffer): Promise<ArrayBuffer | undefined> {\n    LOG_DEBUG(\n      'verbose',\n      () => `[WebNN] TensorManager.download {tensorId: ${tensorId}, dstBuffer: ${dstBuffer?.byteLength}}`,\n    );\n    const tensorTracker = this.tensorTrackersById.get(tensorId);\n    if (!tensorTracker) {\n      throw new Error('Tensor not found.');\n    }\n    return tensorTracker.download(dstBuffer);\n  }\n\n  public releaseTensorsForSession(sessionId: number): void {\n    for (const tensor of this.freeTensors) {\n      if (tensor.sessionId === sessionId) {\n        tensor.destroy();\n      }\n    }\n    this.freeTensors = this.freeTensors.filter((tensor) => tensor.sessionId !== sessionId);\n  }\n\n  public registerTensor(\n    sessionId: number,\n    mlTensor: MLTensor,\n    dataType: MLOperandDataType,\n    shape: readonly number[],\n  ): TensorId {\n    const context = this.getMLContext(sessionId);\n    const tensorId = createNewTensorId();\n    // Defaulting to READ | WRITE if usage is not provided.\n    // eslint-disable-next-line no-bitwise\n    const wrapper = new TensorWrapper({\n      sessionId,\n      context,\n      tensor: mlTensor,\n      dataType,\n      shape,\n    });\n    this.tensorTrackersById.set(tensorId, new TensorIdTracker(this, wrapper));\n    this.externalTensors.add(wrapper);\n    return tensorId;\n  }\n\n  /**\n   * Get or create an MLTensor with the given data type and shape.\n   */\n  public async getCachedTensor(\n    sessionId: number,\n    dataType: MLOperandDataType,\n    shape: readonly number[],\n    usage: MLTensorUsageFlags | undefined,\n    writable: boolean,\n    readable: boolean,\n    fallbackDataType?: MLOperandDataType,\n  ): Promise<TensorWrapper> {\n    const context = this.getMLContext(sessionId);\n    for (const [index, tensor] of this.freeTensors.entries()) {\n      if (tensor.canReuseTensor(context, dataType, shape)) {\n        LOG_DEBUG(\n          'verbose',\n          () =>\n            `[WebNN] Reusing tensor {dataType: ${dataType}, ${\n              fallbackDataType ? `fallbackDataType: ${fallbackDataType},` : ''\n            } shape: ${shape}`,\n        );\n        const wrapper = this.freeTensors.splice(index, 1)[0];\n        wrapper.sessionId = sessionId;\n        return wrapper;\n      }\n    }\n    LOG_DEBUG(\n      'verbose',\n      () =>\n        `[WebNN] MLContext.createTensor {dataType: ${dataType}, ${\n          fallbackDataType ? `fallbackDataType: ${fallbackDataType},` : ''\n        } shape: ${shape}}`,\n    );\n    const tensor = await context.createTensor({\n      dataType: fallbackDataType ?? dataType, // If fallback data type is provided, use it.\n      shape,\n      dimensions: shape,\n      usage,\n      writable,\n      readable,\n    });\n    return new TensorWrapper({ sessionId, context, tensor, dataType, shape, fallbackDataType });\n  }\n\n  /**\n   * Release tensor for reuse unless external.\n   */\n  public releaseTensor(tensorWrapper: TensorWrapper) {\n    if (this.externalTensors.has(tensorWrapper)) {\n      this.externalTensors.delete(tensorWrapper);\n    }\n    this.freeTensors.push(tensorWrapper);\n  }\n}\n\nexport const createTensorManager = (...args: ConstructorParameters<typeof TensorManagerImpl>): TensorManager =>\n  new TensorManagerImpl(...args);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// WebNN API currently does not have a TypeScript definition file. This file is a workaround with types generated from\n// WebNN API specification.\n// https://github.com/webmachinelearning/webnn/issues/677\n/// <reference path=\"webnn/webnn.d.ts\" />\n\nimport { Env, Tensor } from 'onnxruntime-common';\n\nimport { DataType, tensorDataTypeStringToEnum } from '../wasm-common';\nimport { getInstance } from '../wasm-factory';\n\nimport { createView } from './tensor-view';\nimport { TensorId, createTensorManager, convertDataToInt32 } from './webnn/tensor-manager';\nimport { configureLogger, LOG_DEBUG } from './log';\n\n/*\n * TensorProto::data_type to WebNN OperandType mapping.\n */\nconst onnxDataTypeToWebnnDataType = new Map<DataType, MLOperandDataType>([\n  [DataType.float, 'float32'],\n  [DataType.float16, 'float16'],\n  [DataType.int32, 'int32'],\n  [DataType.uint32, 'uint32'],\n  [DataType.int64, 'int64'],\n  [DataType.uint64, 'uint64'],\n  [DataType.int4, 'int4'],\n  [DataType.uint4, 'uint4'],\n  [DataType.int8, 'int8'],\n  [DataType.uint8, 'uint8'],\n  [DataType.bool, 'uint8'],\n]);\n\ntype MLContextEntry = {\n  gpuDevice?: GPUDevice;\n  options?: MLContextOptions;\n  mlContext: MLContext;\n};\n\nconst compareMLContextOptions = (a?: MLContextOptions, b?: MLContextOptions): boolean => {\n  if (a === b) {\n    return true;\n  }\n  if (a === undefined || b === undefined) {\n    return false;\n  }\n  const aKeys = Object.keys(a).sort() as Array<keyof typeof a>;\n  const bKeys = Object.keys(b).sort() as Array<keyof typeof b>;\n  return aKeys.length === bKeys.length && aKeys.every((key, index) => key === bKeys[index] && a[key] === b[key]);\n};\n\n/**\n * WebNN backend implementation. This class is used to keep track of the MLTensors created by the backend and keep track\n * of the current MLContext being used by the sessions.\n */\nexport class WebNNBackend {\n  /**\n   * Tensor managers for each session.\n   */\n  private tensorManager = createTensorManager(this);\n  /**\n   * Maps from session id to MLContexts.\n   */\n  private mlContextBySessionId = new Map<number, MLContext>();\n  /**\n   * Maps from MLContext to session ids.\n   */\n  private sessionIdsByMLContext = new Map<MLContext, Set<number>>();\n  /**\n   * Cache of MLContexts.\n   */\n  private mlContextCache: MLContextEntry[] = [];\n  /**\n   * Current session id.\n   */\n  private activeSessionId?: number;\n  /**\n   * Maps from session id to list of graph inputs.\n   */\n  private sessionGraphInputs: Map<number, string[]> = new Map();\n  /**\n   * Maps from session id to list of graph outputs.\n   */\n  private sessionGraphOutputs: Map<number, string[]> = new Map();\n  /**\n   * Temporary graph inputs for the current session.\n   * These inputs will be registered when the session is created.\n   */\n  private temporaryGraphInputs: string[] = [];\n  /**\n   * Temporary graph outputs for the current session.\n   * These outputs will be registered when the session is created.\n   */\n  private temporaryGraphOutputs: string[] = [];\n  /**\n   * Temporary tensors for the current session.\n   */\n  private temporarySessionTensorIds: Map<number, TensorId[]> = new Map();\n\n  constructor(env: Env) {\n    configureLogger(env.logLevel!, !!env.debug);\n  }\n\n  public get currentSessionId(): number {\n    if (this.activeSessionId === undefined) {\n      throw new Error('No active session');\n    }\n    return this.activeSessionId;\n  }\n\n  public onRunStart(sessionId: number): void {\n    LOG_DEBUG('verbose', () => `[WebNN] onRunStart {sessionId: ${sessionId}}`);\n    this.activeSessionId = sessionId;\n  }\n\n  public onRunEnd(sessionId: number): void {\n    LOG_DEBUG('verbose', () => `[WebNN] onRunEnd {sessionId: ${sessionId}}`);\n    const tensorIds = this.temporarySessionTensorIds.get(sessionId);\n    if (!tensorIds) {\n      return;\n    }\n    for (const tensorId of tensorIds) {\n      LOG_DEBUG('verbose', () => `[WebNN] releasing temporary tensor {tensorId: ${tensorId}}`);\n      this.tensorManager.releaseTensorId(tensorId);\n    }\n    this.temporarySessionTensorIds.delete(sessionId);\n    this.activeSessionId = undefined;\n  }\n\n  public async createMLContext(optionsOrDevice?: MLContextOptions | GPUDevice): Promise<MLContext> {\n    if (optionsOrDevice instanceof GPUDevice) {\n      const mlContextIndex = this.mlContextCache.findIndex((entry) => entry.gpuDevice === optionsOrDevice);\n      if (mlContextIndex !== -1) {\n        return this.mlContextCache[mlContextIndex].mlContext;\n      } else {\n        const mlContext = await navigator.ml.createContext(optionsOrDevice);\n        this.mlContextCache.push({ gpuDevice: optionsOrDevice, mlContext });\n        return mlContext;\n      }\n    } else if (optionsOrDevice === undefined) {\n      const mlContextIndex = this.mlContextCache.findIndex(\n        (entry) => entry.options === undefined && entry.gpuDevice === undefined,\n      );\n      if (mlContextIndex !== -1) {\n        return this.mlContextCache[mlContextIndex].mlContext;\n      } else {\n        const mlContext = await navigator.ml.createContext();\n        this.mlContextCache.push({ mlContext });\n        return mlContext;\n      }\n    }\n\n    const mlContextIndex = this.mlContextCache.findIndex((entry) =>\n      compareMLContextOptions(entry.options, optionsOrDevice),\n    );\n    if (mlContextIndex !== -1) {\n      return this.mlContextCache[mlContextIndex].mlContext;\n    } else {\n      const mlContext = await navigator.ml.createContext(optionsOrDevice);\n      this.mlContextCache.push({ options: optionsOrDevice, mlContext });\n      return mlContext;\n    }\n  }\n\n  public registerMLContext(sessionId: number, mlContext: MLContext): void {\n    this.mlContextBySessionId.set(sessionId, mlContext);\n    let sessionIds = this.sessionIdsByMLContext.get(mlContext);\n    if (!sessionIds) {\n      sessionIds = new Set();\n      this.sessionIdsByMLContext.set(mlContext, sessionIds);\n    }\n    sessionIds.add(sessionId);\n\n    if (this.temporaryGraphInputs.length > 0) {\n      this.sessionGraphInputs.set(sessionId, this.temporaryGraphInputs);\n      this.temporaryGraphInputs = [];\n    }\n    if (this.temporaryGraphOutputs.length > 0) {\n      this.sessionGraphOutputs.set(sessionId, this.temporaryGraphOutputs);\n      this.temporaryGraphOutputs = [];\n    }\n  }\n\n  public onReleaseSession(sessionId: number): void {\n    this.sessionGraphInputs.delete(sessionId);\n    this.sessionGraphOutputs.delete(sessionId);\n    const mlContext = this.mlContextBySessionId.get(sessionId)!;\n    if (!mlContext) {\n      // Current session is not a WebNN session.\n      return;\n    }\n    this.tensorManager.releaseTensorsForSession(sessionId);\n    this.mlContextBySessionId.delete(sessionId);\n    const sessionIds = this.sessionIdsByMLContext.get(mlContext)!;\n    sessionIds.delete(sessionId);\n    if (sessionIds.size === 0) {\n      this.sessionIdsByMLContext.delete(mlContext);\n      const mlContextIndex = this.mlContextCache.findIndex((entry) => entry.mlContext === mlContext);\n      if (mlContextIndex !== -1) {\n        this.mlContextCache.splice(mlContextIndex, 1);\n      }\n    }\n  }\n\n  public getMLContext(sessionId: number): MLContext | undefined {\n    return this.mlContextBySessionId.get(sessionId);\n  }\n\n  public reserveTensorId(): TensorId {\n    return this.tensorManager.reserveTensorId();\n  }\n\n  public releaseTensorId(tensorId: TensorId): void {\n    LOG_DEBUG('verbose', () => `[WebNN] releaseTensorId {tensorId: ${tensorId}}`);\n    this.tensorManager.releaseTensorId(tensorId);\n  }\n\n  public async ensureTensor(\n    sessionId: number | undefined,\n    tensorId: TensorId,\n    onnxDataType: DataType,\n    dimensions: number[],\n    copyOld: boolean,\n  ): Promise<MLTensor> {\n    const webnnDataType = onnxDataTypeToWebnnDataType.get(onnxDataType);\n    if (!webnnDataType) {\n      throw new Error(`Unsupported ONNX data type: ${onnxDataType}`);\n    }\n    return this.tensorManager.ensureTensor(\n      sessionId ?? this.currentSessionId,\n      tensorId,\n      webnnDataType,\n      dimensions,\n      copyOld,\n    );\n  }\n\n  public async createTemporaryTensor(\n    sessionId: number,\n    onnxDataType: DataType,\n    shape: readonly number[],\n  ): Promise<TensorId> {\n    LOG_DEBUG('verbose', () => `[WebNN] createTemporaryTensor {onnxDataType: ${onnxDataType}, shape: ${shape}}`);\n    const dataType = onnxDataTypeToWebnnDataType.get(onnxDataType);\n    if (!dataType) {\n      throw new Error(`Unsupported ONNX data type: ${onnxDataType}`);\n    }\n    const tensorId = this.tensorManager.reserveTensorId();\n    await this.tensorManager.ensureTensor(sessionId, tensorId, dataType, shape, false);\n    const tensorIds = this.temporarySessionTensorIds.get(sessionId);\n    if (!tensorIds) {\n      this.temporarySessionTensorIds.set(sessionId, [tensorId]);\n    } else {\n      tensorIds.push(tensorId);\n    }\n    return tensorId;\n  }\n\n  public uploadTensor(tensorId: TensorId, data: Uint8Array): void {\n    const wasm = getInstance();\n    if (!wasm.shouldTransferToMLTensor) {\n      throw new Error('Trying to upload to a MLTensor while shouldTransferToMLTensor is false');\n    }\n    LOG_DEBUG('verbose', () => `[WebNN] uploadTensor {tensorId: ${tensorId}, data: ${data.byteLength}}`);\n    this.tensorManager.upload(tensorId, data);\n  }\n\n  public async downloadTensor(tensorId: TensorId, dstBuffer: ArrayBufferView | ArrayBuffer): Promise<undefined> {\n    return this.tensorManager.download(tensorId, dstBuffer);\n  }\n\n  public createMLTensorDownloader(tensorId: TensorId, type: Tensor.MLTensorDataTypes): () => Promise<Tensor.DataType> {\n    return async () => {\n      const data = await this.tensorManager.download(tensorId);\n      return createView(data, type);\n    };\n  }\n\n  public registerMLTensor(sessionId: number, tensor: MLTensor, onnxDataType: DataType, dimensions: number[]): TensorId {\n    const webnnDataType = onnxDataTypeToWebnnDataType.get(onnxDataType);\n    if (!webnnDataType) {\n      throw new Error(`Unsupported ONNX data type: ${onnxDataType}`);\n    }\n\n    const id = this.tensorManager.registerTensor(sessionId, tensor, webnnDataType, dimensions);\n    LOG_DEBUG(\n      'verbose',\n      () =>\n        `[WebNN] registerMLTensor {tensor: ${tensor}, dataType: ${webnnDataType}, dimensions: ${\n          dimensions\n        }} -> {tensorId: ${id}}`,\n    );\n    return id;\n  }\n\n  // Register a WebNN Constant operand from external data.\n  public registerMLConstant(\n    externalFilePath: string,\n    dataOffset: number,\n    dataLength: number,\n    builder: MLGraphBuilder,\n    desc: MLOperandDescriptor,\n    mountedFiles: Map<string, Uint8Array> | undefined,\n    shouldConvertInt64ToInt32 = false,\n  ): MLOperand {\n    // If available, \"Module.MountedFiles\" is a Map for all preloaded files.\n    if (!mountedFiles) {\n      throw new Error('External mounted files are not available.');\n    }\n\n    let filePath = externalFilePath;\n    if (externalFilePath.startsWith('./')) {\n      filePath = externalFilePath.substring(2);\n    }\n    const fileData = mountedFiles.get(filePath);\n    if (!fileData) {\n      throw new Error(`File with name ${filePath} not found in preloaded files.`);\n    }\n\n    if (dataOffset + dataLength > fileData.byteLength) {\n      throw new Error('Out of bounds: data offset and length exceed the external file data size.');\n    }\n\n    const buffer = fileData.slice(dataOffset, dataOffset + dataLength).buffer;\n    let bufferView: ArrayBufferView;\n    switch (desc.dataType) {\n      case 'float32':\n        bufferView = new Float32Array(buffer);\n        break;\n      case 'float16':\n        bufferView =\n          typeof Float16Array !== 'undefined' && Float16Array.from ? new Float16Array(buffer) : new Uint16Array(buffer);\n        break;\n      case 'int32':\n        bufferView = new Int32Array(buffer);\n        break;\n      case 'uint32':\n        bufferView = new Uint32Array(buffer);\n        break;\n      case 'int64':\n        if (shouldConvertInt64ToInt32) {\n          // Int64 is not supported by current context, use int32 instead.\n          const int32Buffer = convertDataToInt32(new Uint8Array(buffer), 'int64');\n          bufferView = new Int32Array(int32Buffer.buffer);\n          desc.dataType = 'int32';\n        } else {\n          bufferView = new BigInt64Array(buffer);\n        }\n        break;\n      case 'uint64':\n        bufferView = new BigUint64Array(buffer);\n        break;\n      case 'int8':\n        bufferView = new Int8Array(buffer);\n        break;\n      case 'int4':\n      case 'uint4':\n      case 'uint8':\n        bufferView = new Uint8Array(buffer);\n        break;\n      default:\n        throw new Error(`Unsupported data type: ${desc.dataType} in creating WebNN Constant from external data.`);\n    }\n\n    LOG_DEBUG(\n      'verbose',\n      () =>\n        `[WebNN] registerMLConstant {dataType: ${desc.dataType}, shape: ${desc.shape}}} ${\n          shouldConvertInt64ToInt32 ? '(Note: it was int64 data type and registered to int32 as workaround)' : ''\n        }`,\n    );\n\n    return builder.constant(desc, bufferView);\n  }\n\n  public registerGraphInput(inputName: string): void {\n    this.temporaryGraphInputs.push(inputName);\n  }\n\n  public registerGraphOutput(outputName: string): void {\n    this.temporaryGraphOutputs.push(outputName);\n  }\n\n  public isGraphInput(sessionId: number, inputName: string): boolean {\n    const inputNames = this.sessionGraphInputs.get(sessionId);\n    if (!inputNames) {\n      return false;\n    }\n    return inputNames.includes(inputName);\n  }\n\n  public isGraphOutput(sessionId: number, outputName: string): boolean {\n    const outputNames = this.sessionGraphOutputs.get(sessionId);\n    if (!outputNames) {\n      return false;\n    }\n    return outputNames.includes(outputName);\n  }\n\n  public isGraphInputOutputTypeSupported(sessionId: number, type: Tensor.Type, isInput = true): boolean {\n    const context = this.mlContextBySessionId.get(sessionId);\n    const dataType = onnxDataTypeToWebnnDataType.get(tensorDataTypeStringToEnum(type));\n\n    if (typeof dataType === 'undefined') {\n      return false;\n    }\n\n    if (isInput) {\n      return !!context?.opSupportLimits().input.dataTypes.includes(dataType);\n    } else {\n      return !!context?.opSupportLimits().output.dataTypes.includes(dataType);\n    }\n  }\n\n  public flush(): void {\n    // Unlike the WebGPU backend, the WebNN backend does not need to flush any pending operations.\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// WebNN API currently does not have a TypeScript definition file. This file is a workaround with types generated from\n// WebNN API specification.\n// https://github.com/webmachinelearning/webnn/issues/677\n/// <reference path=\"jsep/webnn/webnn.d.ts\" />\n\nimport { Env, InferenceSession, Tensor, TRACE_EVENT_BEGIN, TRACE_EVENT_END } from 'onnxruntime-common';\n\nimport {\n  SerializableInternalBuffer,\n  SerializableSessionMetadata,\n  SerializableTensorMetadata,\n  TensorMetadata,\n} from './proxy-messages';\nimport { setRunOptions } from './run-options';\nimport { setSessionOptions } from './session-options';\nimport {\n  calculateTensorSizeInBytes,\n  dataLocationStringToEnum,\n  isGpuBufferSupportedType,\n  isMLTensorSupportedType,\n  logLevelStringToEnum,\n  tensorDataTypeEnumToString,\n  tensorDataTypeStringToEnum,\n  tensorTypeToTypedArrayConstructor,\n} from './wasm-common';\nimport { getInstance } from './wasm-factory';\nimport { allocWasmString, checkLastError } from './wasm-utils';\nimport { loadFile } from './wasm-utils-load-file';\n\n// #region Initializations\n\n/**\n * There are 4 different \"initialization\" steps for ORT. They happen in different places and different time.\n *\n * 1. JavaScript initialization for onnxruntime-common and onnxruntime-web.\n *    This is the first initialization step. In this step, onnxruntime-web calls onnxruntime-common's registerBackend()\n * function multiple times to register all the available backends. The backend registration is very fast. It only\n * registers the backend name with the uninitialized backend object. No heavy initialization is done in this step.\n *    Refer to web/lib/index.ts for the backend registration.\n *\n * 2. WebAssembly artifact initialization.\n *    This happens when any registered wasm backend is used for the first time (ie. `ort.InferenceSession.create()` is\n * called). In this step, onnxruntime-web does the followings:\n *     - create a proxy worker and make sure the proxy worker is ready to receive messages, if proxy is enabled.\n *     - perform feature detection, locate correct WebAssembly artifact path and call the Emscripten generated\n * JavaScript code to initialize the WebAssembly runtime.\n *         - if proxy is enabled, this step happens in the proxy worker using message 'init-wasm'.\n *         - downloading the 'ort-wasm{...}.wasm' file is done in this step.\n *         - if multi-thread is enabled, one or more webworker will be created to initialize the PThread threadpool.\n *\n * 3. ORT environment initialization.\n *    This happens after step 2. In this step, onnxruntime-web performs ONNX Runtime environment initialization.\n * Function `_OrtInit()` is called in this step.\n *     - if proxy is enabled, this step happens in the proxy worker using message 'init-ort'.\n *     - logging level (ort.env.logLevel) and thread number (ort.env.wasm.numThreads) are set in this step.\n *\n * 4. Session initialization.\n *    This happens when `ort.InferenceSession.create()` is called. Unlike the first 3 steps (they only called once),\n * this step will be done for each session. In this step, onnxruntime-web does the followings:\n *    If the parameter is a URL:\n *    - download the model data from the URL.\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - dereference the model buffer. This step allows the original ArrayBuffer to be garbage collected.\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *    If the parameter is a Uint8Array object:\n *    - copy the model data to the WASM heap. (proxy: 'copy-from')\n *    - call `_OrtCreateSession()` to create the session. (proxy: 'create')\n *\n *\n */\n\n/**\n * initialize ORT environment.\n *\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError(\"Can't initialize onnxruntime.\");\n  }\n};\n\n/**\n * initialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async (env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n};\n\n/**\n * perform EP specific initialization.\n *\n * @param env\n * @param epName\n */\nexport const initEp = async (env: Env, epName: string): Promise<void> => {\n  // initialize ASYNCIFY support\n  getInstance().asyncInit?.();\n\n  // perform WebGPU availability check ( either JSEP or WebGPU EP )\n  let webgpuAdapter = env.webgpu.adapter as GPUAdapter | null;\n  if (epName === 'webgpu') {\n    if (typeof navigator === 'undefined' || !navigator.gpu) {\n      throw new Error('WebGPU is not supported in current environment');\n    }\n    if (!webgpuAdapter) {\n      // if adapter is not set, request a new adapter.\n      const powerPreference = env.webgpu.powerPreference;\n      if (powerPreference !== undefined && powerPreference !== 'low-power' && powerPreference !== 'high-performance') {\n        throw new Error(`Invalid powerPreference setting: \"${powerPreference}\"`);\n      }\n      const forceFallbackAdapter = env.webgpu.forceFallbackAdapter;\n      if (forceFallbackAdapter !== undefined && typeof forceFallbackAdapter !== 'boolean') {\n        throw new Error(`Invalid forceFallbackAdapter setting: \"${forceFallbackAdapter}\"`);\n      }\n      webgpuAdapter = await navigator.gpu.requestAdapter({ powerPreference, forceFallbackAdapter });\n      if (!webgpuAdapter) {\n        throw new Error(\n          'Failed to get GPU adapter. ' +\n            'You may need to enable flag \"--enable-unsafe-webgpu\" if you are using Chrome.',\n        );\n      }\n    } else {\n      // if adapter is set, validate it.\n      if (\n        typeof webgpuAdapter.limits !== 'object' ||\n        typeof webgpuAdapter.features !== 'object' ||\n        typeof webgpuAdapter.requestDevice !== 'function'\n      ) {\n        throw new Error('Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.');\n      }\n    }\n  }\n\n  // perform WebNN availability check ( either JSEP or WebNN EP )\n  if (epName === 'webnn') {\n    if (typeof navigator === 'undefined' || !(navigator as unknown as { ml: unknown }).ml) {\n      throw new Error('WebNN is not supported in current environment');\n    }\n  }\n\n  if (!BUILD_DEFS.DISABLE_JSEP) {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n\n    if (epName === 'webgpu') {\n      await initJsep('webgpu', getInstance(), env, webgpuAdapter);\n    }\n    if (epName === 'webnn') {\n      await initJsep('webnn', getInstance(), env);\n    }\n  } else {\n    if (!BUILD_DEFS.DISABLE_WEBGPU && epName === 'webgpu') {\n      getInstance().webgpuInit!((device) => {\n        env.webgpu.device = device;\n      });\n    }\n    if (!BUILD_DEFS.DISABLE_WEBNN && epName === 'webnn') {\n      // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n      const backend = new (require('./jsep/backend-webnn').WebNNBackend)(env);\n      getInstance().webnnInit!([\n        backend,\n        // webnnReserveTensorId\n        () => backend.reserveTensorId(),\n        // webnnReleaseTensorId,\n        (tensorId: number) => backend.releaseTensorId(tensorId),\n        // webnnEnsureTensor\n        async (sessionId: number | undefined, tensorId: number, onnxDataType: number, shape: number[], copyOld) =>\n          backend.ensureTensor(sessionId, tensorId, onnxDataType, shape, copyOld),\n        // webnnUploadTensor\n        (tensorId: number, data: Uint8Array) => {\n          backend.uploadTensor(tensorId, data);\n        },\n        // webnnDownloadTensor\n        async (tensorId: number, dstBuffer: ArrayBufferView | ArrayBuffer) =>\n          backend.downloadTensor(tensorId, dstBuffer),\n        // webnnRegisterMLContext\n        (sessionId: number, mlContext: MLContext) => backend.registerMLContext(sessionId, mlContext),\n        // webnnEnableTraceEvent\n        !!env.trace,\n      ]);\n    }\n  }\n};\n\n// #endregion Initializations\n\n/**\n * valid data locations for input/output tensors.\n */\ntype SupportedTensorDataLocationForInputOutput =\n  | 'cpu'\n  | 'cpu-pinned'\n  | 'gpu-buffer'\n  | 'ml-tensor'\n  // Use 'ml-tensor' during inference, but output a tensor located on the CPU.\n  | 'ml-tensor-cpu-output';\n\ntype IOBindingState = {\n  /**\n   * the handle of IO binding.\n   */\n  readonly handle: number;\n\n  /**\n   * the preferred location for each output tensor.\n   *\n   * value is one of 'cpu', 'cpu-pinned', 'gpu-buffer', 'ml-tensor'.\n   */\n  readonly outputPreferredLocations: readonly SupportedTensorDataLocationForInputOutput[];\n\n  /**\n   * enum value of the preferred location for each output tensor.\n   */\n  readonly outputPreferredLocationsEncoded: readonly number[];\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded; bindingState\n */\ntype SessionMetadata = [\n  inferenceSessionId: number,\n  inputNamesUTF8Encoded: number[],\n  outputNamesUTF8Encoded: number[],\n  bindingState: IOBindingState | null,\n  enableGraphCapture: boolean,\n  inputOutputBound: boolean,\n];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const ptrSize = wasm.PTR_SIZE;\n    const dataOffset = wasm.stackAlloc(2 * ptrSize);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + ptrSize);\n    if (errorCode !== 0) {\n      checkLastError(\"Can't get session input/output count.\");\n    }\n    const type = ptrSize === 4 ? 'i32' : 'i64';\n    return [Number(wasm.getValue(dataOffset, type)), Number(wasm.getValue(dataOffset + ptrSize, type))];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\nconst getSessionInputOutputMetadata = (\n  sessionHandle: number,\n  index: number,\n): [nameOffset: number, elementType: number, dims?: Array<number | string>] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  let metadataOffset = 0;\n  try {\n    const ptrSize = wasm.PTR_SIZE;\n    const dataOffset = wasm.stackAlloc(2 * ptrSize);\n    const errorCode = wasm._OrtGetInputOutputMetadata(sessionHandle, index, dataOffset, dataOffset + ptrSize);\n    if (errorCode !== 0) {\n      checkLastError(\"Can't get session input/output metadata.\");\n    }\n    const nameOffset = Number(wasm.getValue(dataOffset, '*'));\n    metadataOffset = Number(wasm.getValue(dataOffset + ptrSize, '*'));\n    // get element type\n    const elementType = wasm.HEAP32[metadataOffset / 4];\n    if (elementType === 0) {\n      return [nameOffset, 0]; // non-tensor\n    }\n\n    // get dims count\n    const dimsCount = wasm.HEAPU32[metadataOffset / 4 + 1];\n    // get dims\n    const dims: Array<number | string> = [];\n    for (let i = 0; i < dimsCount; i++) {\n      const symbolicDimNameOffset = Number(wasm.getValue(metadataOffset + 8 + i * ptrSize, '*'));\n      dims.push(\n        symbolicDimNameOffset !== 0\n          ? wasm.UTF8ToString(symbolicDimNameOffset)\n          : Number(wasm.getValue(metadataOffset + 8 + (i + dimsCount) * ptrSize, '*')),\n      );\n    }\n    return [nameOffset, elementType, dims];\n  } finally {\n    wasm.stackRestore(stack);\n    if (metadataOffset !== 0) {\n      wasm._OrtFree(metadataOffset);\n    }\n  }\n};\n\n/**\n * allocate the memory and memcpy the external buffer.\n *\n * @param model - the external buffer containing the model data. Must not be the same buffer as the WASM heap.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const copyFromExternalBuffer = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session from a model data buffer.\n *\n * @param modelData - either a Uint8Array object representing the model data, or a 2-elements tuple containing the\n *     pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSession = async (\n  modelData: Uint8Array | SerializableInternalBuffer,\n  options?: InferenceSession.SessionOptions,\n): Promise<SerializableSessionMetadata> => {\n  let modelDataOffset: number, modelDataLength: number;\n  const wasm = getInstance();\n\n  if (Array.isArray(modelData)) {\n    // if model data is an array, it must be a 2-elements tuple containing the pointer and size of the model data\n    [modelDataOffset, modelDataLength] = modelData;\n  } else if (modelData.buffer === wasm.HEAPU8.buffer) {\n    // if model data uses the same buffer as the WASM heap, we don't need to copy it.\n    [modelDataOffset, modelDataLength] = [modelData.byteOffset, modelData.byteLength];\n  } else {\n    // otherwise, copy the model data to the WASM heap.\n    [modelDataOffset, modelDataLength] = copyFromExternalBuffer(modelData);\n  }\n\n  let sessionHandle = 0;\n  let sessionOptionsHandle = 0;\n  let ioBindingHandle = 0;\n  let allocs: number[] = [];\n  const inputNamesUTF8Encoded = [];\n  const outputNamesUTF8Encoded = [];\n\n  try {\n    [sessionOptionsHandle, allocs] = await setSessionOptions(options);\n\n    if (options?.externalData && wasm.mountExternalData) {\n      const loadingPromises = [];\n      for (const file of options.externalData) {\n        const path = typeof file === 'string' ? file : file.path;\n        loadingPromises.push(\n          loadFile(typeof file === 'string' ? file : file.data).then((data) => {\n            wasm.mountExternalData(path, data);\n          }),\n        );\n      }\n\n      // wait for all external data files to be loaded\n      await Promise.all(loadingPromises);\n    }\n\n    for (const provider of options?.executionProviders ?? []) {\n      const providerName = typeof provider === 'string' ? provider : provider.name;\n      if (providerName === 'webnn') {\n        wasm.shouldTransferToMLTensor = false;\n        if (typeof provider !== 'string') {\n          const webnnOptions = provider as InferenceSession.WebNNExecutionProviderOption;\n          const context = (webnnOptions as InferenceSession.WebNNOptionsWithMLContext)?.context;\n          const gpuDevice = (webnnOptions as InferenceSession.WebNNOptionsWebGpu)?.gpuDevice;\n          const deviceType = (webnnOptions as InferenceSession.WebNNContextOptions)?.deviceType;\n          const powerPreference = (webnnOptions as InferenceSession.WebNNContextOptions)?.powerPreference;\n          if (context) {\n            wasm.currentContext = context as MLContext;\n          } else if (gpuDevice) {\n            wasm.currentContext = await wasm.webnnCreateMLContext!(gpuDevice);\n          } else {\n            wasm.currentContext = await wasm.webnnCreateMLContext!({ deviceType, powerPreference });\n          }\n        } else {\n          wasm.currentContext = await wasm.webnnCreateMLContext!();\n        }\n        break;\n      }\n    }\n\n    sessionHandle = await wasm._OrtCreateSession(modelDataOffset, modelDataLength, sessionOptionsHandle);\n    wasm.webgpuOnCreateSession?.(sessionHandle);\n    if (sessionHandle === 0) {\n      checkLastError(\"Can't create a session.\");\n    }\n\n    wasm.jsepOnCreateSession?.();\n\n    // clear current MLContext after session creation\n    if (wasm.currentContext) {\n      wasm.webnnRegisterMLContext!(sessionHandle, wasm.currentContext);\n      wasm.currentContext = undefined;\n      wasm.shouldTransferToMLTensor = true;\n    }\n\n    const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n    const enableGraphCapture = !!options?.enableGraphCapture;\n\n    const inputNames = [];\n    const outputNames = [];\n    const inputMetadata: InferenceSession.ValueMetadata[] = [];\n    const outputMetadata: InferenceSession.ValueMetadata[] = [];\n    const outputPreferredLocations: SupportedTensorDataLocationForInputOutput[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const [nameOffset, elementType, shape] = getSessionInputOutputMetadata(sessionHandle, i);\n      if (nameOffset === 0) {\n        checkLastError(\"Can't get an input name.\");\n      }\n      inputNamesUTF8Encoded.push(nameOffset);\n      const name = wasm.UTF8ToString(nameOffset);\n      inputNames.push(name);\n      inputMetadata.push(\n        elementType === 0\n          ? { name, isTensor: false }\n          : { name, isTensor: true, type: tensorDataTypeEnumToString(elementType), shape: shape! },\n      );\n    }\n    for (let i = 0; i < outputCount; i++) {\n      const [nameOffset, elementType, shape] = getSessionInputOutputMetadata(sessionHandle, i + inputCount);\n      if (nameOffset === 0) {\n        checkLastError(\"Can't get an output name.\");\n      }\n      outputNamesUTF8Encoded.push(nameOffset);\n      const nameString = wasm.UTF8ToString(nameOffset);\n      outputNames.push(nameString);\n      outputMetadata.push(\n        elementType === 0\n          ? { name: nameString, isTensor: false }\n          : { name: nameString, isTensor: true, type: tensorDataTypeEnumToString(elementType), shape: shape! },\n      );\n\n      if (!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) {\n        if (enableGraphCapture && options?.preferredOutputLocation === undefined) {\n          outputPreferredLocations.push('gpu-buffer');\n          continue;\n        }\n        const location =\n          typeof options?.preferredOutputLocation === 'string'\n            ? options.preferredOutputLocation\n            : (options?.preferredOutputLocation?.[nameString] ?? 'cpu');\n        const isGraphOutput = wasm.webnnIsGraphOutput;\n        if (location === 'cpu' && isGraphOutput && isGraphOutput(sessionHandle, nameString)) {\n          outputPreferredLocations.push('ml-tensor-cpu-output');\n          continue;\n        }\n        if (location !== 'cpu' && location !== 'cpu-pinned' && location !== 'gpu-buffer' && location !== 'ml-tensor') {\n          throw new Error(`Not supported preferred output location: ${location}.`);\n        }\n        if (enableGraphCapture && location !== 'gpu-buffer') {\n          throw new Error(\n            `Not supported preferred output location: ${location}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`,\n          );\n        }\n        outputPreferredLocations.push(location);\n      }\n    }\n\n    // use IO binding only when at least one output is preferred to be on GPU.\n    let bindingState: IOBindingState | null = null;\n    if (\n      (!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) &&\n      outputPreferredLocations.some((l) => l === 'gpu-buffer' || l === 'ml-tensor' || l === 'ml-tensor-cpu-output')\n    ) {\n      ioBindingHandle = wasm._OrtCreateBinding(sessionHandle);\n      if (ioBindingHandle === 0) {\n        checkLastError(\"Can't create IO binding.\");\n      }\n\n      bindingState = {\n        handle: ioBindingHandle,\n        outputPreferredLocations,\n        outputPreferredLocationsEncoded: outputPreferredLocations\n          // 'ml-tensor-cpu-output' is treated as 'ml-tensor' for the purpose of IO binding.\n          .map((l) => (l === 'ml-tensor-cpu-output' ? 'ml-tensor' : l))\n          .map((l) => dataLocationStringToEnum(l)),\n      };\n    }\n\n    activeSessions.set(sessionHandle, [\n      sessionHandle,\n      inputNamesUTF8Encoded,\n      outputNamesUTF8Encoded,\n      bindingState,\n      enableGraphCapture,\n      false,\n    ]);\n    return [sessionHandle, inputNames, outputNames, inputMetadata, outputMetadata];\n  } catch (e) {\n    inputNamesUTF8Encoded.forEach((buf) => wasm._OrtFree(buf));\n    outputNamesUTF8Encoded.forEach((buf) => wasm._OrtFree(buf));\n\n    if (ioBindingHandle !== 0) {\n      if (wasm._OrtReleaseBinding(ioBindingHandle) !== 0) {\n        checkLastError(\"Can't release IO binding.\");\n      }\n    }\n\n    if (sessionHandle !== 0) {\n      if (wasm._OrtReleaseSession(sessionHandle) !== 0) {\n        checkLastError(\"Can't release session.\");\n      }\n    }\n    throw e;\n  } finally {\n    wasm._free(modelDataOffset);\n    if (sessionOptionsHandle !== 0) {\n      if (wasm._OrtReleaseSessionOptions(sessionOptionsHandle) !== 0) {\n        checkLastError(\"Can't release session options.\");\n      }\n    }\n    allocs.forEach((alloc) => wasm._free(alloc));\n\n    // unmount external data if necessary\n    wasm.unmountExternalData?.();\n  }\n};\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded, ioBindingState, enableGraphCapture] = session;\n\n  if (ioBindingState) {\n    if (enableGraphCapture) {\n      if (wasm._OrtClearBoundOutputs(ioBindingState.handle) !== 0) {\n        checkLastError(\"Can't clear bound outputs.\");\n      }\n    }\n    if (wasm._OrtReleaseBinding(ioBindingState.handle) !== 0) {\n      checkLastError(\"Can't release IO binding.\");\n    }\n  }\n\n  wasm.jsepOnReleaseSession?.(sessionId);\n  wasm.webnnOnReleaseSession?.(sessionId);\n  wasm.webgpuOnReleaseSession?.(sessionId);\n\n  inputNamesUTF8Encoded.forEach((buf) => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach((buf) => wasm._OrtFree(buf));\n  if (wasm._OrtReleaseSession(sessionHandle) !== 0) {\n    checkLastError(\"Can't release session.\");\n  }\n  activeSessions.delete(sessionId);\n};\n\nexport const prepareInputOutputTensor = async (\n  tensor: TensorMetadata | null,\n  tensorHandles: number[],\n  allocs: number[],\n  sessionId: number,\n  tensorNameUTF8Encoded: number,\n  index: number,\n  enableGraphCapture = false,\n): Promise<void> => {\n  if (!tensor) {\n    tensorHandles.push(0);\n    return;\n  }\n\n  const wasm = getInstance();\n  const ptrSize = wasm.PTR_SIZE;\n\n  const dataType = tensor[0];\n  const dims = tensor[1];\n  const location = tensor[3];\n  let actualLocation = location;\n\n  let rawData: number;\n  let dataByteLength: number;\n\n  if (dataType === 'string' && (location === 'gpu-buffer' || location === 'ml-tensor')) {\n    throw new Error('String tensor is not supported on GPU.');\n  }\n\n  if (enableGraphCapture && location !== 'gpu-buffer') {\n    throw new Error(\n      `External buffer must be provided for input/output index ${index} when enableGraphCapture is true.`,\n    );\n  }\n\n  if (location === 'gpu-buffer') {\n    const gpuBuffer = tensor[2].gpuBuffer;\n    dataByteLength = calculateTensorSizeInBytes(tensorDataTypeStringToEnum(dataType), dims)!;\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU) {\n      const registerBuffer = wasm.webgpuRegisterBuffer;\n      if (!registerBuffer) {\n        throw new Error('Tensor location \"gpu-buffer\" is not supported without using WebGPU.');\n      }\n\n      rawData = registerBuffer(gpuBuffer, sessionId);\n    } else {\n      const registerBuffer = wasm.jsepRegisterBuffer;\n      if (!registerBuffer) {\n        throw new Error('Tensor location \"gpu-buffer\" is not supported without using WebGPU.');\n      }\n      rawData = registerBuffer(sessionId, index, gpuBuffer, dataByteLength);\n    }\n  } else if (location === 'ml-tensor') {\n    const mlTensor = tensor[2].mlTensor as MLTensor;\n    dataByteLength = calculateTensorSizeInBytes(tensorDataTypeStringToEnum(dataType), dims)!;\n\n    const registerMLTensor = wasm.webnnRegisterMLTensor;\n    if (!registerMLTensor) {\n      throw new Error('Tensor location \"ml-tensor\" is not supported without using WebNN.');\n    }\n    rawData = registerMLTensor(sessionId, mlTensor, tensorDataTypeStringToEnum(dataType), dims);\n  } else {\n    const data = tensor[2];\n\n    if (Array.isArray(data)) {\n      // string tensor\n      dataByteLength = ptrSize * data.length;\n      rawData = wasm._malloc(dataByteLength);\n      allocs.push(rawData);\n      for (let i = 0; i < data.length; i++) {\n        if (typeof data[i] !== 'string') {\n          throw new TypeError(`tensor data at index ${i} is not a string`);\n        }\n        wasm.setValue(rawData + i * ptrSize, allocWasmString(data[i], allocs), '*');\n      }\n    } else {\n      const isGraphInput = wasm.webnnIsGraphInput;\n      const isGraphOutput = wasm.webnnIsGraphOutput;\n      if (dataType !== 'string' && isGraphInput && isGraphOutput) {\n        const tensorName = wasm.UTF8ToString(tensorNameUTF8Encoded);\n        // Promote the tensor to 'ml-tensor' if it is a graph input.\n        if (isGraphInput(sessionId, tensorName) || isGraphOutput(sessionId, tensorName)) {\n          const dataTypeEnum = tensorDataTypeStringToEnum(dataType);\n          dataByteLength = calculateTensorSizeInBytes(dataTypeEnum, dims)!;\n          actualLocation = 'ml-tensor';\n          const createTemporaryTensor = wasm.webnnCreateTemporaryTensor;\n          const uploadTensor = wasm.webnnUploadTensor;\n          if (!createTemporaryTensor || !uploadTensor) {\n            throw new Error('Tensor location \"ml-tensor\" is not supported without using WebNN.');\n          }\n          const tensorId = await createTemporaryTensor(sessionId, dataTypeEnum, dims as number[]);\n          uploadTensor(tensorId, new Uint8Array(data.buffer, data.byteOffset, data.byteLength));\n          rawData = tensorId;\n        } else {\n          dataByteLength = data.byteLength;\n          rawData = wasm._malloc(dataByteLength);\n          allocs.push(rawData);\n          wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        rawData = wasm._malloc(dataByteLength);\n        allocs.push(rawData);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), rawData);\n      }\n    }\n  }\n\n  const stack = wasm.stackSave();\n  const dimsOffset = wasm.stackAlloc(4 * dims.length);\n  try {\n    dims.forEach((d, index) => wasm.setValue(dimsOffset + index * ptrSize, d, ptrSize === 4 ? 'i32' : 'i64'));\n    const tensor = wasm._OrtCreateTensor(\n      tensorDataTypeStringToEnum(dataType),\n      rawData,\n      dataByteLength,\n      dimsOffset,\n      dims.length,\n      dataLocationStringToEnum(actualLocation),\n    );\n    if (tensor === 0) {\n      checkLastError(`Can't create tensor for input/output. session=${sessionId}, index=${index}.`);\n    }\n    tensorHandles.push(tensor);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * perform inference run\n */\nexport const run = async (\n  sessionId: number,\n  inputIndices: number[],\n  inputTensors: TensorMetadata[],\n  outputIndices: number[],\n  outputTensors: Array<TensorMetadata | null>,\n  options: InferenceSession.RunOptions,\n): Promise<TensorMetadata[]> => {\n  const wasm = getInstance();\n  const ptrSize = wasm.PTR_SIZE;\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n  const ioBindingState = session[3];\n  const enableGraphCapture = session[4];\n  const inputOutputBound = session[5];\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputTensorHandles: number[] = [];\n  const outputTensorHandles: number[] = [];\n  const inputOutputAllocs: number[] = [];\n\n  const beforeRunStack = wasm.stackSave();\n  const inputValuesOffset = wasm.stackAlloc(inputCount * ptrSize);\n  const inputNamesOffset = wasm.stackAlloc(inputCount * ptrSize);\n  const outputValuesOffset = wasm.stackAlloc(outputCount * ptrSize);\n  const outputNamesOffset = wasm.stackAlloc(outputCount * ptrSize);\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    TRACE_EVENT_BEGIN('wasm prepareInputOutputTensor');\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      await prepareInputOutputTensor(\n        inputTensors[i],\n        inputTensorHandles,\n        inputOutputAllocs,\n        sessionId,\n        inputNamesUTF8Encoded[inputIndices[i]],\n        inputIndices[i],\n        enableGraphCapture,\n      );\n    }\n\n    // create output tensors\n    for (let i = 0; i < outputCount; i++) {\n      await prepareInputOutputTensor(\n        outputTensors[i],\n        outputTensorHandles,\n        inputOutputAllocs,\n        sessionId,\n        outputNamesUTF8Encoded[outputIndices[i]],\n        inputCount + outputIndices[i],\n        enableGraphCapture,\n      );\n    }\n    TRACE_EVENT_END('wasm prepareInputOutputTensor');\n\n    for (let i = 0; i < inputCount; i++) {\n      wasm.setValue(inputValuesOffset + i * ptrSize, inputTensorHandles[i], '*');\n      wasm.setValue(inputNamesOffset + i * ptrSize, inputNamesUTF8Encoded[inputIndices[i]], '*');\n    }\n    for (let i = 0; i < outputCount; i++) {\n      wasm.setValue(outputValuesOffset + i * ptrSize, outputTensorHandles[i], '*');\n      wasm.setValue(outputNamesOffset + i * ptrSize, outputNamesUTF8Encoded[outputIndices[i]], '*');\n    }\n\n    if ((!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) && ioBindingState && !inputOutputBound) {\n      const { handle, outputPreferredLocations, outputPreferredLocationsEncoded } = ioBindingState;\n\n      if (inputNamesUTF8Encoded.length !== inputCount) {\n        throw new Error(\n          `input count from feeds (${inputCount}) is expected to be always equal to model's input count (${inputNamesUTF8Encoded.length}).`,\n        );\n      }\n\n      TRACE_EVENT_BEGIN('wasm bindInputsOutputs');\n      // process inputs\n      for (let i = 0; i < inputCount; i++) {\n        const index = inputIndices[i];\n        const errorCode = await wasm._OrtBindInput(handle, inputNamesUTF8Encoded[index], inputTensorHandles[i]);\n        if (errorCode !== 0) {\n          checkLastError(`Can't bind input[${i}] for session=${sessionId}.`);\n        }\n      }\n\n      // process pre-allocated outputs\n      for (let i = 0; i < outputCount; i++) {\n        const index = outputIndices[i];\n        const location = outputTensors[i]?.[3]; // undefined means output is not pre-allocated.\n\n        if (location) {\n          // output is pre-allocated. bind the tensor.\n          const errorCode = wasm._OrtBindOutput(handle, outputNamesUTF8Encoded[index], outputTensorHandles[i], 0);\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind pre-allocated output[${i}] for session=${sessionId}.`);\n          }\n        } else {\n          // output is not pre-allocated. reset preferred location.\n          const errorCode = wasm._OrtBindOutput(\n            handle,\n            outputNamesUTF8Encoded[index],\n            0,\n            outputPreferredLocationsEncoded[index],\n          );\n          if (errorCode !== 0) {\n            checkLastError(`Can't bind output[${i}] to ${outputPreferredLocations[i]} for session=${sessionId}.`);\n          }\n        }\n      }\n      TRACE_EVENT_END('wasm bindInputsOutputs');\n      activeSessions.set(sessionId, [\n        sessionHandle,\n        inputNamesUTF8Encoded,\n        outputNamesUTF8Encoded,\n        ioBindingState,\n        enableGraphCapture,\n        true,\n      ]);\n    }\n\n    wasm.jsepOnRunStart?.(sessionHandle);\n    wasm.webnnOnRunStart?.(sessionHandle);\n\n    let errorCode: number;\n    if ((!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) && ioBindingState) {\n      errorCode = await wasm._OrtRunWithBinding(\n        sessionHandle,\n        ioBindingState.handle,\n        outputCount,\n        outputValuesOffset,\n        runOptionsHandle,\n      );\n    } else {\n      errorCode = await wasm._OrtRun(\n        sessionHandle,\n        inputNamesOffset,\n        inputValuesOffset,\n        inputCount,\n        outputNamesOffset,\n        outputCount,\n        outputValuesOffset,\n        runOptionsHandle,\n      );\n    }\n\n    if (errorCode !== 0) {\n      checkLastError('failed to call OrtRun().');\n    }\n\n    const output: TensorMetadata[] = [];\n    const outputPromises: Array<Promise<[number, Tensor.DataType]>> = [];\n\n    TRACE_EVENT_BEGIN('wasm ProcessOutputTensor');\n    for (let i = 0; i < outputCount; i++) {\n      const tensor = Number(wasm.getValue(outputValuesOffset + i * ptrSize, '*'));\n      if (tensor === outputTensorHandles[i]) {\n        // output tensor is pre-allocated. no need to copy data.\n        output.push(outputTensors[i]!);\n        continue;\n      }\n\n      const beforeGetTensorDataStack = wasm.stackSave();\n      // stack allocate 4 pointer value\n      const tensorDataOffset = wasm.stackAlloc(4 * ptrSize);\n\n      let keepOutputTensor = false;\n      let type: Tensor.Type | undefined,\n        dataOffset = 0;\n      try {\n        const errorCode = wasm._OrtGetTensorData(\n          tensor,\n          tensorDataOffset,\n          tensorDataOffset + ptrSize,\n          tensorDataOffset + 2 * ptrSize,\n\n          tensorDataOffset + 3 * ptrSize,\n        );\n        if (errorCode !== 0) {\n          checkLastError(`Can't access output tensor data on index ${i}.`);\n        }\n        const valueType = ptrSize === 4 ? 'i32' : 'i64';\n        const dataType = Number(wasm.getValue(tensorDataOffset, valueType));\n        dataOffset = wasm.getValue(tensorDataOffset + ptrSize, '*');\n        const dimsOffset = wasm.getValue(tensorDataOffset + ptrSize * 2, '*');\n        const dimsLength = Number(wasm.getValue(tensorDataOffset + ptrSize * 3, valueType));\n        const dims = [];\n        for (let i = 0; i < dimsLength; i++) {\n          dims.push(Number(wasm.getValue(dimsOffset + i * ptrSize, valueType)));\n        }\n        if (wasm._OrtFree(dimsOffset) !== 0) {\n          checkLastError(\"Can't free memory for tensor dims.\");\n        }\n        const size = dims.reduce((a, b) => a * b, 1);\n        type = tensorDataTypeEnumToString(dataType);\n\n        const preferredLocation = ioBindingState?.outputPreferredLocations[outputIndices[i]];\n\n        if (type === 'string') {\n          if (preferredLocation === 'gpu-buffer' || preferredLocation === 'ml-tensor') {\n            throw new Error('String tensor is not supported on GPU.');\n          }\n          const stringData: string[] = [];\n          for (let i = 0; i < size; i++) {\n            const offset = wasm.getValue(dataOffset + i * ptrSize, '*');\n            const nextOffset = wasm.getValue(dataOffset + (i + 1) * ptrSize, '*');\n            const maxBytesToRead = i === size - 1 ? undefined : nextOffset - offset;\n            stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n          }\n          output.push([type, dims, stringData, 'cpu']);\n        } else {\n          // If a certain output's preferred location is GPU but the tensor is empty, we still need to create a CPU\n          // tensor for it. There is no mapping GPU buffer for an empty tensor.\n          if (preferredLocation === 'gpu-buffer' && size > 0) {\n            const getBuffer = !BUILD_DEFS.DISABLE_WEBGPU ? wasm.webgpuGetBuffer : wasm.jsepGetBuffer;\n            if (!getBuffer) {\n              throw new Error('preferredLocation \"gpu-buffer\" is not supported without using WebGPU.');\n            }\n            const gpuBuffer = getBuffer(dataOffset);\n            const bufferSize = calculateTensorSizeInBytes(dataType, size);\n            if (bufferSize === undefined || !isGpuBufferSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            if (!BUILD_DEFS.DISABLE_WEBGPU) {\n              wasm.webgpuRegisterBuffer!(gpuBuffer, sessionId, dataOffset);\n              const downloadDataFunction = wasm.webgpuCreateDownloader!(gpuBuffer, bufferSize, sessionId);\n              output.push([\n                type,\n                dims,\n                {\n                  gpuBuffer,\n                  download: async () => {\n                    const arrayBuffer = await downloadDataFunction();\n                    const data = new (tensorTypeToTypedArrayConstructor(type!))(arrayBuffer);\n                    return data as Tensor.DataTypeMap[Tensor.GpuBufferDataTypes];\n                  },\n                  dispose: () => {\n                    if (wasm._OrtReleaseTensor(tensor) !== 0) {\n                      checkLastError(\"Can't release tensor.\");\n                    }\n                  },\n                },\n                'gpu-buffer',\n              ]);\n            } else {\n              output.push([\n                type,\n                dims,\n                {\n                  gpuBuffer,\n                  download: wasm.jsepCreateDownloader!(gpuBuffer, bufferSize, type),\n                  dispose: () => {\n                    if (wasm._OrtReleaseTensor(tensor) !== 0) {\n                      checkLastError(\"Can't release tensor.\");\n                    }\n                  },\n                },\n                'gpu-buffer',\n              ]);\n            }\n          } else if (preferredLocation === 'ml-tensor' && size > 0) {\n            const ensureTensor = wasm.webnnEnsureTensor;\n            const isGraphInputOutputTypeSupported = wasm.webnnIsGraphInputOutputTypeSupported;\n            if (!ensureTensor || !isGraphInputOutputTypeSupported) {\n              throw new Error('preferredLocation \"ml-tensor\" is not supported without using WebNN.');\n            }\n            const tensorSize = calculateTensorSizeInBytes(dataType, size);\n            if (tensorSize === undefined || !isMLTensorSupportedType(type)) {\n              throw new Error(`Unsupported data type: ${type}`);\n            }\n            if (!isGraphInputOutputTypeSupported(sessionId, type, false)) {\n              throw new Error(\n                `preferredLocation \"ml-tensor\" for ${type} output is not supported by current WebNN Context.`,\n              );\n            }\n\n            // If the graph has been partitioned, the output tensor may have not been created. For this reason, we use\n            // ensureTensor to get/create the MLTensor. In which case, we don't need to copy the data if a new tensor\n            // has been created.\n            const mlTensor = await ensureTensor(sessionId, dataOffset, dataType, dims, false);\n\n            // do not release the tensor right now. it will be released when user calls tensor.dispose().\n            keepOutputTensor = true;\n\n            output.push([\n              type,\n              dims,\n              {\n                mlTensor,\n                download: wasm.webnnCreateMLTensorDownloader!(dataOffset, type),\n                dispose: () => {\n                  wasm.webnnReleaseTensorId!(dataOffset);\n                  wasm._OrtReleaseTensor(tensor);\n                },\n              },\n              'ml-tensor',\n            ]);\n          } else if (preferredLocation === 'ml-tensor-cpu-output' && size > 0) {\n            const data = wasm.webnnCreateMLTensorDownloader!(dataOffset, type as Tensor.MLTensorDataTypes)();\n            const index = output.length;\n            // Delay the data download and releasing the tensor until we can wait for all output tensors to be downloaded.\n            keepOutputTensor = true;\n            outputPromises.push(\n              (async () => {\n                const result: [number, Tensor.DataType] = [index, await data];\n                wasm.webnnReleaseTensorId!(dataOffset);\n                wasm._OrtReleaseTensor(tensor);\n                return result;\n              })(),\n            );\n            output.push([type, dims, [], 'cpu']);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength).set(\n              wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength),\n            );\n            output.push([type, dims, data, 'cpu']);\n          }\n        }\n      } finally {\n        wasm.stackRestore(beforeGetTensorDataStack);\n        if (type === 'string' && dataOffset) {\n          wasm._free(dataOffset);\n        }\n        if (!keepOutputTensor) {\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n    }\n\n    if (ioBindingState && !enableGraphCapture) {\n      if (wasm._OrtClearBoundOutputs(ioBindingState.handle) !== 0) {\n        checkLastError(\"Can't clear bound outputs.\");\n      }\n      activeSessions.set(sessionId, [\n        sessionHandle,\n        inputNamesUTF8Encoded,\n        outputNamesUTF8Encoded,\n        ioBindingState,\n        enableGraphCapture,\n        false,\n      ]);\n    }\n    // Wait for all output tensor data to be downloaded.\n    for (const [index, data] of await Promise.all(outputPromises)) {\n      output[index][2] = data;\n    }\n    TRACE_EVENT_END('wasm ProcessOutputTensor');\n    return output;\n  } finally {\n    wasm.webnnOnRunEnd?.(sessionHandle);\n\n    wasm.stackRestore(beforeRunStack);\n\n    if (!BUILD_DEFS.DISABLE_WEBGPU) {\n      inputTensors.forEach((t) => {\n        if (t && t[3] === 'gpu-buffer') {\n          wasm.webgpuUnregisterBuffer!(t[2].gpuBuffer);\n        }\n      });\n      outputTensors.forEach((t) => {\n        if (t && t[3] === 'gpu-buffer') {\n          wasm.webgpuUnregisterBuffer!(t[2].gpuBuffer);\n        }\n      });\n    }\n    inputTensorHandles.forEach((v) => wasm._OrtReleaseTensor(v));\n    outputTensorHandles.forEach((v) => wasm._OrtReleaseTensor(v));\n    inputOutputAllocs.forEach((p) => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach((p) => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError(\"Can't get an profile file name.\");\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensorMetadata[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && 'buffer' in data) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { env, InferenceSession } from 'onnxruntime-common';\n\nimport {\n  OrtWasmMessage,\n  SerializableInternalBuffer,\n  SerializableSessionMetadata,\n  SerializableTensorMetadata,\n  TensorMetadata,\n} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport { initializeWebAssembly } from './wasm-factory';\nimport {\n  importProxyWorker,\n  inferWasmPathPrefixFromScriptSrc,\n  isEsmImportMetaUrlHardcodedAsFileUri,\n} from './wasm-utils-import';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker | undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\nlet temporaryObjectUrl: string | undefined;\n\ntype PromiseCallbacks<T = void> = [resolve: (result: T) => void, reject: (reason: unknown) => void];\nlet initWasmCallbacks: PromiseCallbacks;\nconst queuedCallbacks: Map<OrtWasmMessage['type'], Array<PromiseCallbacks<unknown>>> = new Map();\n\nconst enqueueCallbacks = (type: OrtWasmMessage['type'], callbacks: PromiseCallbacks<unknown>): void => {\n  const queue = queuedCallbacks.get(type);\n  if (queue) {\n    queue.push(callbacks);\n  } else {\n    queuedCallbacks.set(type, [callbacks]);\n  }\n};\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      if (temporaryObjectUrl) {\n        URL.revokeObjectURL(temporaryObjectUrl);\n        temporaryObjectUrl = undefined;\n      }\n      break;\n    case 'init-ep':\n    case 'copy-from':\n    case 'create':\n    case 'release':\n    case 'run':\n    case 'end-profiling': {\n      const callbacks = queuedCallbacks.get(ev.data.type)!;\n      if (ev.data.err) {\n        callbacks.shift()![1](ev.data.err);\n      } else {\n        callbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    }\n    default:\n  }\n};\n\nexport const initializeWebAssemblyAndOrtRuntime = async (): Promise<void> => {\n  if (initialized) {\n    return;\n  }\n  if (initializing) {\n    throw new Error(\"multiple calls to 'initWasm()' detected.\");\n  }\n  if (aborted) {\n    throw new Error(\"previous call to 'initWasm()' failed.\");\n  }\n\n  initializing = true;\n\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n\n      void importProxyWorker().then(([objectUrl, worker]) => {\n        try {\n          proxyWorker = worker;\n          proxyWorker.onerror = (ev: ErrorEvent) => reject(ev);\n          proxyWorker.onmessage = onProxyWorkerMessage;\n          initWasmCallbacks = [resolve, reject];\n          const message: OrtWasmMessage = { type: 'init-wasm', in: env };\n\n          // if the proxy worker is loaded from a blob URL, we need to make sure the path information is not lost.\n          //\n          // when `env.wasm.wasmPaths` is not set, we need to pass the path information to the worker.\n          //\n          if (!BUILD_DEFS.ENABLE_BUNDLE_WASM_JS && !message.in!.wasm.wasmPaths && objectUrl) {\n            // for a build not bundled the wasm JS, we need to pass the path prefix to the worker.\n            // the path prefix will be used to resolve the path to both the wasm JS and the wasm file.\n            const inferredWasmPathPrefix = inferWasmPathPrefixFromScriptSrc();\n            if (inferredWasmPathPrefix) {\n              message.in!.wasm.wasmPaths = inferredWasmPathPrefix;\n            }\n          }\n\n          if (\n            BUILD_DEFS.IS_ESM &&\n            BUILD_DEFS.ENABLE_BUNDLE_WASM_JS &&\n            !message.in!.wasm.wasmPaths &&\n            (objectUrl || isEsmImportMetaUrlHardcodedAsFileUri)\n          ) {\n            // for a build bundled the wasm JS, if either of the following conditions is met:\n            // - the proxy worker is loaded from a blob URL\n            // - `import.meta.url` is a file URL, it means it is overwritten by the bundler.\n            //\n            // in either case, the path information is lost, we need to pass the path of the .wasm file to the worker.\n            // we need to use the bundler preferred URL format:\n            // new URL('filename', import.meta.url)\n            // so that the bundler can handle the file using corresponding loaders.\n            message.in!.wasm.wasmPaths = {\n              wasm: !BUILD_DEFS.DISABLE_JSEP\n                ? new URL('ort-wasm-simd-threaded.jsep.wasm', BUILD_DEFS.ESM_IMPORT_META_URL).href\n                : !BUILD_DEFS.DISABLE_WEBGPU\n                  ? new URL('ort-wasm-simd-threaded.asyncify.wasm', BUILD_DEFS.ESM_IMPORT_META_URL).href\n                  : new URL('ort-wasm-simd-threaded.wasm', BUILD_DEFS.ESM_IMPORT_META_URL).href,\n            };\n          }\n          proxyWorker.postMessage(message);\n          temporaryObjectUrl = objectUrl;\n        } catch (e) {\n          reject(e);\n        }\n      }, reject);\n    });\n  } else {\n    try {\n      await initializeWebAssembly(env.wasm);\n      await core.initRuntime(env);\n      initialized = true;\n    } catch (e) {\n      aborted = true;\n      throw e;\n    } finally {\n      initializing = false;\n    }\n  }\n};\n\nexport const initializeOrtEp = async (epName: string): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('init-ep', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'init-ep', in: { epName, env } };\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initEp(env, epName);\n  }\n};\n\nexport const copyFromExternalBuffer = async (buffer: Uint8Array): Promise<SerializableInternalBuffer> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableInternalBuffer>((resolve, reject) => {\n      enqueueCallbacks('copy-from', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'copy-from', in: { buffer } };\n      proxyWorker!.postMessage(message, [buffer.buffer]);\n    });\n  } else {\n    return core.copyFromExternalBuffer(buffer);\n  }\n};\n\nexport const createSession = async (\n  model: SerializableInternalBuffer | Uint8Array,\n  options?: InferenceSession.SessionOptions,\n): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check unsupported options\n    if (options?.preferredOutputLocation) {\n      throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      enqueueCallbacks('create', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'create', in: { model, options: { ...options } } };\n      const transferable: Transferable[] = [];\n      if (model instanceof Uint8Array) {\n        transferable.push(model.buffer);\n      }\n      proxyWorker!.postMessage(message, transferable);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async (sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('release', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'release', in: sessionId };\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async (\n  sessionId: number,\n  inputIndices: number[],\n  inputs: TensorMetadata[],\n  outputIndices: number[],\n  outputs: Array<TensorMetadata | null>,\n  options: InferenceSession.RunOptions,\n): Promise<TensorMetadata[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    // check inputs location\n    if (inputs.some((t) => t[3] !== 'cpu')) {\n      throw new Error('input tensor on GPU is not supported for proxy.');\n    }\n    // check outputs location\n    if (outputs.some((t) => t)) {\n      throw new Error('pre-allocated output tensor is not supported for proxy.');\n    }\n    ensureWorker();\n    return new Promise<SerializableTensorMetadata[]>((resolve, reject) => {\n      enqueueCallbacks('run', [resolve, reject]);\n      const serializableInputs = inputs as SerializableTensorMetadata[]; // every input is on CPU.\n      const message: OrtWasmMessage = {\n        type: 'run',\n        in: { sessionId, inputIndices, inputs: serializableInputs, outputIndices, options },\n      };\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(serializableInputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, outputs, options);\n  }\n};\n\nexport const endProfiling = async (sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      enqueueCallbacks('end-profiling', [resolve, reject]);\n      const message: OrtWasmMessage = { type: 'end-profiling', in: sessionId };\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  InferenceSession,\n  InferenceSessionHandler,\n  SessionHandler,\n  Tensor,\n  TRACE_FUNC_BEGIN,\n  TRACE_FUNC_END,\n} from 'onnxruntime-common';\n\nimport { SerializableInternalBuffer, TensorMetadata } from './proxy-messages';\nimport { copyFromExternalBuffer, createSession, endProfiling, releaseSession, run } from './proxy-wrapper';\nimport { isGpuBufferSupportedType, isMLTensorSupportedType } from './wasm-common';\nimport { isNode } from './wasm-utils-env';\nimport { loadFile } from './wasm-utils-load-file';\n\nexport const encodeTensorMetadata = (tensor: Tensor, getName: () => string): TensorMetadata => {\n  switch (tensor.location) {\n    case 'cpu':\n      return [tensor.type, tensor.dims, tensor.data, 'cpu'];\n    case 'gpu-buffer':\n      return [tensor.type, tensor.dims, { gpuBuffer: tensor.gpuBuffer }, 'gpu-buffer'];\n    case 'ml-tensor':\n      return [tensor.type, tensor.dims, { mlTensor: tensor.mlTensor }, 'ml-tensor'];\n    default:\n      throw new Error(`invalid data location: ${tensor.location} for ${getName()}`);\n  }\n};\n\nexport const decodeTensorMetadata = (tensor: TensorMetadata): Tensor => {\n  switch (tensor[3]) {\n    case 'cpu':\n      return new Tensor(tensor[0], tensor[2], tensor[1]);\n    case 'gpu-buffer': {\n      const dataType = tensor[0];\n      if (!isGpuBufferSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing GPU tensor`);\n      }\n      const { gpuBuffer, download, dispose } = tensor[2];\n      return Tensor.fromGpuBuffer(gpuBuffer, { dataType, dims: tensor[1], download, dispose });\n    }\n    case 'ml-tensor': {\n      const dataType = tensor[0];\n      if (!isMLTensorSupportedType(dataType)) {\n        throw new Error(`not supported data type: ${dataType} for deserializing MLTensor tensor`);\n      }\n      const { mlTensor, download, dispose } = tensor[2];\n      return Tensor.fromMLTensor(mlTensor, { dataType, dims: tensor[1], download, dispose });\n    }\n    default:\n      throw new Error(`invalid data location: ${tensor[3]}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements InferenceSessionHandler {\n  private sessionId: number;\n\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  inputMetadata: readonly InferenceSession.ValueMetadata[];\n  outputMetadata: readonly InferenceSession.ValueMetadata[];\n\n  async fetchModelAndCopyToWasmMemory(path: string): Promise<SerializableInternalBuffer> {\n    // fetch model from url and move to wasm heap.\n    return copyFromExternalBuffer(await loadFile(path));\n  }\n\n  async loadModel(pathOrBuffer: string | Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    TRACE_FUNC_BEGIN();\n    let model: Parameters<typeof createSession>[0];\n\n    if (typeof pathOrBuffer === 'string') {\n      if (isNode) {\n        // node\n        model = await loadFile(pathOrBuffer);\n      } else {\n        // browser\n        // fetch model and copy to wasm heap.\n        model = await this.fetchModelAndCopyToWasmMemory(pathOrBuffer);\n      }\n    } else {\n      model = pathOrBuffer;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames, this.inputMetadata, this.outputMetadata] = await createSession(\n      model,\n      options,\n    );\n    TRACE_FUNC_END();\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(\n    feeds: SessionHandler.FeedsType,\n    fetches: SessionHandler.FetchesType,\n    options: InferenceSession.RunOptions,\n  ): Promise<SessionHandler.ReturnType> {\n    TRACE_FUNC_BEGIN();\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach((kvp) => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputArray: Array<Tensor | null> = [];\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach((kvp) => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputArray.push(tensor);\n      outputIndices.push(index);\n    });\n\n    const inputs = inputArray.map((t, i) =>\n      encodeTensorMetadata(t, () => `input \"${this.inputNames[inputIndices[i]]}\"`),\n    );\n    const outputs = outputArray.map((t, i) =>\n      t ? encodeTensorMetadata(t, () => `output \"${this.outputNames[outputIndices[i]]}\"`) : null,\n    );\n\n    const results = await run(this.sessionId, inputIndices, inputs, outputIndices, outputs, options);\n\n    const resultMap: SessionHandler.ReturnType = {};\n    for (let i = 0; i < results.length; i++) {\n      resultMap[this.outputNames[outputIndices[i]]] = outputArray[i] ?? decodeTensorMetadata(results[i]);\n    }\n    TRACE_FUNC_END();\n    return resultMap;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Backend, env, InferenceSession, InferenceSessionHandler } from 'onnxruntime-common';\n\nimport { initializeOrtEp, initializeWebAssemblyAndOrtRuntime } from './wasm/proxy-wrapper';\nimport { OnnxruntimeWebAssemblySessionHandler } from './wasm/session-handler-inference';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  const simd = env.wasm.simd;\n  if (typeof simd !== 'boolean' && simd !== undefined && simd !== 'fixed' && simd !== 'relaxed') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Property \"env.wasm.simd\" is set to unknown value \"${simd}\". Reset it to \\`false\\` and ignore SIMD feature checking.`,\n    );\n    env.wasm.simd = false;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.trace !== 'boolean') {\n    env.wasm.trace = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    // The following logic only applies when `ort.env.wasm.numThreads` is not set by user. We will always honor user's\n    // setting if it is provided.\n\n    // Browser: when crossOriginIsolated is false, SharedArrayBuffer is not available so WebAssembly threads will not\n    // work. In this case, we will set numThreads to 1.\n    //\n    // There is an exception: when the browser is configured to force-enable SharedArrayBuffer (e.g. Chromuim with\n    // --enable-features=SharedArrayBuffer), it is possible that `self.crossOriginIsolated` is false and\n    // SharedArrayBuffer is available at the same time. This is usually for testing. In this case,  we will still set\n    // numThreads to 1 here. If we want to enable multi-threading in test, we should set `ort.env.wasm.numThreads` to a\n    // value greater than 1.\n    if (typeof self !== 'undefined' && !self.crossOriginIsolated) {\n      env.wasm.numThreads = 1;\n    } else {\n      const numCpuLogicalCores =\n        typeof navigator === 'undefined' ? require('node:os').cpus().length : navigator.hardwareConcurrency;\n      env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n    }\n  }\n};\n\nexport class OnnxruntimeWebAssemblyBackend implements Backend {\n  /**\n   * This function initializes the WebAssembly backend.\n   *\n   * This function will be called only once for each backend name. It will be called the first time when\n   * `ort.InferenceSession.create()` is called with a registered backend name.\n   *\n   * @param backendName - the registered backend name.\n   */\n  async init(backendName: string): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyAndOrtRuntime();\n\n    // performe EP specific initialization\n    await initializeOrtEp(backendName);\n  }\n  createInferenceSessionHandler(\n    path: string,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSessionHandler>;\n  createInferenceSessionHandler(\n    buffer: Uint8Array,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSessionHandler>;\n  async createInferenceSessionHandler(\n    pathOrBuffer: string | Uint8Array,\n    options?: InferenceSession.SessionOptions,\n  ): Promise<InferenceSessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return handler;\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow bundler to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow bundler remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport * as ort from 'onnxruntime-common';\nexport default ort;\n\nimport { registerBackend, env } from 'onnxruntime-common';\nimport { version } from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_JSEP && !BUILD_DEFS.DISABLE_WEBGPU) {\n  throw new Error(\n    'The current build is specified to enable both JSEP and WebGPU EP. This is not a valid configuration. ' +\n      'JSEP and WebGPU EPs cannot be enabled at the same time.',\n  );\n}\n\nif (!BUILD_DEFS.DISABLE_WEBNN && BUILD_DEFS.DISABLE_JSEP && BUILD_DEFS.DISABLE_WEBGPU) {\n  throw new Error(\n    'The current build is specified to enable WebNN EP without JSEP or WebGPU EP. This is not a valid configuration. ' +\n      'WebNN EP requires either JSEP or WebGPU EP to be enabled.',\n  );\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_JSEP || !BUILD_DEFS.DISABLE_WEBGPU) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  if (!BUILD_DEFS.DISABLE_WEBNN) {\n    registerBackend('webnn', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n}\n\nObject.defineProperty(env.versions, 'web', { value: version, enumerable: true });\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.23.0';\n"]}