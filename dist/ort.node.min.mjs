/*!
 * ONNX Runtime Web v1.23.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import{createRequire}from"module";const require=createRequire(import.meta.url);
var pe=Object.defineProperty;var yt=Object.getOwnPropertyDescriptor;var Et=Object.getOwnPropertyNames;var St=Object.prototype.hasOwnProperty;var de=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof require<"u"?require:t)[n]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var M=(e,t)=>()=>(e&&(t=e(e=0)),t);var ht=(e,t)=>{for(var n in t)pe(e,n,{get:t[n],enumerable:!0})},It=(e,t,n,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Et(t))!St.call(e,r)&&r!==n&&pe(e,r,{get:()=>t[r],enumerable:!(o=yt(t,r))||o.enumerable});return e};var Tt=e=>It(pe({},"__esModule",{value:!0}),e);var $,re=M(()=>{"use strict";$=!!(typeof process<"u"&&process.versions&&process.versions.node)});var De,Ot,Lt,j,Ae,ve,Bt,Pt,_t,vt,Ue,xe,me=M(()=>{"use strict";re();De=$||typeof location>"u"?void 0:location.origin,Ot=import.meta.url>"file:"&&import.meta.url<"file;",Lt=()=>{if(!$){if(Ot){let e=URL;return new URL(new e("ort.node.min.mjs",import.meta.url).href,De).href}return import.meta.url}},j=Lt(),Ae=()=>{if(j&&!j.startsWith("blob:"))return j.substring(0,j.lastIndexOf("/")+1)},ve=(e,t)=>{try{let n=t??j;return(n?new URL(e,n):new URL(e)).origin===De}catch{return!1}},Bt=(e,t)=>{let n=t??j;try{return(n?new URL(e,n):new URL(e)).href}catch{return}},Pt=(e,t)=>`${t??"./"}${e}`,_t=async e=>{let n=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(n)},vt=async e=>(await import(/*webpackIgnore:true*/e)).default,Ue=void 0,xe=async(e,t,n,o)=>{let r=Ue&&!(e||t);if(r)if(j)r=ve(j);else if(o&&!n)r=!0;else throw new Error("cannot determine the script source URL.");if(r)return[void 0,Ue];{let a="ort-wasm-simd-threaded.mjs",s=e??Bt(a,t),i=!$&&n&&s&&!ve(s,t),u=i?await _t(s):s??Pt(a,t);return[i?u:void 0,await vt(u)]}}});var be,we,ne,Me,Ut,Dt,At,Ce,y,V=M(()=>{"use strict";me();we=!1,ne=!1,Me=!1,Ut=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Dt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},At=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},Ce=async e=>{if(we)return Promise.resolve();if(ne)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Me)throw new Error("previous call to 'initializeWebAssembly()' failed.");ne=!0;let t=e.initTimeout,n=e.numThreads;if(e.simd!==!1){if(e.simd==="relaxed"){if(!At())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!Dt())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let o=Ut();n>1&&!o&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+n+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=n=1);let r=e.wasmPaths,a=typeof r=="string"?r:void 0,s=r?.mjs,i=s?.href??s,u=r?.wasm,l=u?.href??u,f=e.wasmBinary,[d,c]=await xe(i,a,n>1,!!f||!!l),p=!1,S=[];if(t>0&&S.push(new Promise(I=>{setTimeout(()=>{p=!0,I()},t)})),S.push(new Promise((I,v)=>{let b={numThreads:n};if(f)b.wasmBinary=f;else if(l||a)b.locateFile=w=>l??a+w;else if(i&&i.indexOf("blob:")!==0)b.locateFile=w=>new URL(w,i).href;else if(d){let w=Ae();w&&(b.locateFile=C=>w+C)}c(b).then(w=>{ne=!1,we=!0,be=w,I(),d&&URL.revokeObjectURL(d)},w=>{ne=!1,Me=!0,v(w)})})),await Promise.race(S),p)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},y=()=>{if(we&&be)return be;throw new Error("WebAssembly is not initialized yet.")}});var A,K,g,oe=M(()=>{"use strict";V();A=(e,t)=>{let n=y(),o=n.lengthBytesUTF8(e)+1,r=n._malloc(o);return n.stringToUTF8(e,r,o),t.push(r),r},K=(e,t,n,o)=>{if(typeof e=="object"&&e!==null){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach(([r,a])=>{let s=t?t+r:r;if(typeof a=="object")K(a,s+".",n,o);else if(typeof a=="string"||typeof a=="number")o(s,a.toString());else if(typeof a=="boolean")o(s,a?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof a}`)})},g=e=>{let t=y(),n=t.stackSave();try{let o=t.PTR_SIZE,r=t.stackAlloc(2*o);t._OrtGetLastError(r,r+o);let a=Number(t.getValue(r,o===4?"i32":"i64")),s=t.getValue(r+o,"*"),i=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${a}, ERROR_MESSAGE: ${i}`)}finally{t.stackRestore(n)}}});var We,ke=M(()=>{"use strict";V();oe();We=e=>{let t=y(),n=0,o=[],r=e||{};try{if(e?.logSeverityLevel===void 0)r.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log severity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)r.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(r.terminate=!1);let a=0;return e?.tag!==void 0&&(a=A(e.tag,o)),n=t._OrtCreateRunOptions(r.logSeverityLevel,r.logVerbosityLevel,!!r.terminate,a),n===0&&g("Can't create run options."),e?.extra!==void 0&&K(e.extra,"",new WeakSet,(s,i)=>{let u=A(s,o),l=A(i,o);t._OrtAddRunConfigEntry(n,u,l)!==0&&g(`Can't set a run config entry: ${s} - ${i}.`)}),[n,o]}catch(a){throw n!==0&&t._OrtReleaseRunOptions(n),o.forEach(s=>t._free(s)),a}}});var xt,Mt,Ct,se,Wt,Fe,Re=M(()=>{"use strict";V();oe();xt=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"layout":return 3;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Mt=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Ct=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(e.enableMemPattern=!1)},se=(e,t,n,o)=>{let r=A(t,o),a=A(n,o);y()._OrtAddSessionConfigEntry(e,r,a)!==0&&g(`Can't set a session config entry: ${t} - ${n}.`)},Wt=async(e,t,n)=>{for(let o of t){let r=typeof o=="string"?o:o.name,a=[];switch(r){case"webnn":if(r="WEBNN",typeof o!="string"){let d=o?.deviceType;d&&se(e,"deviceType",d,n)}break;case"webgpu":if(r="JS",typeof o!="string"){let f=o;if(f?.preferredLayout){if(f.preferredLayout!=="NCHW"&&f.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${f.preferredLayout}`);se(e,"preferredLayout",f.preferredLayout,n)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${r}`)}let s=A(r,n),i=a.length,u=0,l=0;if(i>0){u=y()._malloc(i*y().PTR_SIZE),n.push(u),l=y()._malloc(i*y().PTR_SIZE),n.push(l);for(let f=0;f<i;f++)y().setValue(u+f*y().PTR_SIZE,a[f][0],"*"),y().setValue(l+f*y().PTR_SIZE,a[f][1],"*")}await y()._OrtAppendExecutionProvider(e,s,u,l,i)!==0&&g(`Can't append execution provider: ${r}.`)}},Fe=async e=>{let t=y(),n=0,o=[],r=e||{};Ct(r);try{let a=xt(r.graphOptimizationLevel??"all"),s=Mt(r.executionMode??"sequential"),i=typeof r.logId=="string"?A(r.logId,o):0,u=r.logSeverityLevel??2;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log severity level is not valid: ${u}`);let l=r.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let f=typeof r.optimizedModelFilePath=="string"?A(r.optimizedModelFilePath,o):0;if(n=t._OrtCreateSessionOptions(a,!!r.enableCpuMemArena,!!r.enableMemPattern,s,!!r.enableProfiling,0,i,u,l,f),n===0&&g("Can't create session options."),r.executionProviders&&await Wt(n,r.executionProviders,o),r.enableGraphCapture!==void 0){if(typeof r.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${r.enableGraphCapture}`);se(n,"enableGraphCapture",r.enableGraphCapture.toString(),o)}if(r.freeDimensionOverrides)for(let[d,c]of Object.entries(r.freeDimensionOverrides)){if(typeof d!="string")throw new Error(`free dimension override name must be a string: ${d}`);if(typeof c!="number"||!Number.isInteger(c)||c<0)throw new Error(`free dimension override value must be a non-negative integer: ${c}`);let p=A(d,o);t._OrtAddFreeDimensionOverride(n,p,c)!==0&&g(`Can't set a free dimension override: ${d} - ${c}.`)}return r.extra!==void 0&&K(r.extra,"",new WeakSet,(d,c)=>{se(n,d,c,o)}),[n,o]}catch(a){throw n!==0&&t._OrtReleaseSessionOptions(n)!==0&&g("Can't release session options."),o.forEach(s=>t._free(s)),a}}});var q,ae,J,Ne,Ge,ie,ue,$e,ge=M(()=>{"use strict";q=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},ae=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},J=(e,t)=>{let n=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],o=typeof t=="number"?t:t.reduce((r,a)=>r*a,1);return n>0?Math.ceil(o*n):void 0},Ne=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Ge=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},ie=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",ue=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",$e=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}});var Q,ye=M(()=>{"use strict";re();Q=async e=>{if(typeof e=="string")if($)try{let{readFile:t}=de("node:fs/promises");return new Uint8Array(await t(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let{createReadStream:n}=de("node:fs"),o=n(e),r=[];for await(let a of o)r.push(a);return new Uint8Array(Buffer.concat(r))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let n=t.headers.get("Content-Length"),o=n?parseInt(n,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let r=t.body.getReader(),a;try{a=new ArrayBuffer(o)}catch(i){if(i instanceof RangeError){let u=Math.ceil(o/65536);a=new WebAssembly.Memory({initial:u,maximum:u}).buffer}else throw i}let s=0;for(;;){let{done:i,value:u}=await r.read();if(i)break;let l=u.byteLength;new Uint8Array(a,s,l).set(u),s+=l}return new Uint8Array(a,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}});import{TRACE_EVENT_BEGIN as je,TRACE_EVENT_END as ze}from"onnxruntime-common";var kt,qe,Je,Y,Ft,He,Ee,Ye,Ze,Ve,Xe,Ke,Qe=M(()=>{"use strict";ke();Re();ge();V();oe();ye();kt=(e,t)=>{y()._OrtInit(e,t)!==0&&g("Can't initialize onnxruntime.")},qe=async e=>{kt(e.wasm.numThreads,Ge(e.logLevel))},Je=async(e,t)=>{y().asyncInit?.();let n=e.webgpu.adapter;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let o=e.webgpu.powerPreference;if(o!==void 0&&o!=="low-power"&&o!=="high-performance")throw new Error(`Invalid powerPreference setting: "${o}"`);let r=e.webgpu.forceFallbackAdapter;if(r!==void 0&&typeof r!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${r}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:o,forceFallbackAdapter:r}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}}if(t==="webnn"&&(typeof navigator>"u"||!navigator.ml))throw new Error("WebNN is not supported in current environment")},Y=new Map,Ft=e=>{let t=y(),n=t.stackSave();try{let o=t.PTR_SIZE,r=t.stackAlloc(2*o);t._OrtGetInputOutputCount(e,r,r+o)!==0&&g("Can't get session input/output count.");let s=o===4?"i32":"i64";return[Number(t.getValue(r,s)),Number(t.getValue(r+o,s))]}finally{t.stackRestore(n)}},He=(e,t)=>{let n=y(),o=n.stackSave(),r=0;try{let a=n.PTR_SIZE,s=n.stackAlloc(2*a);n._OrtGetInputOutputMetadata(e,t,s,s+a)!==0&&g("Can't get session input/output metadata.");let u=Number(n.getValue(s,"*"));r=Number(n.getValue(s+a,"*"));let l=n.HEAP32[r/4];if(l===0)return[u,0];let f=n.HEAPU32[r/4+1],d=[];for(let c=0;c<f;c++){let p=Number(n.getValue(r+8+c*a,"*"));d.push(p!==0?n.UTF8ToString(p):Number(n.getValue(r+8+(c+f)*a,"*")))}return[u,l,d]}finally{n.stackRestore(o),r!==0&&n._OrtFree(r)}},Ee=e=>{let t=y(),n=t._malloc(e.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},Ye=async(e,t)=>{let n,o,r=y();Array.isArray(e)?[n,o]=e:e.buffer===r.HEAPU8.buffer?[n,o]=[e.byteOffset,e.byteLength]:[n,o]=Ee(e);let a=0,s=0,i=0,u=[],l=[],f=[];try{if([s,u]=await Fe(t),t?.externalData&&r.mountExternalData){let E=[];for(let h of t.externalData){let B=typeof h=="string"?h:h.path;E.push(Q(typeof h=="string"?h:h.data).then(U=>{r.mountExternalData(B,U)}))}await Promise.all(E)}for(let E of t?.executionProviders??[])if((typeof E=="string"?E:E.name)==="webnn"){if(r.shouldTransferToMLTensor=!1,typeof E!="string"){let B=E,U=B?.context,P=B?.gpuDevice,z=B?.deviceType,Z=B?.powerPreference;U?r.currentContext=U:P?r.currentContext=await r.webnnCreateMLContext(P):r.currentContext=await r.webnnCreateMLContext({deviceType:z,powerPreference:Z})}else r.currentContext=await r.webnnCreateMLContext();break}a=await r._OrtCreateSession(n,o,s),r.webgpuOnCreateSession?.(a),a===0&&g("Can't create a session."),r.jsepOnCreateSession?.(),r.currentContext&&(r.webnnRegisterMLContext(a,r.currentContext),r.currentContext=void 0,r.shouldTransferToMLTensor=!0);let[d,c]=Ft(a),p=!!t?.enableGraphCapture,S=[],I=[],v=[],b=[],w=[];for(let E=0;E<d;E++){let[h,B,U]=He(a,E);h===0&&g("Can't get an input name."),l.push(h);let P=r.UTF8ToString(h);S.push(P),v.push(B===0?{name:P,isTensor:!1}:{name:P,isTensor:!0,type:ae(B),shape:U})}for(let E=0;E<c;E++){let[h,B,U]=He(a,E+d);h===0&&g("Can't get an output name."),f.push(h);let P=r.UTF8ToString(h);I.push(P),b.push(B===0?{name:P,isTensor:!1}:{name:P,isTensor:!0,type:ae(B),shape:U})}return Y.set(a,[a,l,f,null,p,!1]),[a,S,I,v,b]}catch(d){throw l.forEach(c=>r._OrtFree(c)),f.forEach(c=>r._OrtFree(c)),i!==0&&r._OrtReleaseBinding(i)!==0&&g("Can't release IO binding."),a!==0&&r._OrtReleaseSession(a)!==0&&g("Can't release session."),d}finally{r._free(n),s!==0&&r._OrtReleaseSessionOptions(s)!==0&&g("Can't release session options."),u.forEach(d=>r._free(d)),r.unmountExternalData?.()}},Ze=e=>{let t=y(),n=Y.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,r,a,s,i]=n;s&&(i&&t._OrtClearBoundOutputs(s.handle)!==0&&g("Can't clear bound outputs."),t._OrtReleaseBinding(s.handle)!==0&&g("Can't release IO binding.")),t.jsepOnReleaseSession?.(e),t.webnnOnReleaseSession?.(e),t.webgpuOnReleaseSession?.(e),r.forEach(u=>t._OrtFree(u)),a.forEach(u=>t._OrtFree(u)),t._OrtReleaseSession(o)!==0&&g("Can't release session."),Y.delete(e)},Ve=async(e,t,n,o,r,a,s=!1)=>{if(!e){t.push(0);return}let i=y(),u=i.PTR_SIZE,l=e[0],f=e[1],d=e[3],c=d,p,S;if(l==="string"&&(d==="gpu-buffer"||d==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(s&&d!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${a} when enableGraphCapture is true.`);if(d==="gpu-buffer"){let b=e[2].gpuBuffer;S=J(q(l),f);{let w=i.jsepRegisterBuffer;if(!w)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');p=w(o,a,b,S)}}else if(d==="ml-tensor"){let b=e[2].mlTensor;S=J(q(l),f);let w=i.webnnRegisterMLTensor;if(!w)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');p=w(o,b,q(l),f)}else{let b=e[2];if(Array.isArray(b)){S=u*b.length,p=i._malloc(S),n.push(p);for(let w=0;w<b.length;w++){if(typeof b[w]!="string")throw new TypeError(`tensor data at index ${w} is not a string`);i.setValue(p+w*u,A(b[w],n),"*")}}else{let w=i.webnnIsGraphInput,C=i.webnnIsGraphOutput;if(l!=="string"&&w&&C){let E=i.UTF8ToString(r);if(w(o,E)||C(o,E)){let h=q(l);S=J(h,f),c="ml-tensor";let B=i.webnnCreateTemporaryTensor,U=i.webnnUploadTensor;if(!B||!U)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let P=await B(o,h,f);U(P,new Uint8Array(b.buffer,b.byteOffset,b.byteLength)),p=P}else S=b.byteLength,p=i._malloc(S),n.push(p),i.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,S),p)}else S=b.byteLength,p=i._malloc(S),n.push(p),i.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,S),p)}}let I=i.stackSave(),v=i.stackAlloc(4*f.length);try{f.forEach((w,C)=>i.setValue(v+C*u,w,u===4?"i32":"i64"));let b=i._OrtCreateTensor(q(l),p,S,v,f.length,$e(c));b===0&&g(`Can't create tensor for input/output. session=${o}, index=${a}.`),t.push(b)}finally{i.stackRestore(I)}},Xe=async(e,t,n,o,r,a)=>{let s=y(),i=s.PTR_SIZE,u=Y.get(e);if(!u)throw new Error(`cannot run inference. invalid session id: ${e}`);let l=u[0],f=u[1],d=u[2],c=u[3],p=u[4],S=u[5],I=t.length,v=o.length,b=0,w=[],C=[],E=[],h=[],B=s.stackSave(),U=s.stackAlloc(I*i),P=s.stackAlloc(I*i),z=s.stackAlloc(v*i),Z=s.stackAlloc(v*i);try{[b,w]=We(a),je("wasm prepareInputOutputTensor");for(let m=0;m<I;m++)await Ve(n[m],C,h,e,f[t[m]],t[m],p);for(let m=0;m<v;m++)await Ve(r[m],E,h,e,d[o[m]],I+o[m],p);ze("wasm prepareInputOutputTensor");for(let m=0;m<I;m++)s.setValue(U+m*i,C[m],"*"),s.setValue(P+m*i,f[t[m]],"*");for(let m=0;m<v;m++)s.setValue(z+m*i,E[m],"*"),s.setValue(Z+m*i,d[o[m]],"*");s.jsepOnRunStart?.(l),s.webnnOnRunStart?.(l);let x;x=await s._OrtRun(l,P,U,I,Z,v,z,b),x!==0&&g("failed to call OrtRun().");let k=[],Oe=[];je("wasm ProcessOutputTensor");for(let m=0;m<v;m++){let F=Number(s.getValue(z+m*i,"*"));if(F===E[m]){k.push(r[m]);continue}let Le=s.stackSave(),W=s.stackAlloc(4*i),H=!1,O,_=0;try{s._OrtGetTensorData(F,W,W+i,W+2*i,W+3*i)!==0&&g(`Can't access output tensor data on index ${m}.`);let le=i===4?"i32":"i64",ee=Number(s.getValue(W,le));_=s.getValue(W+i,"*");let Be=s.getValue(W+i*2,"*"),gt=Number(s.getValue(W+i*3,le)),R=[];for(let L=0;L<gt;L++)R.push(Number(s.getValue(Be+L*i,le)));s._OrtFree(Be)!==0&&g("Can't free memory for tensor dims.");let N=R.reduce((L,T)=>L*T,1);O=ae(ee);let X=c?.outputPreferredLocations[o[m]];if(O==="string"){if(X==="gpu-buffer"||X==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let L=[];for(let T=0;T<N;T++){let G=s.getValue(_+T*i,"*"),te=s.getValue(_+(T+1)*i,"*"),Pe=T===N-1?void 0:te-G;L.push(s.UTF8ToString(G,Pe))}k.push([O,R,L,"cpu"])}else if(X==="gpu-buffer"&&N>0){let L=s.jsepGetBuffer;if(!L)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let T=L(_),G=J(ee,N);if(G===void 0||!ie(O))throw new Error(`Unsupported data type: ${O}`);H=!0,k.push([O,R,{gpuBuffer:T,download:s.jsepCreateDownloader(T,G,O),dispose:()=>{s._OrtReleaseTensor(F)!==0&&g("Can't release tensor.")}},"gpu-buffer"])}else if(X==="ml-tensor"&&N>0){let L=s.webnnEnsureTensor,T=s.webnnIsGraphInputOutputTypeSupported;if(!L||!T)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(J(ee,N)===void 0||!ue(O))throw new Error(`Unsupported data type: ${O}`);if(!T(e,O,!1))throw new Error(`preferredLocation "ml-tensor" for ${O} output is not supported by current WebNN Context.`);let te=await L(e,_,ee,R,!1);H=!0,k.push([O,R,{mlTensor:te,download:s.webnnCreateMLTensorDownloader(_,O),dispose:()=>{s.webnnReleaseTensorId(_),s._OrtReleaseTensor(F)}},"ml-tensor"])}else if(X==="ml-tensor-cpu-output"&&N>0){let L=s.webnnCreateMLTensorDownloader(_,O)(),T=k.length;H=!0,Oe.push((async()=>{let G=[T,await L];return s.webnnReleaseTensorId(_),s._OrtReleaseTensor(F),G})()),k.push([O,R,[],"cpu"])}else{let L=Ne(O),T=new L(N);new Uint8Array(T.buffer,T.byteOffset,T.byteLength).set(s.HEAPU8.subarray(_,_+T.byteLength)),k.push([O,R,T,"cpu"])}}finally{s.stackRestore(Le),O==="string"&&_&&s._free(_),H||s._OrtReleaseTensor(F)}}c&&!p&&(s._OrtClearBoundOutputs(c.handle)!==0&&g("Can't clear bound outputs."),Y.set(e,[l,f,d,c,p,!1]));for(let[m,F]of await Promise.all(Oe))k[m][2]=F;return ze("wasm ProcessOutputTensor"),k}finally{s.webnnOnRunEnd?.(l),s.stackRestore(B),C.forEach(x=>s._OrtReleaseTensor(x)),E.forEach(x=>s._OrtReleaseTensor(x)),h.forEach(x=>s._free(x)),b!==0&&s._OrtReleaseRunOptions(b),w.forEach(x=>s._free(x))}},Ke=e=>{let t=y(),n=Y.get(e);if(!n)throw new Error("invalid session id");let o=n[0],r=t._OrtEndProfiling(o);r===0&&g("Can't get an profile file name."),t._OrtFree(r)}});import{env as he}from"onnxruntime-common";var Se,et,tt,rt,nt,ot,st,at,it,ut,Ie=M(()=>{"use strict";Qe();V();me();Se=!1,et=!1,tt=!1,rt=async()=>{if(!et){if(Se)throw new Error("multiple calls to 'initWasm()' detected.");if(tt)throw new Error("previous call to 'initWasm()' failed.");Se=!0;try{await Ce(he.wasm),await qe(he),et=!0}catch(e){throw tt=!0,e}finally{Se=!1}}},nt=async e=>{await Je(he,e)},ot=async e=>Ee(e),st=async(e,t)=>Ye(e,t),at=async e=>{Ze(e)},it=async(e,t,n,o,r,a)=>Xe(e,t,n,o,r,a),ut=async e=>{Ke(e)}});import{Tensor as Te,TRACE_FUNC_BEGIN as ct,TRACE_FUNC_END as ft}from"onnxruntime-common";var lt,Nt,ce,pt=M(()=>{"use strict";Ie();ge();re();ye();lt=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Nt=e=>{switch(e[3]){case"cpu":return new Te(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!ie(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:o,dispose:r}=e[2];return Te.fromGpuBuffer(n,{dataType:t,dims:e[1],download:o,dispose:r})}case"ml-tensor":{let t=e[0];if(!ue(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:n,download:o,dispose:r}=e[2];return Te.fromMLTensor(n,{dataType:t,dims:e[1],download:o,dispose:r})}default:throw new Error(`invalid data location: ${e[3]}`)}},ce=class{async fetchModelAndCopyToWasmMemory(t){return ot(await Q(t))}async loadModel(t,n){ct();let o;typeof t=="string"?$?o=await Q(t):o=await this.fetchModelAndCopyToWasmMemory(t):o=t,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await st(o,n),ft()}async dispose(){return at(this.sessionId)}async run(t,n,o){ct();let r=[],a=[];Object.entries(t).forEach(c=>{let p=c[0],S=c[1],I=this.inputNames.indexOf(p);if(I===-1)throw new Error(`invalid input '${p}'`);r.push(S),a.push(I)});let s=[],i=[];Object.entries(n).forEach(c=>{let p=c[0],S=c[1],I=this.outputNames.indexOf(p);if(I===-1)throw new Error(`invalid output '${p}'`);s.push(S),i.push(I)});let u=r.map((c,p)=>lt(c,()=>`input "${this.inputNames[a[p]]}"`)),l=s.map((c,p)=>c?lt(c,()=>`output "${this.outputNames[i[p]]}"`):null),f=await it(this.sessionId,a,u,i,l,o),d={};for(let c=0;c<f.length;c++)d[this.outputNames[i[c]]]=s[c]??Nt(f[c]);return ft(),d}startProfiling(){}endProfiling(){ut(this.sessionId)}}});var mt={};ht(mt,{OnnxruntimeWebAssemblyBackend:()=>fe,initializeFlags:()=>dt,wasmBackend:()=>Gt});import{env as D}from"onnxruntime-common";var dt,fe,Gt,bt=M(()=>{"use strict";Ie();pt();dt=()=>{(typeof D.wasm.initTimeout!="number"||D.wasm.initTimeout<0)&&(D.wasm.initTimeout=0);let e=D.wasm.simd;if(typeof e!="boolean"&&e!==void 0&&e!=="fixed"&&e!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),D.wasm.simd=!1),typeof D.wasm.proxy!="boolean"&&(D.wasm.proxy=!1),typeof D.wasm.trace!="boolean"&&(D.wasm.trace=!1),typeof D.wasm.numThreads!="number"||!Number.isInteger(D.wasm.numThreads)||D.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)D.wasm.numThreads=1;else{let t=typeof navigator>"u"?de("node:os").cpus().length:navigator.hardwareConcurrency;D.wasm.numThreads=Math.min(4,Math.ceil((t||1)/2))}},fe=class{async init(t){dt(),await rt(),await nt(t)}async createInferenceSessionHandler(t,n){let o=new ce;return await o.loadModel(t,n),o}},Gt=new fe});export*from"onnxruntime-common";import*as $t from"onnxruntime-common";import{registerBackend as wt,env as jt}from"onnxruntime-common";var _e="1.23.0";var zr=$t;{let e=(bt(),Tt(mt)).wasmBackend;wt("cpu",e,10),wt("wasm",e,10)}Object.defineProperty(jt.versions,"web",{value:_e,enumerable:!0});export{zr as default};
//# sourceMappingURL=ort.node.min.mjs.map
